[{"name":"fun HttpClient.wsExchange(receiver: HttpRequestBuilder.() -> Unit, sender: HttpRequestBuilder.() -> Unit): Exchange<Frame, Frame>","description":"io.github.alexandrepiveteau.echo.ktor.wsExchange","location":"library/echo-ktor-client/io.github.alexandrepiveteau.echo.ktor/ws-exchange.html","searchKeys":["wsExchange","fun HttpClient.wsExchange(receiver: HttpRequestBuilder.() -> Unit, sender: HttpRequestBuilder.() -> Unit): Exchange<Frame, Frame>","io.github.alexandrepiveteau.echo.ktor.wsExchange"]},{"name":"fun HttpClient.wsReceiveExchange(receiver: HttpRequestBuilder.() -> Unit): ReceiveExchange<Frame, Frame>","description":"io.github.alexandrepiveteau.echo.ktor.wsReceiveExchange","location":"library/echo-ktor-client/io.github.alexandrepiveteau.echo.ktor/ws-receive-exchange.html","searchKeys":["wsReceiveExchange","fun HttpClient.wsReceiveExchange(receiver: HttpRequestBuilder.() -> Unit): ReceiveExchange<Frame, Frame>","io.github.alexandrepiveteau.echo.ktor.wsReceiveExchange"]},{"name":"fun HttpClient.wsSendExchange(sender: HttpRequestBuilder.() -> Unit): SendExchange<Frame, Frame>","description":"io.github.alexandrepiveteau.echo.ktor.wsSendExchange","location":"library/echo-ktor-client/io.github.alexandrepiveteau.echo.ktor/ws-send-exchange.html","searchKeys":["wsSendExchange","fun HttpClient.wsSendExchange(sender: HttpRequestBuilder.() -> Unit): SendExchange<Frame, Frame>","io.github.alexandrepiveteau.echo.ktor.wsSendExchange"]},{"name":"fun HttpClient.wssExchange(receiver: HttpRequestBuilder.() -> Unit, sender: HttpRequestBuilder.() -> Unit): Exchange<Frame, Frame>","description":"io.github.alexandrepiveteau.echo.ktor.wssExchange","location":"library/echo-ktor-client/io.github.alexandrepiveteau.echo.ktor/wss-exchange.html","searchKeys":["wssExchange","fun HttpClient.wssExchange(receiver: HttpRequestBuilder.() -> Unit, sender: HttpRequestBuilder.() -> Unit): Exchange<Frame, Frame>","io.github.alexandrepiveteau.echo.ktor.wssExchange"]},{"name":"fun HttpClient.wssReceiveExchange(receiver: HttpRequestBuilder.() -> Unit): ReceiveExchange<Frame, Frame>","description":"io.github.alexandrepiveteau.echo.ktor.wssReceiveExchange","location":"library/echo-ktor-client/io.github.alexandrepiveteau.echo.ktor/wss-receive-exchange.html","searchKeys":["wssReceiveExchange","fun HttpClient.wssReceiveExchange(receiver: HttpRequestBuilder.() -> Unit): ReceiveExchange<Frame, Frame>","io.github.alexandrepiveteau.echo.ktor.wssReceiveExchange"]},{"name":"fun HttpClient.wssSendExchange(sender: HttpRequestBuilder.() -> Unit): SendExchange<Frame, Frame>","description":"io.github.alexandrepiveteau.echo.ktor.wssSendExchange","location":"library/echo-ktor-client/io.github.alexandrepiveteau.echo.ktor/wss-send-exchange.html","searchKeys":["wssSendExchange","fun HttpClient.wssSendExchange(sender: HttpRequestBuilder.() -> Unit): SendExchange<Frame, Frame>","io.github.alexandrepiveteau.echo.ktor.wssSendExchange"]},{"name":"fun Route.signaling(scope: CoroutineScope, session: (ApplicationCall) -> SessionIdentifier)","description":"io.github.alexandrepiveteau.echo.webrtc.server.signaling","location":"library/echo-webrtc-server/io.github.alexandrepiveteau.echo.webrtc.server/signaling.html","searchKeys":["signaling","fun Route.signaling(scope: CoroutineScope, session: (ApplicationCall) -> SessionIdentifier)","io.github.alexandrepiveteau.echo.webrtc.server.signaling"]},{"name":"fun SessionIdentifier(id: String)","description":"io.github.alexandrepiveteau.echo.webrtc.server.SessionIdentifier.SessionIdentifier","location":"library/echo-webrtc-server/io.github.alexandrepiveteau.echo.webrtc.server/-session-identifier/-session-identifier.html","searchKeys":["SessionIdentifier","fun SessionIdentifier(id: String)","io.github.alexandrepiveteau.echo.webrtc.server.SessionIdentifier.SessionIdentifier"]},{"name":"open override fun toString(): String","description":"io.github.alexandrepiveteau.echo.webrtc.server.SessionIdentifier.toString","location":"library/echo-webrtc-server/io.github.alexandrepiveteau.echo.webrtc.server/-session-identifier/to-string.html","searchKeys":["toString","open override fun toString(): String","io.github.alexandrepiveteau.echo.webrtc.server.SessionIdentifier.toString"]},{"name":"value class SessionIdentifier(id: String)","description":"io.github.alexandrepiveteau.echo.webrtc.server.SessionIdentifier","location":"library/echo-webrtc-server/io.github.alexandrepiveteau.echo.webrtc.server/-session-identifier/index.html","searchKeys":["SessionIdentifier","value class SessionIdentifier(id: String)","io.github.alexandrepiveteau.echo.webrtc.server.SessionIdentifier"]},{"name":"abstract operator fun contains(other: TreeNode): Boolean","description":"party.markdown.tree.TreeNode.contains","location":"markdown/markdown/party.markdown.tree/-tree-node/contains.html","searchKeys":["contains","abstract operator fun contains(other: TreeNode): Boolean","party.markdown.tree.TreeNode.contains"]},{"name":"abstract val id: TreeNodeIdentifier","description":"party.markdown.tree.TreeNode.id","location":"markdown/markdown/party.markdown.tree/-tree-node/id.html","searchKeys":["id","abstract val id: TreeNodeIdentifier","party.markdown.tree.TreeNode.id"]},{"name":"abstract val name: String?","description":"party.markdown.tree.TreeNode.name","location":"markdown/markdown/party.markdown.tree/-tree-node/name.html","searchKeys":["name","abstract val name: String?","party.markdown.tree.TreeNode.name"]},{"name":"class Cursors(mutable: MutableCursors)","description":"party.markdown.cursors.Cursors","location":"markdown/markdown/party.markdown.cursors/-cursors/index.html","searchKeys":["Cursors","class Cursors(mutable: MutableCursors)","party.markdown.cursors.Cursors"]},{"name":"class MutableCursors","description":"party.markdown.cursors.MutableCursors","location":"markdown/markdown/party.markdown.cursors/-mutable-cursors/index.html","searchKeys":["MutableCursors","class MutableCursors","party.markdown.cursors.MutableCursors"]},{"name":"class MutableMarkdownParty","description":"party.markdown.MutableMarkdownParty","location":"markdown/markdown/party.markdown/-mutable-markdown-party/index.html","searchKeys":["MutableMarkdownParty","class MutableMarkdownParty","party.markdown.MutableMarkdownParty"]},{"name":"class MutableRGA","description":"party.markdown.rga.MutableRGA","location":"markdown/markdown/party.markdown.rga/-mutable-r-g-a/index.html","searchKeys":["MutableRGA","class MutableRGA","party.markdown.rga.MutableRGA"]},{"name":"class MutableTree","description":"party.markdown.tree.MutableTree","location":"markdown/markdown/party.markdown.tree/-mutable-tree/index.html","searchKeys":["MutableTree","class MutableTree","party.markdown.tree.MutableTree"]},{"name":"const val NOT_FOUND: Int","description":"party.markdown.rga.MutableRGA.Companion.NOT_FOUND","location":"markdown/markdown/party.markdown.rga/-mutable-r-g-a/-companion/-n-o-t_-f-o-u-n-d.html","searchKeys":["NOT_FOUND","const val NOT_FOUND: Int","party.markdown.rga.MutableRGA.Companion.NOT_FOUND"]},{"name":"const val REMOVED: Char = '\\u0000'","description":"party.markdown.rga.MutableRGA.Companion.REMOVED","location":"markdown/markdown/party.markdown.rga/-mutable-r-g-a/-companion/-r-e-m-o-v-e-d.html","searchKeys":["REMOVED","const val REMOVED: Char = '\\u0000'","party.markdown.rga.MutableRGA.Companion.REMOVED"]},{"name":"data class ChangeName(val identifier: TreeNodeIdentifier, val name: String?) : TreeChange","description":"party.markdown.tree.TreeChange.ChangeName","location":"markdown/markdown/party.markdown.tree/-tree-change/-change-name/index.html","searchKeys":["ChangeName","data class ChangeName(val identifier: TreeNodeIdentifier, val name: String?) : TreeChange","party.markdown.tree.TreeChange.ChangeName"]},{"name":"data class CreateEdge(val parent: Int, val child: Int) : TreeChange","description":"party.markdown.tree.TreeChange.CreateEdge","location":"markdown/markdown/party.markdown.tree/-tree-change/-create-edge/index.html","searchKeys":["CreateEdge","data class CreateEdge(val parent: Int, val child: Int) : TreeChange","party.markdown.tree.TreeChange.CreateEdge"]},{"name":"data class Cursor(val actor: SiteIdentifier, val timestamp: Instant, val anchor: CursorAnchorIdentifier)","description":"party.markdown.cursors.Cursors.Cursor","location":"markdown/markdown/party.markdown.cursors/-cursors/-cursor/index.html","searchKeys":["Cursor","data class Cursor(val actor: SiteIdentifier, val timestamp: Instant, val anchor: CursorAnchorIdentifier)","party.markdown.cursors.Cursors.Cursor"]},{"name":"data class Cursor(val event: CursorEvent) : MarkdownPartyEvent","description":"party.markdown.MarkdownPartyEvent.Cursor","location":"markdown/markdown/party.markdown/-markdown-party-event/-cursor/index.html","searchKeys":["Cursor","data class Cursor(val event: CursorEvent) : MarkdownPartyEvent","party.markdown.MarkdownPartyEvent.Cursor"]},{"name":"data class Folder(val id: TreeNodeIdentifier, val children: Set<TreeNode>, val name: String?) : TreeNode","description":"party.markdown.tree.TreeNode.Folder","location":"markdown/markdown/party.markdown.tree/-tree-node/-folder/index.html","searchKeys":["Folder","data class Folder(val id: TreeNodeIdentifier, val children: Set<TreeNode>, val name: String?) : TreeNode","party.markdown.tree.TreeNode.Folder"]},{"name":"data class Insert(val offset: RGANodeIdentifier, val atom: Char) : RGAEvent","description":"party.markdown.rga.RGAEvent.Insert","location":"markdown/markdown/party.markdown.rga/-r-g-a-event/-insert/index.html","searchKeys":["Insert","data class Insert(val offset: RGANodeIdentifier, val atom: Char) : RGAEvent","party.markdown.rga.RGAEvent.Insert"]},{"name":"data class MarkdownFile(val id: TreeNodeIdentifier, val name: String?) : TreeNode","description":"party.markdown.tree.TreeNode.MarkdownFile","location":"markdown/markdown/party.markdown.tree/-tree-node/-markdown-file/index.html","searchKeys":["MarkdownFile","data class MarkdownFile(val id: TreeNodeIdentifier, val name: String?) : TreeNode","party.markdown.tree.TreeNode.MarkdownFile"]},{"name":"data class MarkdownParty(val cursors: Cursors, val tree: TreeNode, val documents: Map<TreeNodeIdentifier, Pair<CharArray, EventIdentifierArray>>)","description":"party.markdown.MarkdownParty","location":"markdown/markdown/party.markdown/-markdown-party/index.html","searchKeys":["MarkdownParty","data class MarkdownParty(val cursors: Cursors, val tree: TreeNode, val documents: Map<TreeNodeIdentifier, Pair<CharArray, EventIdentifierArray>>)","party.markdown.MarkdownParty"]},{"name":"data class Move(val element: TreeNodeIdentifier, val anchor: TreeNodeIdentifier) : TreeEvent","description":"party.markdown.tree.TreeEvent.Move","location":"markdown/markdown/party.markdown.tree/-tree-event/-move/index.html","searchKeys":["Move","data class Move(val element: TreeNodeIdentifier, val anchor: TreeNodeIdentifier) : TreeEvent","party.markdown.tree.TreeEvent.Move"]},{"name":"data class Move(val vertex: Int, val anchor: Int?) : TreeChange","description":"party.markdown.tree.TreeChange.Move","location":"markdown/markdown/party.markdown.tree/-tree-change/-move/index.html","searchKeys":["Move","data class Move(val vertex: Int, val anchor: Int?) : TreeChange","party.markdown.tree.TreeChange.Move"]},{"name":"data class MoveAfter(val node: TreeNodeIdentifier, val anchor: CursorAnchorIdentifier) : CursorEvent","description":"party.markdown.cursors.CursorEvent.MoveAfter","location":"markdown/markdown/party.markdown.cursors/-cursor-event/-move-after/index.html","searchKeys":["MoveAfter","data class MoveAfter(val node: TreeNodeIdentifier, val anchor: CursorAnchorIdentifier) : CursorEvent","party.markdown.cursors.CursorEvent.MoveAfter"]},{"name":"data class Name(val element: TreeNodeIdentifier, val name: String) : TreeEvent","description":"party.markdown.tree.TreeEvent.Name","location":"markdown/markdown/party.markdown.tree/-tree-event/-name/index.html","searchKeys":["Name","data class Name(val element: TreeNodeIdentifier, val name: String) : TreeEvent","party.markdown.tree.TreeEvent.Name"]},{"name":"data class RGA(val document: TreeNodeIdentifier, val event: RGAEvent) : MarkdownPartyEvent","description":"party.markdown.MarkdownPartyEvent.RGA","location":"markdown/markdown/party.markdown/-markdown-party-event/-r-g-a/index.html","searchKeys":["RGA","data class RGA(val document: TreeNodeIdentifier, val event: RGAEvent) : MarkdownPartyEvent","party.markdown.MarkdownPartyEvent.RGA"]},{"name":"data class Remove(val element: TreeNodeIdentifier) : TreeEvent","description":"party.markdown.tree.TreeEvent.Remove","location":"markdown/markdown/party.markdown.tree/-tree-event/-remove/index.html","searchKeys":["Remove","data class Remove(val element: TreeNodeIdentifier) : TreeEvent","party.markdown.tree.TreeEvent.Remove"]},{"name":"data class Remove(val offset: RGANodeIdentifier) : RGAEvent","description":"party.markdown.rga.RGAEvent.Remove","location":"markdown/markdown/party.markdown.rga/-r-g-a-event/-remove/index.html","searchKeys":["Remove","data class Remove(val offset: RGANodeIdentifier) : RGAEvent","party.markdown.rga.RGAEvent.Remove"]},{"name":"data class RemoveVertex(val vertex: Int, val identifier: TreeNodeIdentifier) : TreeChange","description":"party.markdown.tree.TreeChange.RemoveVertex","location":"markdown/markdown/party.markdown.tree/-tree-change/-remove-vertex/index.html","searchKeys":["RemoveVertex","data class RemoveVertex(val vertex: Int, val identifier: TreeNodeIdentifier) : TreeChange","party.markdown.tree.TreeChange.RemoveVertex"]},{"name":"data class Tree(val event: TreeEvent) : MarkdownPartyEvent","description":"party.markdown.MarkdownPartyEvent.Tree","location":"markdown/markdown/party.markdown/-markdown-party-event/-tree/index.html","searchKeys":["Tree","data class Tree(val event: TreeEvent) : MarkdownPartyEvent","party.markdown.MarkdownPartyEvent.Tree"]},{"name":"fun ChangeName(identifier: TreeNodeIdentifier, name: String?)","description":"party.markdown.tree.TreeChange.ChangeName.ChangeName","location":"markdown/markdown/party.markdown.tree/-tree-change/-change-name/-change-name.html","searchKeys":["ChangeName","fun ChangeName(identifier: TreeNodeIdentifier, name: String?)","party.markdown.tree.TreeChange.ChangeName.ChangeName"]},{"name":"fun ChangeScope<TreeChange>.move(id: TreeNodeIdentifier, anchor: TreeNodeIdentifier)","description":"party.markdown.tree.MutableTree.move","location":"markdown/markdown/party.markdown.tree/-mutable-tree/move.html","searchKeys":["move","fun ChangeScope<TreeChange>.move(id: TreeNodeIdentifier, anchor: TreeNodeIdentifier)","party.markdown.tree.MutableTree.move"]},{"name":"fun ChangeScope<TreeChange>.name(id: TreeNodeIdentifier, name: String)","description":"party.markdown.tree.MutableTree.name","location":"markdown/markdown/party.markdown.tree/-mutable-tree/name.html","searchKeys":["name","fun ChangeScope<TreeChange>.name(id: TreeNodeIdentifier, name: String)","party.markdown.tree.MutableTree.name"]},{"name":"fun ChangeScope<TreeChange>.newFile(id: TreeNodeIdentifier)","description":"party.markdown.tree.MutableTree.newFile","location":"markdown/markdown/party.markdown.tree/-mutable-tree/new-file.html","searchKeys":["newFile","fun ChangeScope<TreeChange>.newFile(id: TreeNodeIdentifier)","party.markdown.tree.MutableTree.newFile"]},{"name":"fun ChangeScope<TreeChange>.newFolder(id: TreeNodeIdentifier)","description":"party.markdown.tree.MutableTree.newFolder","location":"markdown/markdown/party.markdown.tree/-mutable-tree/new-folder.html","searchKeys":["newFolder","fun ChangeScope<TreeChange>.newFolder(id: TreeNodeIdentifier)","party.markdown.tree.MutableTree.newFolder"]},{"name":"fun ChangeScope<TreeChange>.remove(id: TreeNodeIdentifier)","description":"party.markdown.tree.MutableTree.remove","location":"markdown/markdown/party.markdown.tree/-mutable-tree/remove.html","searchKeys":["remove","fun ChangeScope<TreeChange>.remove(id: TreeNodeIdentifier)","party.markdown.tree.MutableTree.remove"]},{"name":"fun CreateEdge(parent: Int, child: Int)","description":"party.markdown.tree.TreeChange.CreateEdge.CreateEdge","location":"markdown/markdown/party.markdown.tree/-tree-change/-create-edge/-create-edge.html","searchKeys":["CreateEdge","fun CreateEdge(parent: Int, child: Int)","party.markdown.tree.TreeChange.CreateEdge.CreateEdge"]},{"name":"fun Cursor(actor: SiteIdentifier, timestamp: Instant, anchor: CursorAnchorIdentifier)","description":"party.markdown.cursors.Cursors.Cursor.Cursor","location":"markdown/markdown/party.markdown.cursors/-cursors/-cursor/-cursor.html","searchKeys":["Cursor","fun Cursor(actor: SiteIdentifier, timestamp: Instant, anchor: CursorAnchorIdentifier)","party.markdown.cursors.Cursors.Cursor.Cursor"]},{"name":"fun Cursor(event: CursorEvent)","description":"party.markdown.MarkdownPartyEvent.Cursor.Cursor","location":"markdown/markdown/party.markdown/-markdown-party-event/-cursor/-cursor.html","searchKeys":["Cursor","fun Cursor(event: CursorEvent)","party.markdown.MarkdownPartyEvent.Cursor.Cursor"]},{"name":"fun Cursors(mutable: MutableCursors)","description":"party.markdown.cursors.Cursors.Cursors","location":"markdown/markdown/party.markdown.cursors/-cursors/-cursors.html","searchKeys":["Cursors","fun Cursors(mutable: MutableCursors)","party.markdown.cursors.Cursors.Cursors"]},{"name":"fun Folder(id: TreeNodeIdentifier, children: Set<TreeNode>, name: String?)","description":"party.markdown.tree.TreeNode.Folder.Folder","location":"markdown/markdown/party.markdown.tree/-tree-node/-folder/-folder.html","searchKeys":["Folder","fun Folder(id: TreeNodeIdentifier, children: Set<TreeNode>, name: String?)","party.markdown.tree.TreeNode.Folder.Folder"]},{"name":"fun Insert(offset: RGANodeIdentifier, atom: Char)","description":"party.markdown.rga.RGAEvent.Insert.Insert","location":"markdown/markdown/party.markdown.rga/-r-g-a-event/-insert/-insert.html","searchKeys":["Insert","fun Insert(offset: RGANodeIdentifier, atom: Char)","party.markdown.rga.RGAEvent.Insert.Insert"]},{"name":"fun MarkdownFile(id: TreeNodeIdentifier, name: String?)","description":"party.markdown.tree.TreeNode.MarkdownFile.MarkdownFile","location":"markdown/markdown/party.markdown.tree/-tree-node/-markdown-file/-markdown-file.html","searchKeys":["MarkdownFile","fun MarkdownFile(id: TreeNodeIdentifier, name: String?)","party.markdown.tree.TreeNode.MarkdownFile.MarkdownFile"]},{"name":"fun MarkdownParty(cursors: Cursors, tree: TreeNode, documents: Map<TreeNodeIdentifier, Pair<CharArray, EventIdentifierArray>>)","description":"party.markdown.MarkdownParty.MarkdownParty","location":"markdown/markdown/party.markdown/-markdown-party/-markdown-party.html","searchKeys":["MarkdownParty","fun MarkdownParty(cursors: Cursors, tree: TreeNode, documents: Map<TreeNodeIdentifier, Pair<CharArray, EventIdentifierArray>>)","party.markdown.MarkdownParty.MarkdownParty"]},{"name":"fun MarkdownPartyHistory(): MutableHistory<MutableMarkdownParty>","description":"party.markdown.MarkdownPartyHistory","location":"markdown/markdown/party.markdown/-markdown-party-history.html","searchKeys":["MarkdownPartyHistory","fun MarkdownPartyHistory(): MutableHistory<MutableMarkdownParty>","party.markdown.MarkdownPartyHistory"]},{"name":"fun Move(element: TreeNodeIdentifier, anchor: TreeNodeIdentifier)","description":"party.markdown.tree.TreeEvent.Move.Move","location":"markdown/markdown/party.markdown.tree/-tree-event/-move/-move.html","searchKeys":["Move","fun Move(element: TreeNodeIdentifier, anchor: TreeNodeIdentifier)","party.markdown.tree.TreeEvent.Move.Move"]},{"name":"fun Move(vertex: Int, anchor: Int?)","description":"party.markdown.tree.TreeChange.Move.Move","location":"markdown/markdown/party.markdown.tree/-tree-change/-move/-move.html","searchKeys":["Move","fun Move(vertex: Int, anchor: Int?)","party.markdown.tree.TreeChange.Move.Move"]},{"name":"fun MoveAfter(node: TreeNodeIdentifier, anchor: CursorAnchorIdentifier)","description":"party.markdown.cursors.CursorEvent.MoveAfter.MoveAfter","location":"markdown/markdown/party.markdown.cursors/-cursor-event/-move-after/-move-after.html","searchKeys":["MoveAfter","fun MoveAfter(node: TreeNodeIdentifier, anchor: CursorAnchorIdentifier)","party.markdown.cursors.CursorEvent.MoveAfter.MoveAfter"]},{"name":"fun MutableCursors()","description":"party.markdown.cursors.MutableCursors.MutableCursors","location":"markdown/markdown/party.markdown.cursors/-mutable-cursors/-mutable-cursors.html","searchKeys":["MutableCursors","fun MutableCursors()","party.markdown.cursors.MutableCursors.MutableCursors"]},{"name":"fun MutableMarkdownParty()","description":"party.markdown.MutableMarkdownParty.MutableMarkdownParty","location":"markdown/markdown/party.markdown/-mutable-markdown-party/-mutable-markdown-party.html","searchKeys":["MutableMarkdownParty","fun MutableMarkdownParty()","party.markdown.MutableMarkdownParty.MutableMarkdownParty"]},{"name":"fun MutableRGA()","description":"party.markdown.rga.MutableRGA.MutableRGA","location":"markdown/markdown/party.markdown.rga/-mutable-r-g-a/-mutable-r-g-a.html","searchKeys":["MutableRGA","fun MutableRGA()","party.markdown.rga.MutableRGA.MutableRGA"]},{"name":"fun MutableTree()","description":"party.markdown.tree.MutableTree.MutableTree","location":"markdown/markdown/party.markdown.tree/-mutable-tree/-mutable-tree.html","searchKeys":["MutableTree","fun MutableTree()","party.markdown.tree.MutableTree.MutableTree"]},{"name":"fun Name(element: TreeNodeIdentifier, name: String)","description":"party.markdown.tree.TreeEvent.Name.Name","location":"markdown/markdown/party.markdown.tree/-tree-event/-name/-name.html","searchKeys":["Name","fun Name(element: TreeNodeIdentifier, name: String)","party.markdown.tree.TreeEvent.Name.Name"]},{"name":"fun RGA(document: TreeNodeIdentifier, event: RGAEvent)","description":"party.markdown.MarkdownPartyEvent.RGA.RGA","location":"markdown/markdown/party.markdown/-markdown-party-event/-r-g-a/-r-g-a.html","searchKeys":["RGA","fun RGA(document: TreeNodeIdentifier, event: RGAEvent)","party.markdown.MarkdownPartyEvent.RGA.RGA"]},{"name":"fun Remove(element: TreeNodeIdentifier)","description":"party.markdown.tree.TreeEvent.Remove.Remove","location":"markdown/markdown/party.markdown.tree/-tree-event/-remove/-remove.html","searchKeys":["Remove","fun Remove(element: TreeNodeIdentifier)","party.markdown.tree.TreeEvent.Remove.Remove"]},{"name":"fun Remove(offset: RGANodeIdentifier)","description":"party.markdown.rga.RGAEvent.Remove.Remove","location":"markdown/markdown/party.markdown.rga/-r-g-a-event/-remove/-remove.html","searchKeys":["Remove","fun Remove(offset: RGANodeIdentifier)","party.markdown.rga.RGAEvent.Remove.Remove"]},{"name":"fun RemoveVertex(vertex: Int, identifier: TreeNodeIdentifier)","description":"party.markdown.tree.TreeChange.RemoveVertex.RemoveVertex","location":"markdown/markdown/party.markdown.tree/-tree-change/-remove-vertex/-remove-vertex.html","searchKeys":["RemoveVertex","fun RemoveVertex(vertex: Int, identifier: TreeNodeIdentifier)","party.markdown.tree.TreeChange.RemoveVertex.RemoveVertex"]},{"name":"fun Tree(event: TreeEvent)","description":"party.markdown.MarkdownPartyEvent.Tree.Tree","location":"markdown/markdown/party.markdown/-markdown-party-event/-tree/-tree.html","searchKeys":["Tree","fun Tree(event: TreeEvent)","party.markdown.MarkdownPartyEvent.Tree.Tree"]},{"name":"fun backward(change: TreeChange)","description":"party.markdown.tree.MutableTree.backward","location":"markdown/markdown/party.markdown.tree/-mutable-tree/backward.html","searchKeys":["backward","fun backward(change: TreeChange)","party.markdown.tree.MutableTree.backward"]},{"name":"fun insert(id: EventIdentifier, node: TreeNodeIdentifier, anchor: CursorAnchorIdentifier)","description":"party.markdown.cursors.MutableCursors.insert","location":"markdown/markdown/party.markdown.cursors/-mutable-cursors/insert.html","searchKeys":["insert","fun insert(id: EventIdentifier, node: TreeNodeIdentifier, anchor: CursorAnchorIdentifier)","party.markdown.cursors.MutableCursors.insert"]},{"name":"fun insert(site: SiteIdentifier, seqno: SequenceNumber, value: Char, offset: EventIdentifier)","description":"party.markdown.rga.MutableRGA.insert","location":"markdown/markdown/party.markdown.rga/-mutable-r-g-a/insert.html","searchKeys":["insert","fun insert(site: SiteIdentifier, seqno: SequenceNumber, value: Char, offset: EventIdentifier)","party.markdown.rga.MutableRGA.insert"]},{"name":"fun move(id: EventIdentifier, node: TreeNodeIdentifier, anchor: CursorAnchorIdentifier)","description":"party.markdown.cursors.MutableCursors.move","location":"markdown/markdown/party.markdown.cursors/-mutable-cursors/move.html","searchKeys":["move","fun move(id: EventIdentifier, node: TreeNodeIdentifier, anchor: CursorAnchorIdentifier)","party.markdown.cursors.MutableCursors.move"]},{"name":"fun remove(offset: EventIdentifier)","description":"party.markdown.rga.MutableRGA.remove","location":"markdown/markdown/party.markdown.rga/-mutable-r-g-a/remove.html","searchKeys":["remove","fun remove(offset: EventIdentifier)","party.markdown.rga.MutableRGA.remove"]},{"name":"fun toCharArray(includeRemoved: Boolean = false): CharArray","description":"party.markdown.rga.MutableRGA.toCharArray","location":"markdown/markdown/party.markdown.rga/-mutable-r-g-a/to-char-array.html","searchKeys":["toCharArray","fun toCharArray(includeRemoved: Boolean = false): CharArray","party.markdown.rga.MutableRGA.toCharArray"]},{"name":"fun toCursors(): Cursors","description":"party.markdown.cursors.MutableCursors.toCursors","location":"markdown/markdown/party.markdown.cursors/-mutable-cursors/to-cursors.html","searchKeys":["toCursors","fun toCursors(): Cursors","party.markdown.cursors.MutableCursors.toCursors"]},{"name":"fun toEventIdentifierArray(includeRemoved: Boolean = false): EventIdentifierArray","description":"party.markdown.rga.MutableRGA.toEventIdentifierArray","location":"markdown/markdown/party.markdown.rga/-mutable-r-g-a/to-event-identifier-array.html","searchKeys":["toEventIdentifierArray","fun toEventIdentifierArray(includeRemoved: Boolean = false): EventIdentifierArray","party.markdown.rga.MutableRGA.toEventIdentifierArray"]},{"name":"fun toMarkdownParty(): MarkdownParty","description":"party.markdown.MutableMarkdownParty.toMarkdownParty","location":"markdown/markdown/party.markdown/-mutable-markdown-party/to-markdown-party.html","searchKeys":["toMarkdownParty","fun toMarkdownParty(): MarkdownParty","party.markdown.MutableMarkdownParty.toMarkdownParty"]},{"name":"fun toTree(): TreeNode","description":"party.markdown.tree.MutableTree.toTree","location":"markdown/markdown/party.markdown.tree/-mutable-tree/to-tree.html","searchKeys":["toTree","fun toTree(): TreeNode","party.markdown.tree.MutableTree.toTree"]},{"name":"interface TreeNode","description":"party.markdown.tree.TreeNode","location":"markdown/markdown/party.markdown.tree/-tree-node/index.html","searchKeys":["TreeNode","interface TreeNode","party.markdown.tree.TreeNode"]},{"name":"object Companion","description":"party.markdown.rga.MutableRGA.Companion","location":"markdown/markdown/party.markdown.rga/-mutable-r-g-a/-companion/index.html","searchKeys":["Companion","object Companion","party.markdown.rga.MutableRGA.Companion"]},{"name":"object CursorProjection : OneWayProjection<MutableCursors, MarkdownPartyEvent> ","description":"party.markdown.cursors.CursorProjection","location":"markdown/markdown/party.markdown.cursors/-cursor-projection/index.html","searchKeys":["CursorProjection","object CursorProjection : OneWayProjection<MutableCursors, MarkdownPartyEvent> ","party.markdown.cursors.CursorProjection"]},{"name":"object MarkdownPartyProjection : TwoWayProjection<MutableMarkdownParty, MarkdownPartyEvent, MarkdownPartyChange> ","description":"party.markdown.MarkdownPartyProjection","location":"markdown/markdown/party.markdown/-markdown-party-projection/index.html","searchKeys":["MarkdownPartyProjection","object MarkdownPartyProjection : TwoWayProjection<MutableMarkdownParty, MarkdownPartyEvent, MarkdownPartyChange> ","party.markdown.MarkdownPartyProjection"]},{"name":"object NewFile : TreeEvent","description":"party.markdown.tree.TreeEvent.NewFile","location":"markdown/markdown/party.markdown.tree/-tree-event/-new-file/index.html","searchKeys":["NewFile","object NewFile : TreeEvent","party.markdown.tree.TreeEvent.NewFile"]},{"name":"object NewFolder : TreeEvent","description":"party.markdown.tree.TreeEvent.NewFolder","location":"markdown/markdown/party.markdown.tree/-tree-event/-new-folder/index.html","searchKeys":["NewFolder","object NewFolder : TreeEvent","party.markdown.tree.TreeEvent.NewFolder"]},{"name":"object RGAProjection : OneWayProjection<MutableRGA, RGAEvent> ","description":"party.markdown.rga.RGAProjection","location":"markdown/markdown/party.markdown.rga/-r-g-a-projection/index.html","searchKeys":["RGAProjection","object RGAProjection : OneWayProjection<MutableRGA, RGAEvent> ","party.markdown.rga.RGAProjection"]},{"name":"object TreeProjection : TwoWayProjection<MutableTree, TreeEvent, TreeChange> ","description":"party.markdown.tree.TreeProjection","location":"markdown/markdown/party.markdown.tree/-tree-projection/index.html","searchKeys":["TreeProjection","object TreeProjection : TwoWayProjection<MutableTree, TreeEvent, TreeChange> ","party.markdown.tree.TreeProjection"]},{"name":"open operator override fun contains(other: TreeNode): Boolean","description":"party.markdown.tree.TreeNode.Folder.contains","location":"markdown/markdown/party.markdown.tree/-tree-node/-folder/contains.html","searchKeys":["contains","open operator override fun contains(other: TreeNode): Boolean","party.markdown.tree.TreeNode.Folder.contains"]},{"name":"open operator override fun contains(other: TreeNode): Boolean","description":"party.markdown.tree.TreeNode.MarkdownFile.contains","location":"markdown/markdown/party.markdown.tree/-tree-node/-markdown-file/contains.html","searchKeys":["contains","open operator override fun contains(other: TreeNode): Boolean","party.markdown.tree.TreeNode.MarkdownFile.contains"]},{"name":"open override fun ChangeScope<MarkdownPartyChange>.forward(model: MutableMarkdownParty, id: EventIdentifier, event: MarkdownPartyEvent): MutableMarkdownParty","description":"party.markdown.MarkdownPartyProjection.forward","location":"markdown/markdown/party.markdown/-markdown-party-projection/forward.html","searchKeys":["forward","open override fun ChangeScope<MarkdownPartyChange>.forward(model: MutableMarkdownParty, id: EventIdentifier, event: MarkdownPartyEvent): MutableMarkdownParty","party.markdown.MarkdownPartyProjection.forward"]},{"name":"open override fun ChangeScope<TreeChange>.forward(model: MutableTree, id: EventIdentifier, event: TreeEvent): MutableTree","description":"party.markdown.tree.TreeProjection.forward","location":"markdown/markdown/party.markdown.tree/-tree-projection/forward.html","searchKeys":["forward","open override fun ChangeScope<TreeChange>.forward(model: MutableTree, id: EventIdentifier, event: TreeEvent): MutableTree","party.markdown.tree.TreeProjection.forward"]},{"name":"open override fun backward(model: MutableMarkdownParty, id: EventIdentifier, event: MarkdownPartyEvent, change: MarkdownPartyChange): MutableMarkdownParty","description":"party.markdown.MarkdownPartyProjection.backward","location":"markdown/markdown/party.markdown/-markdown-party-projection/backward.html","searchKeys":["backward","open override fun backward(model: MutableMarkdownParty, id: EventIdentifier, event: MarkdownPartyEvent, change: MarkdownPartyChange): MutableMarkdownParty","party.markdown.MarkdownPartyProjection.backward"]},{"name":"open override fun backward(model: MutableTree, id: EventIdentifier, event: TreeEvent, change: TreeChange): MutableTree","description":"party.markdown.tree.TreeProjection.backward","location":"markdown/markdown/party.markdown.tree/-tree-projection/backward.html","searchKeys":["backward","open override fun backward(model: MutableTree, id: EventIdentifier, event: TreeEvent, change: TreeChange): MutableTree","party.markdown.tree.TreeProjection.backward"]},{"name":"open override fun forward(model: MutableCursors, identifier: EventIdentifier, event: MarkdownPartyEvent): MutableCursors","description":"party.markdown.cursors.CursorProjection.forward","location":"markdown/markdown/party.markdown.cursors/-cursor-projection/forward.html","searchKeys":["forward","open override fun forward(model: MutableCursors, identifier: EventIdentifier, event: MarkdownPartyEvent): MutableCursors","party.markdown.cursors.CursorProjection.forward"]},{"name":"open override fun forward(model: MutableRGA, identifier: EventIdentifier, event: RGAEvent): MutableRGA","description":"party.markdown.rga.RGAProjection.forward","location":"markdown/markdown/party.markdown.rga/-r-g-a-projection/forward.html","searchKeys":["forward","open override fun forward(model: MutableRGA, identifier: EventIdentifier, event: RGAEvent): MutableRGA","party.markdown.rga.RGAProjection.forward"]},{"name":"open override val id: TreeNodeIdentifier","description":"party.markdown.tree.TreeNode.Folder.id","location":"markdown/markdown/party.markdown.tree/-tree-node/-folder/id.html","searchKeys":["id","open override val id: TreeNodeIdentifier","party.markdown.tree.TreeNode.Folder.id"]},{"name":"open override val id: TreeNodeIdentifier","description":"party.markdown.tree.TreeNode.MarkdownFile.id","location":"markdown/markdown/party.markdown.tree/-tree-node/-markdown-file/id.html","searchKeys":["id","open override val id: TreeNodeIdentifier","party.markdown.tree.TreeNode.MarkdownFile.id"]},{"name":"open override val name: String?","description":"party.markdown.tree.TreeNode.Folder.name","location":"markdown/markdown/party.markdown.tree/-tree-node/-folder/name.html","searchKeys":["name","open override val name: String?","party.markdown.tree.TreeNode.Folder.name"]},{"name":"open override val name: String?","description":"party.markdown.tree.TreeNode.MarkdownFile.name","location":"markdown/markdown/party.markdown.tree/-tree-node/-markdown-file/name.html","searchKeys":["name","open override val name: String?","party.markdown.tree.TreeNode.MarkdownFile.name"]},{"name":"operator fun get(node: TreeNodeIdentifier): Set<Cursors.Cursor>","description":"party.markdown.cursors.Cursors.get","location":"markdown/markdown/party.markdown.cursors/-cursors/get.html","searchKeys":["get","operator fun get(node: TreeNodeIdentifier): Set<Cursors.Cursor>","party.markdown.cursors.Cursors.get"]},{"name":"sealed class CursorEvent","description":"party.markdown.cursors.CursorEvent","location":"markdown/markdown/party.markdown.cursors/-cursor-event/index.html","searchKeys":["CursorEvent","sealed class CursorEvent","party.markdown.cursors.CursorEvent"]},{"name":"sealed class MarkdownPartyEvent","description":"party.markdown.MarkdownPartyEvent","location":"markdown/markdown/party.markdown/-markdown-party-event/index.html","searchKeys":["MarkdownPartyEvent","sealed class MarkdownPartyEvent","party.markdown.MarkdownPartyEvent"]},{"name":"sealed class RGAEvent","description":"party.markdown.rga.RGAEvent","location":"markdown/markdown/party.markdown.rga/-r-g-a-event/index.html","searchKeys":["RGAEvent","sealed class RGAEvent","party.markdown.rga.RGAEvent"]},{"name":"sealed class TreeChange","description":"party.markdown.tree.TreeChange","location":"markdown/markdown/party.markdown.tree/-tree-change/index.html","searchKeys":["TreeChange","sealed class TreeChange","party.markdown.tree.TreeChange"]},{"name":"sealed class TreeEvent","description":"party.markdown.tree.TreeEvent","location":"markdown/markdown/party.markdown.tree/-tree-event/index.html","searchKeys":["TreeEvent","sealed class TreeEvent","party.markdown.tree.TreeEvent"]},{"name":"val CursorRoot: EventIdentifier","description":"party.markdown.cursors.CursorRoot","location":"markdown/markdown/party.markdown.cursors/-cursor-root.html","searchKeys":["CursorRoot","val CursorRoot: EventIdentifier","party.markdown.cursors.CursorRoot"]},{"name":"val RGANodeRoot: EventIdentifier","description":"party.markdown.rga.RGANodeRoot","location":"markdown/markdown/party.markdown.rga/-r-g-a-node-root.html","searchKeys":["RGANodeRoot","val RGANodeRoot: EventIdentifier","party.markdown.rga.RGANodeRoot"]},{"name":"val TreeNodeRoot: EventIdentifier","description":"party.markdown.tree.TreeNodeRoot","location":"markdown/markdown/party.markdown.tree/-tree-node-root.html","searchKeys":["TreeNodeRoot","val TreeNodeRoot: EventIdentifier","party.markdown.tree.TreeNodeRoot"]},{"name":"val actor: SiteIdentifier","description":"party.markdown.cursors.Cursors.Cursor.actor","location":"markdown/markdown/party.markdown.cursors/-cursors/-cursor/actor.html","searchKeys":["actor","val actor: SiteIdentifier","party.markdown.cursors.Cursors.Cursor.actor"]},{"name":"val anchor: CursorAnchorIdentifier","description":"party.markdown.cursors.CursorEvent.MoveAfter.anchor","location":"markdown/markdown/party.markdown.cursors/-cursor-event/-move-after/anchor.html","searchKeys":["anchor","val anchor: CursorAnchorIdentifier","party.markdown.cursors.CursorEvent.MoveAfter.anchor"]},{"name":"val anchor: CursorAnchorIdentifier","description":"party.markdown.cursors.Cursors.Cursor.anchor","location":"markdown/markdown/party.markdown.cursors/-cursors/-cursor/anchor.html","searchKeys":["anchor","val anchor: CursorAnchorIdentifier","party.markdown.cursors.Cursors.Cursor.anchor"]},{"name":"val anchor: Int?","description":"party.markdown.tree.TreeChange.Move.anchor","location":"markdown/markdown/party.markdown.tree/-tree-change/-move/anchor.html","searchKeys":["anchor","val anchor: Int?","party.markdown.tree.TreeChange.Move.anchor"]},{"name":"val anchor: TreeNodeIdentifier","description":"party.markdown.tree.TreeEvent.Move.anchor","location":"markdown/markdown/party.markdown.tree/-tree-event/-move/anchor.html","searchKeys":["anchor","val anchor: TreeNodeIdentifier","party.markdown.tree.TreeEvent.Move.anchor"]},{"name":"val atom: Char","description":"party.markdown.rga.RGAEvent.Insert.atom","location":"markdown/markdown/party.markdown.rga/-r-g-a-event/-insert/atom.html","searchKeys":["atom","val atom: Char","party.markdown.rga.RGAEvent.Insert.atom"]},{"name":"val child: Int","description":"party.markdown.tree.TreeChange.CreateEdge.child","location":"markdown/markdown/party.markdown.tree/-tree-change/-create-edge/child.html","searchKeys":["child","val child: Int","party.markdown.tree.TreeChange.CreateEdge.child"]},{"name":"val children: Set<TreeNode>","description":"party.markdown.tree.TreeNode.Folder.children","location":"markdown/markdown/party.markdown.tree/-tree-node/-folder/children.html","searchKeys":["children","val children: Set<TreeNode>","party.markdown.tree.TreeNode.Folder.children"]},{"name":"val cursors: Cursors","description":"party.markdown.MarkdownParty.cursors","location":"markdown/markdown/party.markdown/-markdown-party/cursors.html","searchKeys":["cursors","val cursors: Cursors","party.markdown.MarkdownParty.cursors"]},{"name":"val document: TreeNodeIdentifier","description":"party.markdown.MarkdownPartyEvent.RGA.document","location":"markdown/markdown/party.markdown/-markdown-party-event/-r-g-a/document.html","searchKeys":["document","val document: TreeNodeIdentifier","party.markdown.MarkdownPartyEvent.RGA.document"]},{"name":"val documents: Map<TreeNodeIdentifier, Pair<CharArray, EventIdentifierArray>>","description":"party.markdown.MarkdownParty.documents","location":"markdown/markdown/party.markdown/-markdown-party/documents.html","searchKeys":["documents","val documents: Map<TreeNodeIdentifier, Pair<CharArray, EventIdentifierArray>>","party.markdown.MarkdownParty.documents"]},{"name":"val element: TreeNodeIdentifier","description":"party.markdown.tree.TreeEvent.Move.element","location":"markdown/markdown/party.markdown.tree/-tree-event/-move/element.html","searchKeys":["element","val element: TreeNodeIdentifier","party.markdown.tree.TreeEvent.Move.element"]},{"name":"val element: TreeNodeIdentifier","description":"party.markdown.tree.TreeEvent.Name.element","location":"markdown/markdown/party.markdown.tree/-tree-event/-name/element.html","searchKeys":["element","val element: TreeNodeIdentifier","party.markdown.tree.TreeEvent.Name.element"]},{"name":"val element: TreeNodeIdentifier","description":"party.markdown.tree.TreeEvent.Remove.element","location":"markdown/markdown/party.markdown.tree/-tree-event/-remove/element.html","searchKeys":["element","val element: TreeNodeIdentifier","party.markdown.tree.TreeEvent.Remove.element"]},{"name":"val event: CursorEvent","description":"party.markdown.MarkdownPartyEvent.Cursor.event","location":"markdown/markdown/party.markdown/-markdown-party-event/-cursor/event.html","searchKeys":["event","val event: CursorEvent","party.markdown.MarkdownPartyEvent.Cursor.event"]},{"name":"val event: RGAEvent","description":"party.markdown.MarkdownPartyEvent.RGA.event","location":"markdown/markdown/party.markdown/-markdown-party-event/-r-g-a/event.html","searchKeys":["event","val event: RGAEvent","party.markdown.MarkdownPartyEvent.RGA.event"]},{"name":"val event: TreeEvent","description":"party.markdown.MarkdownPartyEvent.Tree.event","location":"markdown/markdown/party.markdown/-markdown-party-event/-tree/event.html","searchKeys":["event","val event: TreeEvent","party.markdown.MarkdownPartyEvent.Tree.event"]},{"name":"val identifier: TreeNodeIdentifier","description":"party.markdown.tree.TreeChange.ChangeName.identifier","location":"markdown/markdown/party.markdown.tree/-tree-change/-change-name/identifier.html","searchKeys":["identifier","val identifier: TreeNodeIdentifier","party.markdown.tree.TreeChange.ChangeName.identifier"]},{"name":"val identifier: TreeNodeIdentifier","description":"party.markdown.tree.TreeChange.RemoveVertex.identifier","location":"markdown/markdown/party.markdown.tree/-tree-change/-remove-vertex/identifier.html","searchKeys":["identifier","val identifier: TreeNodeIdentifier","party.markdown.tree.TreeChange.RemoveVertex.identifier"]},{"name":"val name: String","description":"party.markdown.tree.TreeEvent.Name.name","location":"markdown/markdown/party.markdown.tree/-tree-event/-name/name.html","searchKeys":["name","val name: String","party.markdown.tree.TreeEvent.Name.name"]},{"name":"val name: String?","description":"party.markdown.tree.TreeChange.ChangeName.name","location":"markdown/markdown/party.markdown.tree/-tree-change/-change-name/name.html","searchKeys":["name","val name: String?","party.markdown.tree.TreeChange.ChangeName.name"]},{"name":"val node: TreeNodeIdentifier","description":"party.markdown.cursors.CursorEvent.MoveAfter.node","location":"markdown/markdown/party.markdown.cursors/-cursor-event/-move-after/node.html","searchKeys":["node","val node: TreeNodeIdentifier","party.markdown.cursors.CursorEvent.MoveAfter.node"]},{"name":"val offset: RGANodeIdentifier","description":"party.markdown.rga.RGAEvent.Insert.offset","location":"markdown/markdown/party.markdown.rga/-r-g-a-event/-insert/offset.html","searchKeys":["offset","val offset: RGANodeIdentifier","party.markdown.rga.RGAEvent.Insert.offset"]},{"name":"val offset: RGANodeIdentifier","description":"party.markdown.rga.RGAEvent.Remove.offset","location":"markdown/markdown/party.markdown.rga/-r-g-a-event/-remove/offset.html","searchKeys":["offset","val offset: RGANodeIdentifier","party.markdown.rga.RGAEvent.Remove.offset"]},{"name":"val parent: Int","description":"party.markdown.tree.TreeChange.CreateEdge.parent","location":"markdown/markdown/party.markdown.tree/-tree-change/-create-edge/parent.html","searchKeys":["parent","val parent: Int","party.markdown.tree.TreeChange.CreateEdge.parent"]},{"name":"val timestamp: Instant","description":"party.markdown.cursors.Cursors.Cursor.timestamp","location":"markdown/markdown/party.markdown.cursors/-cursors/-cursor/timestamp.html","searchKeys":["timestamp","val timestamp: Instant","party.markdown.cursors.Cursors.Cursor.timestamp"]},{"name":"val tree: TreeNode","description":"party.markdown.MarkdownParty.tree","location":"markdown/markdown/party.markdown/-markdown-party/tree.html","searchKeys":["tree","val tree: TreeNode","party.markdown.MarkdownParty.tree"]},{"name":"val vertex: Int","description":"party.markdown.tree.TreeChange.Move.vertex","location":"markdown/markdown/party.markdown.tree/-tree-change/-move/vertex.html","searchKeys":["vertex","val vertex: Int","party.markdown.tree.TreeChange.Move.vertex"]},{"name":"val vertex: Int","description":"party.markdown.tree.TreeChange.RemoveVertex.vertex","location":"markdown/markdown/party.markdown.tree/-tree-change/-remove-vertex/vertex.html","searchKeys":["vertex","val vertex: Int","party.markdown.tree.TreeChange.RemoveVertex.vertex"]},{"name":"fun Exchange<Frame, Frame>.decodeFromFrame(): Exchange<Message.Incoming, Message.Outgoing>","description":"io.github.alexandrepiveteau.echo.serialization.decodeFromFrame","location":"library/echo-ktor-websockets/io.github.alexandrepiveteau.echo.serialization/decode-from-frame.html","searchKeys":["decodeFromFrame","fun Exchange<Frame, Frame>.decodeFromFrame(): Exchange<Message.Incoming, Message.Outgoing>","io.github.alexandrepiveteau.echo.serialization.decodeFromFrame"]},{"name":"fun Exchange<Message.Incoming, Message.Outgoing>.encodeToFrame(): Exchange<Frame, Frame>","description":"io.github.alexandrepiveteau.echo.serialization.encodeToFrame","location":"library/echo-ktor-websockets/io.github.alexandrepiveteau.echo.serialization/encode-to-frame.html","searchKeys":["encodeToFrame","fun Exchange<Message.Incoming, Message.Outgoing>.encodeToFrame(): Exchange<Frame, Frame>","io.github.alexandrepiveteau.echo.serialization.encodeToFrame"]},{"name":"Continuous()","description":"io.github.alexandrepiveteau.echo.SyncStrategy.Continuous","location":"library/echo/io.github.alexandrepiveteau.echo/-sync-strategy/-continuous/index.html","searchKeys":["Continuous","Continuous()","io.github.alexandrepiveteau.echo.SyncStrategy.Continuous"]},{"name":"Once()","description":"io.github.alexandrepiveteau.echo.SyncStrategy.Once","location":"library/echo/io.github.alexandrepiveteau.echo/-sync-strategy/-once/index.html","searchKeys":["Once","Once()","io.github.alexandrepiveteau.echo.SyncStrategy.Once"]},{"name":"abstract fun ChangeScope<C>.forward(model: M, id: EventIdentifier, event: T): M","description":"io.github.alexandrepiveteau.echo.projections.TwoWayProjection.forward","location":"library/echo/io.github.alexandrepiveteau.echo.projections/-two-way-projection/forward.html","searchKeys":["forward","abstract fun ChangeScope<C>.forward(model: M, id: EventIdentifier, event: T): M","io.github.alexandrepiveteau.echo.projections.TwoWayProjection.forward"]},{"name":"abstract fun backward(model: M, id: EventIdentifier, event: T, change: C): M","description":"io.github.alexandrepiveteau.echo.projections.TwoWayProjection.backward","location":"library/echo/io.github.alexandrepiveteau.echo.projections/-two-way-projection/backward.html","searchKeys":["backward","abstract fun backward(model: M, id: EventIdentifier, event: T, change: C): M","io.github.alexandrepiveteau.echo.projections.TwoWayProjection.backward"]},{"name":"abstract fun forward(model: M, identifier: EventIdentifier, event: T): M","description":"io.github.alexandrepiveteau.echo.projections.OneWayProjection.forward","location":"library/echo/io.github.alexandrepiveteau.echo.projections/-one-way-projection/forward.html","searchKeys":["forward","abstract fun forward(model: M, identifier: EventIdentifier, event: T): M","io.github.alexandrepiveteau.echo.projections.OneWayProjection.forward"]},{"name":"abstract fun push(value: T)","description":"io.github.alexandrepiveteau.echo.projections.ChangeScope.push","location":"library/echo/io.github.alexandrepiveteau.echo.projections/-change-scope/push.html","searchKeys":["push","abstract fun push(value: T)","io.github.alexandrepiveteau.echo.projections.ChangeScope.push"]},{"name":"abstract fun receive(incoming: Flow<O>): Flow<I>","description":"io.github.alexandrepiveteau.echo.ReceiveExchange.receive","location":"library/echo/io.github.alexandrepiveteau.echo/-receive-exchange/receive.html","searchKeys":["receive","abstract fun receive(incoming: Flow<O>): Flow<I>","io.github.alexandrepiveteau.echo.ReceiveExchange.receive"]},{"name":"abstract fun send(incoming: Flow<I>): Flow<O>","description":"io.github.alexandrepiveteau.echo.SendExchange.send","location":"library/echo/io.github.alexandrepiveteau.echo/-send-exchange/send.html","searchKeys":["send","abstract fun send(incoming: Flow<I>): Flow<O>","io.github.alexandrepiveteau.echo.SendExchange.send"]},{"name":"abstract fun yield(event: T): EventIdentifier","description":"io.github.alexandrepiveteau.echo.events.EventScope.yield","location":"library/echo/io.github.alexandrepiveteau.echo.events/-event-scope/yield.html","searchKeys":["yield","abstract fun yield(event: T): EventIdentifier","io.github.alexandrepiveteau.echo.events.EventScope.yield"]},{"name":"abstract suspend fun <R> event(block: EventScope<T>.(M) -> R): R","description":"io.github.alexandrepiveteau.echo.MutableSite.event","location":"library/echo/io.github.alexandrepiveteau.echo/-mutable-site/event.html","searchKeys":["event","abstract suspend fun <R> event(block: EventScope<T>.(M) -> R): R","io.github.alexandrepiveteau.echo.MutableSite.event"]},{"name":"abstract val identifier: SiteIdentifier","description":"io.github.alexandrepiveteau.echo.MutableSite.identifier","location":"library/echo/io.github.alexandrepiveteau.echo/-mutable-site/identifier.html","searchKeys":["identifier","abstract val identifier: SiteIdentifier","io.github.alexandrepiveteau.echo.MutableSite.identifier"]},{"name":"abstract val value: Flow<M>","description":"io.github.alexandrepiveteau.echo.Site.value","location":"library/echo/io.github.alexandrepiveteau.echo/-site/value.html","searchKeys":["value","abstract val value: Flow<M>","io.github.alexandrepiveteau.echo.Site.value"]},{"name":"class OneWayMutableProjection<M, T>(projection: OneWayProjection<M, T>, eventSerializer: KSerializer<T>, format: BinaryFormat) : MutableProjection<M> ","description":"io.github.alexandrepiveteau.echo.projections.OneWayMutableProjection","location":"library/echo/io.github.alexandrepiveteau.echo.projections/-one-way-mutable-projection/index.html","searchKeys":["OneWayMutableProjection","class OneWayMutableProjection<M, T>(projection: OneWayProjection<M, T>, eventSerializer: KSerializer<T>, format: BinaryFormat) : MutableProjection<M> ","io.github.alexandrepiveteau.echo.projections.OneWayMutableProjection"]},{"name":"class TwoWayMutableProjection<M, T, C>(projection: TwoWayProjection<M, T, C>, changeSerializer: KSerializer<C>, eventSerializer: KSerializer<T>, format: BinaryFormat) : MutableProjection<M> ","description":"io.github.alexandrepiveteau.echo.projections.TwoWayMutableProjection","location":"library/echo/io.github.alexandrepiveteau.echo.projections/-two-way-mutable-projection/index.html","searchKeys":["TwoWayMutableProjection","class TwoWayMutableProjection<M, T, C>(projection: TwoWayProjection<M, T, C>, changeSerializer: KSerializer<C>, eventSerializer: KSerializer<T>, format: BinaryFormat) : MutableProjection<M> ","io.github.alexandrepiveteau.echo.projections.TwoWayMutableProjection"]},{"name":"data class Acknowledge(val site: SiteIdentifier, val nextSeqno: SequenceNumber) : Message.Outgoing","description":"io.github.alexandrepiveteau.echo.protocol.Message.Outgoing.Acknowledge","location":"library/echo/io.github.alexandrepiveteau.echo.protocol/-message/-outgoing/-acknowledge/index.html","searchKeys":["Acknowledge","data class Acknowledge(val site: SiteIdentifier, val nextSeqno: SequenceNumber) : Message.Outgoing","io.github.alexandrepiveteau.echo.protocol.Message.Outgoing.Acknowledge"]},{"name":"data class Advertisement(val site: SiteIdentifier, val nextSeqno: SequenceNumber) : Message.Incoming","description":"io.github.alexandrepiveteau.echo.protocol.Message.Incoming.Advertisement","location":"library/echo/io.github.alexandrepiveteau.echo.protocol/-message/-incoming/-advertisement/index.html","searchKeys":["Advertisement","data class Advertisement(val site: SiteIdentifier, val nextSeqno: SequenceNumber) : Message.Incoming","io.github.alexandrepiveteau.echo.protocol.Message.Incoming.Advertisement"]},{"name":"data class Events(val events: List<Event> = emptyList()) : Message.Incoming","description":"io.github.alexandrepiveteau.echo.protocol.Message.Incoming.Events","location":"library/echo/io.github.alexandrepiveteau.echo.protocol/-message/-incoming/-events/index.html","searchKeys":["Events","data class Events(val events: List<Event> = emptyList()) : Message.Incoming","io.github.alexandrepiveteau.echo.protocol.Message.Incoming.Events"]},{"name":"data class Request(val site: SiteIdentifier, val count: UInt) : Message.Outgoing","description":"io.github.alexandrepiveteau.echo.protocol.Message.Outgoing.Request","location":"library/echo/io.github.alexandrepiveteau.echo.protocol/-message/-outgoing/-request/index.html","searchKeys":["Request","data class Request(val site: SiteIdentifier, val count: UInt) : Message.Outgoing","io.github.alexandrepiveteau.echo.protocol.Message.Outgoing.Request"]},{"name":"enum SyncStrategy : Enum<SyncStrategy> ","description":"io.github.alexandrepiveteau.echo.SyncStrategy","location":"library/echo/io.github.alexandrepiveteau.echo/-sync-strategy/index.html","searchKeys":["SyncStrategy","enum SyncStrategy : Enum<SyncStrategy> ","io.github.alexandrepiveteau.echo.SyncStrategy"]},{"name":"fun <I, O> Exchange<I, O>.buffer(capacity: Int = Channel.BUFFERED): Exchange<I, O>","description":"io.github.alexandrepiveteau.echo.buffer","location":"library/echo/io.github.alexandrepiveteau.echo/buffer.html","searchKeys":["buffer","fun <I, O> Exchange<I, O>.buffer(capacity: Int = Channel.BUFFERED): Exchange<I, O>","io.github.alexandrepiveteau.echo.buffer"]},{"name":"fun <I, O> Exchange<I, O>.flowOn(context: CoroutineContext): Exchange<I, O>","description":"io.github.alexandrepiveteau.echo.flowOn","location":"library/echo/io.github.alexandrepiveteau.echo/flow-on.html","searchKeys":["flowOn","fun <I, O> Exchange<I, O>.flowOn(context: CoroutineContext): Exchange<I, O>","io.github.alexandrepiveteau.echo.flowOn"]},{"name":"fun <I, O> ReceiveExchange<I, O>.asReceiveExchange(): ReceiveExchange<I, O>","description":"io.github.alexandrepiveteau.echo.asReceiveExchange","location":"library/echo/io.github.alexandrepiveteau.echo/as-receive-exchange.html","searchKeys":["asReceiveExchange","fun <I, O> ReceiveExchange<I, O>.asReceiveExchange(): ReceiveExchange<I, O>","io.github.alexandrepiveteau.echo.asReceiveExchange"]},{"name":"fun <I, O> SendExchange<I, O>.asSendExchange(): SendExchange<I, O>","description":"io.github.alexandrepiveteau.echo.asSendExchange","location":"library/echo/io.github.alexandrepiveteau.echo/as-send-exchange.html","searchKeys":["asSendExchange","fun <I, O> SendExchange<I, O>.asSendExchange(): SendExchange<I, O>","io.github.alexandrepiveteau.echo.asSendExchange"]},{"name":"fun <M, R> site(history: MutableHistory<R>, strategy: SyncStrategy = SyncStrategy.Continuous, transform: (R) -> M): Site<M>","description":"io.github.alexandrepiveteau.echo.site","location":"library/echo/io.github.alexandrepiveteau.echo/site.html","searchKeys":["site","fun <M, R> site(history: MutableHistory<R>, strategy: SyncStrategy = SyncStrategy.Continuous, transform: (R) -> M): Site<M>","io.github.alexandrepiveteau.echo.site"]},{"name":"fun <M, T, C> TwoWayMutableProjection(projection: TwoWayProjection<M, T, C>, changeSerializer: KSerializer<C>, eventSerializer: KSerializer<T>, format: BinaryFormat)","description":"io.github.alexandrepiveteau.echo.projections.TwoWayMutableProjection.TwoWayMutableProjection","location":"library/echo/io.github.alexandrepiveteau.echo.projections/-two-way-mutable-projection/-two-way-mutable-projection.html","searchKeys":["TwoWayMutableProjection","fun <M, T, C> TwoWayMutableProjection(projection: TwoWayProjection<M, T, C>, changeSerializer: KSerializer<C>, eventSerializer: KSerializer<T>, format: BinaryFormat)","io.github.alexandrepiveteau.echo.projections.TwoWayMutableProjection.TwoWayMutableProjection"]},{"name":"fun <M, T, R> mutableSite(identifier: SiteIdentifier, history: MutableHistory<R>, eventSerializer: KSerializer<T>, format: BinaryFormat = DefaultBinaryFormat, strategy: SyncStrategy = SyncStrategy.Continuous, transform: (R) -> M): MutableSite<T, M>","description":"io.github.alexandrepiveteau.echo.mutableSite","location":"library/echo/io.github.alexandrepiveteau.echo/mutable-site.html","searchKeys":["mutableSite","fun <M, T, R> mutableSite(identifier: SiteIdentifier, history: MutableHistory<R>, eventSerializer: KSerializer<T>, format: BinaryFormat = DefaultBinaryFormat, strategy: SyncStrategy = SyncStrategy.Continuous, transform: (R) -> M): MutableSite<T, M>","io.github.alexandrepiveteau.echo.mutableSite"]},{"name":"fun <M, T> OneWayMutableProjection(projection: OneWayProjection<M, T>, eventSerializer: KSerializer<T>, format: BinaryFormat)","description":"io.github.alexandrepiveteau.echo.projections.OneWayMutableProjection.OneWayMutableProjection","location":"library/echo/io.github.alexandrepiveteau.echo.projections/-one-way-mutable-projection/-one-way-mutable-projection.html","searchKeys":["OneWayMutableProjection","fun <M, T> OneWayMutableProjection(projection: OneWayProjection<M, T>, eventSerializer: KSerializer<T>, format: BinaryFormat)","io.github.alexandrepiveteau.echo.projections.OneWayMutableProjection.OneWayMutableProjection"]},{"name":"fun <T, M1, M2> MutableSite<T, M1>.map(f: (M1) -> M2): MutableSite<T, M2>","description":"io.github.alexandrepiveteau.echo.map","location":"library/echo/io.github.alexandrepiveteau.echo/map.html","searchKeys":["map","fun <T, M1, M2> MutableSite<T, M1>.map(f: (M1) -> M2): MutableSite<T, M2>","io.github.alexandrepiveteau.echo.map"]},{"name":"fun <T, M> MutableSite<T, M>.flowOn(context: CoroutineContext): MutableSite<T, M>","description":"io.github.alexandrepiveteau.echo.flowOn","location":"library/echo/io.github.alexandrepiveteau.echo/flow-on.html","searchKeys":["flowOn","fun <T, M> MutableSite<T, M>.flowOn(context: CoroutineContext): MutableSite<T, M>","io.github.alexandrepiveteau.echo.flowOn"]},{"name":"fun Acknowledge(site: SiteIdentifier, nextSeqno: SequenceNumber)","description":"io.github.alexandrepiveteau.echo.protocol.Message.Outgoing.Acknowledge.Acknowledge","location":"library/echo/io.github.alexandrepiveteau.echo.protocol/-message/-outgoing/-acknowledge/-acknowledge.html","searchKeys":["Acknowledge","fun Acknowledge(site: SiteIdentifier, nextSeqno: SequenceNumber)","io.github.alexandrepiveteau.echo.protocol.Message.Outgoing.Acknowledge.Acknowledge"]},{"name":"fun Advertisement(site: SiteIdentifier, nextSeqno: SequenceNumber)","description":"io.github.alexandrepiveteau.echo.protocol.Message.Incoming.Advertisement.Advertisement","location":"library/echo/io.github.alexandrepiveteau.echo.protocol/-message/-incoming/-advertisement/-advertisement.html","searchKeys":["Advertisement","fun Advertisement(site: SiteIdentifier, nextSeqno: SequenceNumber)","io.github.alexandrepiveteau.echo.protocol.Message.Incoming.Advertisement.Advertisement"]},{"name":"fun Events(events: List<Event> = emptyList())","description":"io.github.alexandrepiveteau.echo.protocol.Message.Incoming.Events.Events","location":"library/echo/io.github.alexandrepiveteau.echo.protocol/-message/-incoming/-events/-events.html","searchKeys":["Events","fun Events(events: List<Event> = emptyList())","io.github.alexandrepiveteau.echo.protocol.Message.Incoming.Events.Events"]},{"name":"fun Request(site: SiteIdentifier, count: UInt)","description":"io.github.alexandrepiveteau.echo.protocol.Message.Outgoing.Request.Request","location":"library/echo/io.github.alexandrepiveteau.echo.protocol/-message/-outgoing/-request/-request.html","searchKeys":["Request","fun Request(site: SiteIdentifier, count: UInt)","io.github.alexandrepiveteau.echo.protocol.Message.Outgoing.Request.Request"]},{"name":"fun exchange(log: MutableEventLog, strategy: SyncStrategy = SyncStrategy.Continuous): Exchange<Message.Incoming, Message.Outgoing>","description":"io.github.alexandrepiveteau.echo.exchange","location":"library/echo/io.github.alexandrepiveteau.echo/exchange.html","searchKeys":["exchange","fun exchange(log: MutableEventLog, strategy: SyncStrategy = SyncStrategy.Continuous): Exchange<Message.Incoming, Message.Outgoing>","io.github.alexandrepiveteau.echo.exchange"]},{"name":"fun exchange(vararg events: Pair<EventIdentifier, ByteArray>, strategy: SyncStrategy = SyncStrategy.Continuous): Exchange<Message.Incoming, Message.Outgoing>","description":"io.github.alexandrepiveteau.echo.exchange","location":"library/echo/io.github.alexandrepiveteau.echo/exchange.html","searchKeys":["exchange","fun exchange(vararg events: Pair<EventIdentifier, ByteArray>, strategy: SyncStrategy = SyncStrategy.Continuous): Exchange<Message.Incoming, Message.Outgoing>","io.github.alexandrepiveteau.echo.exchange"]},{"name":"fun interface EventScope<in T>","description":"io.github.alexandrepiveteau.echo.events.EventScope","location":"library/echo/io.github.alexandrepiveteau.echo.events/-event-scope/index.html","searchKeys":["EventScope","fun interface EventScope<in T>","io.github.alexandrepiveteau.echo.events.EventScope"]},{"name":"fun interface OneWayProjection<M, in T>","description":"io.github.alexandrepiveteau.echo.projections.OneWayProjection","location":"library/echo/io.github.alexandrepiveteau.echo.projections/-one-way-projection/index.html","searchKeys":["OneWayProjection","fun interface OneWayProjection<M, in T>","io.github.alexandrepiveteau.echo.projections.OneWayProjection"]},{"name":"fun interface ReceiveExchange<out I, in O>","description":"io.github.alexandrepiveteau.echo.ReceiveExchange","location":"library/echo/io.github.alexandrepiveteau.echo/-receive-exchange/index.html","searchKeys":["ReceiveExchange","fun interface ReceiveExchange<out I, in O>","io.github.alexandrepiveteau.echo.ReceiveExchange"]},{"name":"fun interface SendExchange<in I, out O>","description":"io.github.alexandrepiveteau.echo.SendExchange","location":"library/echo/io.github.alexandrepiveteau.echo/-send-exchange/index.html","searchKeys":["SendExchange","fun interface SendExchange<in I, out O>","io.github.alexandrepiveteau.echo.SendExchange"]},{"name":"inline fun <M, T, C, R> mutableSite(identifier: SiteIdentifier, initial: R, projection: TwoWayProjection<R, T, C>, vararg events: Pair<EventIdentifier, T>, strategy: SyncStrategy = SyncStrategy.Continuous, noinline transform: (R) -> M): MutableSite<T, M>","description":"io.github.alexandrepiveteau.echo.mutableSite","location":"library/echo/io.github.alexandrepiveteau.echo/mutable-site.html","searchKeys":["mutableSite","inline fun <M, T, C, R> mutableSite(identifier: SiteIdentifier, initial: R, projection: TwoWayProjection<R, T, C>, vararg events: Pair<EventIdentifier, T>, strategy: SyncStrategy = SyncStrategy.Continuous, noinline transform: (R) -> M): MutableSite<T, M>","io.github.alexandrepiveteau.echo.mutableSite"]},{"name":"inline fun <M, T, C> mutableSite(identifier: SiteIdentifier, initial: M, projection: TwoWayProjection<M, T, C>, vararg events: Pair<EventIdentifier, T>, strategy: SyncStrategy = SyncStrategy.Continuous): MutableSite<T, M>","description":"io.github.alexandrepiveteau.echo.mutableSite","location":"library/echo/io.github.alexandrepiveteau.echo/mutable-site.html","searchKeys":["mutableSite","inline fun <M, T, C> mutableSite(identifier: SiteIdentifier, initial: M, projection: TwoWayProjection<M, T, C>, vararg events: Pair<EventIdentifier, T>, strategy: SyncStrategy = SyncStrategy.Continuous): MutableSite<T, M>","io.github.alexandrepiveteau.echo.mutableSite"]},{"name":"inline fun <M, T, C> site(initial: M, projection: TwoWayProjection<M, T, C>, vararg events: Pair<EventIdentifier, T>, strategy: SyncStrategy = SyncStrategy.Continuous): Site<M>","description":"io.github.alexandrepiveteau.echo.site","location":"library/echo/io.github.alexandrepiveteau.echo/site.html","searchKeys":["site","inline fun <M, T, C> site(initial: M, projection: TwoWayProjection<M, T, C>, vararg events: Pair<EventIdentifier, T>, strategy: SyncStrategy = SyncStrategy.Continuous): Site<M>","io.github.alexandrepiveteau.echo.site"]},{"name":"inline fun <M, T, R> mutableSite(identifier: SiteIdentifier, history: MutableHistory<R>, strategy: SyncStrategy = SyncStrategy.Continuous, noinline transform: (R) -> M): MutableSite<T, M>","description":"io.github.alexandrepiveteau.echo.mutableSite","location":"library/echo/io.github.alexandrepiveteau.echo/mutable-site.html","searchKeys":["mutableSite","inline fun <M, T, R> mutableSite(identifier: SiteIdentifier, history: MutableHistory<R>, strategy: SyncStrategy = SyncStrategy.Continuous, noinline transform: (R) -> M): MutableSite<T, M>","io.github.alexandrepiveteau.echo.mutableSite"]},{"name":"inline fun <M, T, R> mutableSite(identifier: SiteIdentifier, initial: R, projection: OneWayProjection<R, T>, vararg events: Pair<EventIdentifier, T>, strategy: SyncStrategy = SyncStrategy.Continuous, noinline transform: (R) -> M): MutableSite<T, M>","description":"io.github.alexandrepiveteau.echo.mutableSite","location":"library/echo/io.github.alexandrepiveteau.echo/mutable-site.html","searchKeys":["mutableSite","inline fun <M, T, R> mutableSite(identifier: SiteIdentifier, initial: R, projection: OneWayProjection<R, T>, vararg events: Pair<EventIdentifier, T>, strategy: SyncStrategy = SyncStrategy.Continuous, noinline transform: (R) -> M): MutableSite<T, M>","io.github.alexandrepiveteau.echo.mutableSite"]},{"name":"inline fun <M, T> mutableSite(identifier: SiteIdentifier, history: MutableHistory<M>, strategy: SyncStrategy = SyncStrategy.Continuous): MutableSite<T, M>","description":"io.github.alexandrepiveteau.echo.mutableSite","location":"library/echo/io.github.alexandrepiveteau.echo/mutable-site.html","searchKeys":["mutableSite","inline fun <M, T> mutableSite(identifier: SiteIdentifier, history: MutableHistory<M>, strategy: SyncStrategy = SyncStrategy.Continuous): MutableSite<T, M>","io.github.alexandrepiveteau.echo.mutableSite"]},{"name":"inline fun <M, T> mutableSite(identifier: SiteIdentifier, initial: M, projection: OneWayProjection<M, T>, vararg events: Pair<EventIdentifier, T>, strategy: SyncStrategy = SyncStrategy.Continuous): MutableSite<T, M>","description":"io.github.alexandrepiveteau.echo.mutableSite","location":"library/echo/io.github.alexandrepiveteau.echo/mutable-site.html","searchKeys":["mutableSite","inline fun <M, T> mutableSite(identifier: SiteIdentifier, initial: M, projection: OneWayProjection<M, T>, vararg events: Pair<EventIdentifier, T>, strategy: SyncStrategy = SyncStrategy.Continuous): MutableSite<T, M>","io.github.alexandrepiveteau.echo.mutableSite"]},{"name":"inline fun <M, T> site(history: MutableHistory<M>, strategy: SyncStrategy = SyncStrategy.Continuous): Site<M>","description":"io.github.alexandrepiveteau.echo.site","location":"library/echo/io.github.alexandrepiveteau.echo/site.html","searchKeys":["site","inline fun <M, T> site(history: MutableHistory<M>, strategy: SyncStrategy = SyncStrategy.Continuous): Site<M>","io.github.alexandrepiveteau.echo.site"]},{"name":"inline fun <M, T> site(initial: M, projection: OneWayProjection<M, T>, vararg events: Pair<EventIdentifier, T>, strategy: SyncStrategy = SyncStrategy.Continuous): Site<M>","description":"io.github.alexandrepiveteau.echo.site","location":"library/echo/io.github.alexandrepiveteau.echo/site.html","searchKeys":["site","inline fun <M, T> site(initial: M, projection: OneWayProjection<M, T>, vararg events: Pair<EventIdentifier, T>, strategy: SyncStrategy = SyncStrategy.Continuous): Site<M>","io.github.alexandrepiveteau.echo.site"]},{"name":"inline fun <T> mutableSite(identifier: SiteIdentifier, vararg events: Pair<EventIdentifier, T>, strategy: SyncStrategy = SyncStrategy.Continuous): MutableSite<T, Unit>","description":"io.github.alexandrepiveteau.echo.mutableSite","location":"library/echo/io.github.alexandrepiveteau.echo/mutable-site.html","searchKeys":["mutableSite","inline fun <T> mutableSite(identifier: SiteIdentifier, vararg events: Pair<EventIdentifier, T>, strategy: SyncStrategy = SyncStrategy.Continuous): MutableSite<T, Unit>","io.github.alexandrepiveteau.echo.mutableSite"]},{"name":"inline fun <T> site(vararg events: Pair<EventIdentifier, T>, strategy: SyncStrategy = SyncStrategy.Continuous): Site<Unit>","description":"io.github.alexandrepiveteau.echo.site","location":"library/echo/io.github.alexandrepiveteau.echo/site.html","searchKeys":["site","inline fun <T> site(vararg events: Pair<EventIdentifier, T>, strategy: SyncStrategy = SyncStrategy.Continuous): Site<Unit>","io.github.alexandrepiveteau.echo.site"]},{"name":"interface ChangeScope<in T>","description":"io.github.alexandrepiveteau.echo.projections.ChangeScope","location":"library/echo/io.github.alexandrepiveteau.echo.projections/-change-scope/index.html","searchKeys":["ChangeScope","interface ChangeScope<in T>","io.github.alexandrepiveteau.echo.projections.ChangeScope"]},{"name":"interface Exchange<I, O> : SendExchange<I, O> , ReceiveExchange<I, O> ","description":"io.github.alexandrepiveteau.echo.Exchange","location":"library/echo/io.github.alexandrepiveteau.echo/-exchange/index.html","searchKeys":["Exchange","interface Exchange<I, O> : SendExchange<I, O> , ReceiveExchange<I, O> ","io.github.alexandrepiveteau.echo.Exchange"]},{"name":"interface MutableSite<in T, out M> : Site<M> ","description":"io.github.alexandrepiveteau.echo.MutableSite","location":"library/echo/io.github.alexandrepiveteau.echo/-mutable-site/index.html","searchKeys":["MutableSite","interface MutableSite<in T, out M> : Site<M> ","io.github.alexandrepiveteau.echo.MutableSite"]},{"name":"interface Site<out M> : Exchange<Message.Incoming, Message.Outgoing> ","description":"io.github.alexandrepiveteau.echo.Site","location":"library/echo/io.github.alexandrepiveteau.echo/-site/index.html","searchKeys":["Site","interface Site<out M> : Exchange<Message.Incoming, Message.Outgoing> ","io.github.alexandrepiveteau.echo.Site"]},{"name":"interface TwoWayProjection<M, in T, C>","description":"io.github.alexandrepiveteau.echo.projections.TwoWayProjection","location":"library/echo/io.github.alexandrepiveteau.echo.projections/-two-way-projection/index.html","searchKeys":["TwoWayProjection","interface TwoWayProjection<M, in T, C>","io.github.alexandrepiveteau.echo.projections.TwoWayProjection"]},{"name":"object Companion","description":"io.github.alexandrepiveteau.echo.protocol.Message.Incoming.Companion","location":"library/echo/io.github.alexandrepiveteau.echo.protocol/-message/-incoming/-companion/index.html","searchKeys":["Companion","object Companion","io.github.alexandrepiveteau.echo.protocol.Message.Incoming.Companion"]},{"name":"object Companion","description":"io.github.alexandrepiveteau.echo.protocol.Message.Outgoing.Companion","location":"library/echo/io.github.alexandrepiveteau.echo.protocol/-message/-outgoing/-companion/index.html","searchKeys":["Companion","object Companion","io.github.alexandrepiveteau.echo.protocol.Message.Outgoing.Companion"]},{"name":"object Ready : Message.Incoming","description":"io.github.alexandrepiveteau.echo.protocol.Message.Incoming.Ready","location":"library/echo/io.github.alexandrepiveteau.echo.protocol/-message/-incoming/-ready/index.html","searchKeys":["Ready","object Ready : Message.Incoming","io.github.alexandrepiveteau.echo.protocol.Message.Incoming.Ready"]},{"name":"open fun yieldAll(events: Iterable<T>)","description":"io.github.alexandrepiveteau.echo.events.EventScope.yieldAll","location":"library/echo/io.github.alexandrepiveteau.echo.events/-event-scope/yield-all.html","searchKeys":["yieldAll","open fun yieldAll(events: Iterable<T>)","io.github.alexandrepiveteau.echo.events.EventScope.yieldAll"]},{"name":"open fun yieldAll(events: Iterator<T>)","description":"io.github.alexandrepiveteau.echo.events.EventScope.yieldAll","location":"library/echo/io.github.alexandrepiveteau.echo.events/-event-scope/yield-all.html","searchKeys":["yieldAll","open fun yieldAll(events: Iterator<T>)","io.github.alexandrepiveteau.echo.events.EventScope.yieldAll"]},{"name":"open override fun ChangeScope.forward(model: M, identifier: EventIdentifier, data: MutableByteGapBuffer, from: Int, until: Int): M","description":"io.github.alexandrepiveteau.echo.projections.OneWayMutableProjection.forward","location":"library/echo/io.github.alexandrepiveteau.echo.projections/-one-way-mutable-projection/forward.html","searchKeys":["forward","open override fun ChangeScope.forward(model: M, identifier: EventIdentifier, data: MutableByteGapBuffer, from: Int, until: Int): M","io.github.alexandrepiveteau.echo.projections.OneWayMutableProjection.forward"]},{"name":"open override fun ChangeScope.forward(model: M, identifier: EventIdentifier, data: MutableByteGapBuffer, from: Int, until: Int): M","description":"io.github.alexandrepiveteau.echo.projections.TwoWayMutableProjection.forward","location":"library/echo/io.github.alexandrepiveteau.echo.projections/-two-way-mutable-projection/forward.html","searchKeys":["forward","open override fun ChangeScope.forward(model: M, identifier: EventIdentifier, data: MutableByteGapBuffer, from: Int, until: Int): M","io.github.alexandrepiveteau.echo.projections.TwoWayMutableProjection.forward"]},{"name":"open override fun backward(model: M, identifier: EventIdentifier, data: MutableByteGapBuffer, from: Int, until: Int, changeData: MutableByteGapBuffer, changeFrom: Int, changeUntil: Int): M","description":"io.github.alexandrepiveteau.echo.projections.OneWayMutableProjection.backward","location":"library/echo/io.github.alexandrepiveteau.echo.projections/-one-way-mutable-projection/backward.html","searchKeys":["backward","open override fun backward(model: M, identifier: EventIdentifier, data: MutableByteGapBuffer, from: Int, until: Int, changeData: MutableByteGapBuffer, changeFrom: Int, changeUntil: Int): M","io.github.alexandrepiveteau.echo.projections.OneWayMutableProjection.backward"]},{"name":"open override fun backward(model: M, identifier: EventIdentifier, data: MutableByteGapBuffer, from: Int, until: Int, changeData: MutableByteGapBuffer, changeFrom: Int, changeUntil: Int): M","description":"io.github.alexandrepiveteau.echo.projections.TwoWayMutableProjection.backward","location":"library/echo/io.github.alexandrepiveteau.echo.projections/-two-way-mutable-projection/backward.html","searchKeys":["backward","open override fun backward(model: M, identifier: EventIdentifier, data: MutableByteGapBuffer, from: Int, until: Int, changeData: MutableByteGapBuffer, changeFrom: Int, changeUntil: Int): M","io.github.alexandrepiveteau.echo.projections.TwoWayMutableProjection.backward"]},{"name":"sealed class Incoming : Message","description":"io.github.alexandrepiveteau.echo.protocol.Message.Incoming","location":"library/echo/io.github.alexandrepiveteau.echo.protocol/-message/-incoming/index.html","searchKeys":["Incoming","sealed class Incoming : Message","io.github.alexandrepiveteau.echo.protocol.Message.Incoming"]},{"name":"sealed class Message","description":"io.github.alexandrepiveteau.echo.protocol.Message","location":"library/echo/io.github.alexandrepiveteau.echo.protocol/-message/index.html","searchKeys":["Message","sealed class Message","io.github.alexandrepiveteau.echo.protocol.Message"]},{"name":"sealed class Outgoing : Message","description":"io.github.alexandrepiveteau.echo.protocol.Message.Outgoing","location":"library/echo/io.github.alexandrepiveteau.echo.protocol/-message/-outgoing/index.html","searchKeys":["Outgoing","sealed class Outgoing : Message","io.github.alexandrepiveteau.echo.protocol.Message.Outgoing"]},{"name":"suspend fun <I, O> sync(first: (Flow<I>) -> Flow<O>, second: (Flow<O>) -> Flow<I>)","description":"io.github.alexandrepiveteau.echo.sync","location":"library/echo/io.github.alexandrepiveteau.echo/sync.html","searchKeys":["sync","suspend fun <I, O> sync(first: (Flow<I>) -> Flow<O>, second: (Flow<O>) -> Flow<I>)","io.github.alexandrepiveteau.echo.sync"]},{"name":"suspend fun <I, O> sync(vararg exchanges: Exchange<I, O>)","description":"io.github.alexandrepiveteau.echo.sync","location":"library/echo/io.github.alexandrepiveteau.echo/sync.html","searchKeys":["sync","suspend fun <I, O> sync(vararg exchanges: Exchange<I, O>)","io.github.alexandrepiveteau.echo.sync"]},{"name":"suspend fun <I, O> syncAll(vararg exchanges: Exchange<I, O>)","description":"io.github.alexandrepiveteau.echo.syncAll","location":"library/echo/io.github.alexandrepiveteau.echo/sync-all.html","searchKeys":["syncAll","suspend fun <I, O> syncAll(vararg exchanges: Exchange<I, O>)","io.github.alexandrepiveteau.echo.syncAll"]},{"name":"val DefaultBinaryFormat: BinaryFormat","description":"io.github.alexandrepiveteau.echo.DefaultBinaryFormat","location":"library/echo/io.github.alexandrepiveteau.echo/-default-binary-format.html","searchKeys":["DefaultBinaryFormat","val DefaultBinaryFormat: BinaryFormat","io.github.alexandrepiveteau.echo.DefaultBinaryFormat"]},{"name":"val count: UInt","description":"io.github.alexandrepiveteau.echo.protocol.Message.Outgoing.Request.count","location":"library/echo/io.github.alexandrepiveteau.echo.protocol/-message/-outgoing/-request/count.html","searchKeys":["count","val count: UInt","io.github.alexandrepiveteau.echo.protocol.Message.Outgoing.Request.count"]},{"name":"val events: List<Event>","description":"io.github.alexandrepiveteau.echo.protocol.Message.Incoming.Events.events","location":"library/echo/io.github.alexandrepiveteau.echo.protocol/-message/-incoming/-events/events.html","searchKeys":["events","val events: List<Event>","io.github.alexandrepiveteau.echo.protocol.Message.Incoming.Events.events"]},{"name":"val nextSeqno: SequenceNumber","description":"io.github.alexandrepiveteau.echo.protocol.Message.Incoming.Advertisement.nextSeqno","location":"library/echo/io.github.alexandrepiveteau.echo.protocol/-message/-incoming/-advertisement/next-seqno.html","searchKeys":["nextSeqno","val nextSeqno: SequenceNumber","io.github.alexandrepiveteau.echo.protocol.Message.Incoming.Advertisement.nextSeqno"]},{"name":"val nextSeqno: SequenceNumber","description":"io.github.alexandrepiveteau.echo.protocol.Message.Outgoing.Acknowledge.nextSeqno","location":"library/echo/io.github.alexandrepiveteau.echo.protocol/-message/-outgoing/-acknowledge/next-seqno.html","searchKeys":["nextSeqno","val nextSeqno: SequenceNumber","io.github.alexandrepiveteau.echo.protocol.Message.Outgoing.Acknowledge.nextSeqno"]},{"name":"val site: SiteIdentifier","description":"io.github.alexandrepiveteau.echo.protocol.Message.Incoming.Advertisement.site","location":"library/echo/io.github.alexandrepiveteau.echo.protocol/-message/-incoming/-advertisement/site.html","searchKeys":["site","val site: SiteIdentifier","io.github.alexandrepiveteau.echo.protocol.Message.Incoming.Advertisement.site"]},{"name":"val site: SiteIdentifier","description":"io.github.alexandrepiveteau.echo.protocol.Message.Outgoing.Acknowledge.site","location":"library/echo/io.github.alexandrepiveteau.echo.protocol/-message/-outgoing/-acknowledge/site.html","searchKeys":["site","val site: SiteIdentifier","io.github.alexandrepiveteau.echo.protocol.Message.Outgoing.Acknowledge.site"]},{"name":"val site: SiteIdentifier","description":"io.github.alexandrepiveteau.echo.protocol.Message.Outgoing.Request.site","location":"library/echo/io.github.alexandrepiveteau.echo.protocol/-message/-outgoing/-request/site.html","searchKeys":["site","val site: SiteIdentifier","io.github.alexandrepiveteau.echo.protocol.Message.Outgoing.Request.site"]},{"name":"abstract class EventIdentifierIterator : Iterator<EventIdentifier> ","description":"io.github.alexandrepiveteau.echo.core.causality.EventIdentifierIterator","location":"library/echo-core/io.github.alexandrepiveteau.echo.core.causality/-event-identifier-iterator/index.html","searchKeys":["EventIdentifierIterator","abstract class EventIdentifierIterator : Iterator<EventIdentifier> ","io.github.alexandrepiveteau.echo.core.causality.EventIdentifierIterator"]},{"name":"abstract fun ChangeScope.forward(model: T, identifier: EventIdentifier, data: MutableByteGapBuffer, from: Int, until: Int): T","description":"io.github.alexandrepiveteau.echo.core.log.MutableProjection.forward","location":"library/echo-core/io.github.alexandrepiveteau.echo.core.log/-mutable-projection/forward.html","searchKeys":["forward","abstract fun ChangeScope.forward(model: T, identifier: EventIdentifier, data: MutableByteGapBuffer, from: Int, until: Int): T","io.github.alexandrepiveteau.echo.core.log.MutableProjection.forward"]},{"name":"abstract fun acknowledge(from: EventLog): MutableEventLog","description":"io.github.alexandrepiveteau.echo.core.log.MutableEventLog.acknowledge","location":"library/echo-core/io.github.alexandrepiveteau.echo.core.log/-mutable-event-log/acknowledge.html","searchKeys":["acknowledge","abstract fun acknowledge(from: EventLog): MutableEventLog","io.github.alexandrepiveteau.echo.core.log.MutableEventLog.acknowledge"]},{"name":"abstract fun acknowledge(seqno: SequenceNumber, site: SiteIdentifier)","description":"io.github.alexandrepiveteau.echo.core.log.MutableEventLog.acknowledge","location":"library/echo-core/io.github.alexandrepiveteau.echo.core.log/-mutable-event-log/acknowledge.html","searchKeys":["acknowledge","abstract fun acknowledge(seqno: SequenceNumber, site: SiteIdentifier)","io.github.alexandrepiveteau.echo.core.log.MutableEventLog.acknowledge"]},{"name":"abstract fun acknowledged(): EventIdentifierArray","description":"io.github.alexandrepiveteau.echo.core.log.EventLog.acknowledged","location":"library/echo-core/io.github.alexandrepiveteau.echo.core.log/-event-log/acknowledged.html","searchKeys":["acknowledged","abstract fun acknowledged(): EventIdentifierArray","io.github.alexandrepiveteau.echo.core.log.EventLog.acknowledged"]},{"name":"abstract fun add(seqno: SequenceNumber, site: SiteIdentifier, event: ByteArray, from: Int = 0, until: Int = event.size)","description":"io.github.alexandrepiveteau.echo.core.log.MutableEventIterator.add","location":"library/echo-core/io.github.alexandrepiveteau.echo.core.log/-mutable-event-iterator/add.html","searchKeys":["add","abstract fun add(seqno: SequenceNumber, site: SiteIdentifier, event: ByteArray, from: Int = 0, until: Int = event.size)","io.github.alexandrepiveteau.echo.core.log.MutableEventIterator.add"]},{"name":"abstract fun append(site: SiteIdentifier, event: ByteArray, from: Int = 0, until: Int = event.size): EventIdentifier","description":"io.github.alexandrepiveteau.echo.core.log.MutableEventLog.append","location":"library/echo-core/io.github.alexandrepiveteau.echo.core.log/-mutable-event-log/append.html","searchKeys":["append","abstract fun append(site: SiteIdentifier, event: ByteArray, from: Int = 0, until: Int = event.size): EventIdentifier","io.github.alexandrepiveteau.echo.core.log.MutableEventLog.append"]},{"name":"abstract fun backward(model: T, identifier: EventIdentifier, data: MutableByteGapBuffer, from: Int, until: Int, changeData: MutableByteGapBuffer, changeFrom: Int, changeUntil: Int): T","description":"io.github.alexandrepiveteau.echo.core.log.MutableProjection.backward","location":"library/echo-core/io.github.alexandrepiveteau.echo.core.log/-mutable-projection/backward.html","searchKeys":["backward","abstract fun backward(model: T, identifier: EventIdentifier, data: MutableByteGapBuffer, from: Int, until: Int, changeData: MutableByteGapBuffer, changeFrom: Int, changeUntil: Int): T","io.github.alexandrepiveteau.echo.core.log.MutableProjection.backward"]},{"name":"abstract fun clear()","description":"io.github.alexandrepiveteau.echo.core.buffer.MutableByteGapBuffer.clear","location":"library/echo-core/io.github.alexandrepiveteau.echo.core.buffer/-mutable-byte-gap-buffer/clear.html","searchKeys":["clear","abstract fun clear()","io.github.alexandrepiveteau.echo.core.buffer.MutableByteGapBuffer.clear"]},{"name":"abstract fun clear()","description":"io.github.alexandrepiveteau.echo.core.buffer.MutableCharGapBuffer.clear","location":"library/echo-core/io.github.alexandrepiveteau.echo.core.buffer/-mutable-char-gap-buffer/clear.html","searchKeys":["clear","abstract fun clear()","io.github.alexandrepiveteau.echo.core.buffer.MutableCharGapBuffer.clear"]},{"name":"abstract fun clear()","description":"io.github.alexandrepiveteau.echo.core.buffer.MutableEventIdentifierGapBuffer.clear","location":"library/echo-core/io.github.alexandrepiveteau.echo.core.buffer/-mutable-event-identifier-gap-buffer/clear.html","searchKeys":["clear","abstract fun clear()","io.github.alexandrepiveteau.echo.core.buffer.MutableEventIdentifierGapBuffer.clear"]},{"name":"abstract fun clear()","description":"io.github.alexandrepiveteau.echo.core.buffer.MutableGapBuffer.clear","location":"library/echo-core/io.github.alexandrepiveteau.echo.core.buffer/-mutable-gap-buffer/clear.html","searchKeys":["clear","abstract fun clear()","io.github.alexandrepiveteau.echo.core.buffer.MutableGapBuffer.clear"]},{"name":"abstract fun clear()","description":"io.github.alexandrepiveteau.echo.core.buffer.MutableIntGapBuffer.clear","location":"library/echo-core/io.github.alexandrepiveteau.echo.core.buffer/-mutable-int-gap-buffer/clear.html","searchKeys":["clear","abstract fun clear()","io.github.alexandrepiveteau.echo.core.buffer.MutableIntGapBuffer.clear"]},{"name":"abstract fun clear()","description":"io.github.alexandrepiveteau.echo.core.log.MutableEventLog.clear","location":"library/echo-core/io.github.alexandrepiveteau.echo.core.log/-mutable-event-log/clear.html","searchKeys":["clear","abstract fun clear()","io.github.alexandrepiveteau.echo.core.log.MutableEventLog.clear"]},{"name":"abstract fun contains(seqno: SequenceNumber, site: SiteIdentifier): Boolean","description":"io.github.alexandrepiveteau.echo.core.log.EventLog.contains","location":"library/echo-core/io.github.alexandrepiveteau.echo.core.log/-event-log/contains.html","searchKeys":["contains","abstract fun contains(seqno: SequenceNumber, site: SiteIdentifier): Boolean","io.github.alexandrepiveteau.echo.core.log.EventLog.contains"]},{"name":"abstract fun copyInto(array: Array<T>, destinationOffset: Int = 0, startOffset: Int = 0, endOffset: Int = size): Array<T>","description":"io.github.alexandrepiveteau.echo.core.buffer.MutableGapBuffer.copyInto","location":"library/echo-core/io.github.alexandrepiveteau.echo.core.buffer/-mutable-gap-buffer/copy-into.html","searchKeys":["copyInto","abstract fun copyInto(array: Array<T>, destinationOffset: Int = 0, startOffset: Int = 0, endOffset: Int = size): Array<T>","io.github.alexandrepiveteau.echo.core.buffer.MutableGapBuffer.copyInto"]},{"name":"abstract fun copyInto(array: ByteArray, destinationOffset: Int = 0, startOffset: Int = 0, endOffset: Int = size): ByteArray","description":"io.github.alexandrepiveteau.echo.core.buffer.MutableByteGapBuffer.copyInto","location":"library/echo-core/io.github.alexandrepiveteau.echo.core.buffer/-mutable-byte-gap-buffer/copy-into.html","searchKeys":["copyInto","abstract fun copyInto(array: ByteArray, destinationOffset: Int = 0, startOffset: Int = 0, endOffset: Int = size): ByteArray","io.github.alexandrepiveteau.echo.core.buffer.MutableByteGapBuffer.copyInto"]},{"name":"abstract fun copyInto(array: CharArray, destinationOffset: Int = 0, startOffset: Int = 0, endOffset: Int = size): CharArray","description":"io.github.alexandrepiveteau.echo.core.buffer.MutableCharGapBuffer.copyInto","location":"library/echo-core/io.github.alexandrepiveteau.echo.core.buffer/-mutable-char-gap-buffer/copy-into.html","searchKeys":["copyInto","abstract fun copyInto(array: CharArray, destinationOffset: Int = 0, startOffset: Int = 0, endOffset: Int = size): CharArray","io.github.alexandrepiveteau.echo.core.buffer.MutableCharGapBuffer.copyInto"]},{"name":"abstract fun copyInto(array: EventIdentifierArray, destinationOffset: Int = 0, startOffset: Int = 0, endOffset: Int = size): EventIdentifierArray","description":"io.github.alexandrepiveteau.echo.core.buffer.MutableEventIdentifierGapBuffer.copyInto","location":"library/echo-core/io.github.alexandrepiveteau.echo.core.buffer/-mutable-event-identifier-gap-buffer/copy-into.html","searchKeys":["copyInto","abstract fun copyInto(array: EventIdentifierArray, destinationOffset: Int = 0, startOffset: Int = 0, endOffset: Int = size): EventIdentifierArray","io.github.alexandrepiveteau.echo.core.buffer.MutableEventIdentifierGapBuffer.copyInto"]},{"name":"abstract fun copyInto(array: IntArray, destinationOffset: Int = 0, startOffset: Int = 0, endOffset: Int = size): IntArray","description":"io.github.alexandrepiveteau.echo.core.buffer.MutableIntGapBuffer.copyInto","location":"library/echo-core/io.github.alexandrepiveteau.echo.core.buffer/-mutable-int-gap-buffer/copy-into.html","searchKeys":["copyInto","abstract fun copyInto(array: IntArray, destinationOffset: Int = 0, startOffset: Int = 0, endOffset: Int = size): IntArray","io.github.alexandrepiveteau.echo.core.buffer.MutableIntGapBuffer.copyInto"]},{"name":"abstract fun insert(seqno: SequenceNumber, site: SiteIdentifier, event: ByteArray, from: Int = 0, until: Int = event.size)","description":"io.github.alexandrepiveteau.echo.core.log.MutableEventLog.insert","location":"library/echo-core/io.github.alexandrepiveteau.echo.core.log/-mutable-event-log/insert.html","searchKeys":["insert","abstract fun insert(seqno: SequenceNumber, site: SiteIdentifier, event: ByteArray, from: Int = 0, until: Int = event.size)","io.github.alexandrepiveteau.echo.core.log.MutableEventLog.insert"]},{"name":"abstract fun iterator(site: SiteIdentifier): EventIterator","description":"io.github.alexandrepiveteau.echo.core.log.EventLog.iterator","location":"library/echo-core/io.github.alexandrepiveteau.echo.core.log/-event-log/iterator.html","searchKeys":["iterator","abstract fun iterator(site: SiteIdentifier): EventIterator","io.github.alexandrepiveteau.echo.core.log.EventLog.iterator"]},{"name":"abstract fun iteratorAtEnd(): EventIterator","description":"io.github.alexandrepiveteau.echo.core.log.EventLog.iteratorAtEnd","location":"library/echo-core/io.github.alexandrepiveteau.echo.core.log/-event-log/iterator-at-end.html","searchKeys":["iteratorAtEnd","abstract fun iteratorAtEnd(): EventIterator","io.github.alexandrepiveteau.echo.core.log.EventLog.iteratorAtEnd"]},{"name":"abstract fun iteratorAtEnd(site: SiteIdentifier): EventIterator","description":"io.github.alexandrepiveteau.echo.core.log.EventLog.iteratorAtEnd","location":"library/echo-core/io.github.alexandrepiveteau.echo.core.log/-event-log/iterator-at-end.html","searchKeys":["iteratorAtEnd","abstract fun iteratorAtEnd(site: SiteIdentifier): EventIterator","io.github.alexandrepiveteau.echo.core.log.EventLog.iteratorAtEnd"]},{"name":"abstract fun merge(from: EventLog): MutableEventLog","description":"io.github.alexandrepiveteau.echo.core.log.MutableEventLog.merge","location":"library/echo-core/io.github.alexandrepiveteau.echo.core.log/-mutable-event-log/merge.html","searchKeys":["merge","abstract fun merge(from: EventLog): MutableEventLog","io.github.alexandrepiveteau.echo.core.log.MutableEventLog.merge"]},{"name":"abstract fun moveNext()","description":"io.github.alexandrepiveteau.echo.core.log.EventIterator.moveNext","location":"library/echo-core/io.github.alexandrepiveteau.echo.core.log/-event-iterator/move-next.html","searchKeys":["moveNext","abstract fun moveNext()","io.github.alexandrepiveteau.echo.core.log.EventIterator.moveNext"]},{"name":"abstract fun movePrevious()","description":"io.github.alexandrepiveteau.echo.core.log.EventIterator.movePrevious","location":"library/echo-core/io.github.alexandrepiveteau.echo.core.log/-event-iterator/move-previous.html","searchKeys":["movePrevious","abstract fun movePrevious()","io.github.alexandrepiveteau.echo.core.log.EventIterator.movePrevious"]},{"name":"abstract fun nextEventIdentifier(): EventIdentifier","description":"io.github.alexandrepiveteau.echo.core.causality.EventIdentifierIterator.nextEventIdentifier","location":"library/echo-core/io.github.alexandrepiveteau.echo.core.causality/-event-identifier-iterator/next-event-identifier.html","searchKeys":["nextEventIdentifier","abstract fun nextEventIdentifier(): EventIdentifier","io.github.alexandrepiveteau.echo.core.causality.EventIdentifierIterator.nextEventIdentifier"]},{"name":"abstract fun onValueUpdated(value: T)","description":"io.github.alexandrepiveteau.echo.core.log.History.OnValueUpdateListener.onValueUpdated","location":"library/echo-core/io.github.alexandrepiveteau.echo.core.log/-history/-on-value-update-listener/on-value-updated.html","searchKeys":["onValueUpdated","abstract fun onValueUpdated(value: T)","io.github.alexandrepiveteau.echo.core.log.History.OnValueUpdateListener.onValueUpdated"]},{"name":"abstract fun push(array: Array<T>, offset: Int = size, startIndex: Int = 0, endIndex: Int = array.size)","description":"io.github.alexandrepiveteau.echo.core.buffer.MutableGapBuffer.push","location":"library/echo-core/io.github.alexandrepiveteau.echo.core.buffer/-mutable-gap-buffer/push.html","searchKeys":["push","abstract fun push(array: Array<T>, offset: Int = size, startIndex: Int = 0, endIndex: Int = array.size)","io.github.alexandrepiveteau.echo.core.buffer.MutableGapBuffer.push"]},{"name":"abstract fun push(array: ByteArray, from: Int, until: Int)","description":"io.github.alexandrepiveteau.echo.core.log.ChangeScope.push","location":"library/echo-core/io.github.alexandrepiveteau.echo.core.log/-change-scope/push.html","searchKeys":["push","abstract fun push(array: ByteArray, from: Int, until: Int)","io.github.alexandrepiveteau.echo.core.log.ChangeScope.push"]},{"name":"abstract fun push(array: ByteArray, offset: Int = size, startIndex: Int = 0, endIndex: Int = array.size)","description":"io.github.alexandrepiveteau.echo.core.buffer.MutableByteGapBuffer.push","location":"library/echo-core/io.github.alexandrepiveteau.echo.core.buffer/-mutable-byte-gap-buffer/push.html","searchKeys":["push","abstract fun push(array: ByteArray, offset: Int = size, startIndex: Int = 0, endIndex: Int = array.size)","io.github.alexandrepiveteau.echo.core.buffer.MutableByteGapBuffer.push"]},{"name":"abstract fun push(array: CharArray, offset: Int = size, startIndex: Int = 0, endIndex: Int = array.size)","description":"io.github.alexandrepiveteau.echo.core.buffer.MutableCharGapBuffer.push","location":"library/echo-core/io.github.alexandrepiveteau.echo.core.buffer/-mutable-char-gap-buffer/push.html","searchKeys":["push","abstract fun push(array: CharArray, offset: Int = size, startIndex: Int = 0, endIndex: Int = array.size)","io.github.alexandrepiveteau.echo.core.buffer.MutableCharGapBuffer.push"]},{"name":"abstract fun push(array: EventIdentifierArray, offset: Int = size, startIndex: Int = 0, endIndex: Int = array.size)","description":"io.github.alexandrepiveteau.echo.core.buffer.MutableEventIdentifierGapBuffer.push","location":"library/echo-core/io.github.alexandrepiveteau.echo.core.buffer/-mutable-event-identifier-gap-buffer/push.html","searchKeys":["push","abstract fun push(array: EventIdentifierArray, offset: Int = size, startIndex: Int = 0, endIndex: Int = array.size)","io.github.alexandrepiveteau.echo.core.buffer.MutableEventIdentifierGapBuffer.push"]},{"name":"abstract fun push(array: IntArray, offset: Int = size, startIndex: Int = 0, endIndex: Int = array.size)","description":"io.github.alexandrepiveteau.echo.core.buffer.MutableIntGapBuffer.push","location":"library/echo-core/io.github.alexandrepiveteau.echo.core.buffer/-mutable-int-gap-buffer/push.html","searchKeys":["push","abstract fun push(array: IntArray, offset: Int = size, startIndex: Int = 0, endIndex: Int = array.size)","io.github.alexandrepiveteau.echo.core.buffer.MutableIntGapBuffer.push"]},{"name":"abstract fun push(value: Byte, offset: Int = size)","description":"io.github.alexandrepiveteau.echo.core.buffer.MutableByteGapBuffer.push","location":"library/echo-core/io.github.alexandrepiveteau.echo.core.buffer/-mutable-byte-gap-buffer/push.html","searchKeys":["push","abstract fun push(value: Byte, offset: Int = size)","io.github.alexandrepiveteau.echo.core.buffer.MutableByteGapBuffer.push"]},{"name":"abstract fun push(value: Char, offset: Int = size)","description":"io.github.alexandrepiveteau.echo.core.buffer.MutableCharGapBuffer.push","location":"library/echo-core/io.github.alexandrepiveteau.echo.core.buffer/-mutable-char-gap-buffer/push.html","searchKeys":["push","abstract fun push(value: Char, offset: Int = size)","io.github.alexandrepiveteau.echo.core.buffer.MutableCharGapBuffer.push"]},{"name":"abstract fun push(value: EventIdentifier, offset: Int = size)","description":"io.github.alexandrepiveteau.echo.core.buffer.MutableEventIdentifierGapBuffer.push","location":"library/echo-core/io.github.alexandrepiveteau.echo.core.buffer/-mutable-event-identifier-gap-buffer/push.html","searchKeys":["push","abstract fun push(value: EventIdentifier, offset: Int = size)","io.github.alexandrepiveteau.echo.core.buffer.MutableEventIdentifierGapBuffer.push"]},{"name":"abstract fun push(value: Int, offset: Int = size)","description":"io.github.alexandrepiveteau.echo.core.buffer.MutableIntGapBuffer.push","location":"library/echo-core/io.github.alexandrepiveteau.echo.core.buffer/-mutable-int-gap-buffer/push.html","searchKeys":["push","abstract fun push(value: Int, offset: Int = size)","io.github.alexandrepiveteau.echo.core.buffer.MutableIntGapBuffer.push"]},{"name":"abstract fun push(value: T, offset: Int = size)","description":"io.github.alexandrepiveteau.echo.core.buffer.MutableGapBuffer.push","location":"library/echo-core/io.github.alexandrepiveteau.echo.core.buffer/-mutable-gap-buffer/push.html","searchKeys":["push","abstract fun push(value: T, offset: Int = size)","io.github.alexandrepiveteau.echo.core.buffer.MutableGapBuffer.push"]},{"name":"abstract fun registerLogUpdateListener(listener: EventLog.OnLogUpdateListener)","description":"io.github.alexandrepiveteau.echo.core.log.EventLog.registerLogUpdateListener","location":"library/echo-core/io.github.alexandrepiveteau.echo.core.log/-event-log/register-log-update-listener.html","searchKeys":["registerLogUpdateListener","abstract fun registerLogUpdateListener(listener: EventLog.OnLogUpdateListener)","io.github.alexandrepiveteau.echo.core.log.EventLog.registerLogUpdateListener"]},{"name":"abstract fun registerValueUpdateListener(listener: History.OnValueUpdateListener<T>)","description":"io.github.alexandrepiveteau.echo.core.log.History.registerValueUpdateListener","location":"library/echo-core/io.github.alexandrepiveteau.echo.core.log/-history/register-value-update-listener.html","searchKeys":["registerValueUpdateListener","abstract fun registerValueUpdateListener(listener: History.OnValueUpdateListener<T>)","io.github.alexandrepiveteau.echo.core.log.History.registerValueUpdateListener"]},{"name":"abstract fun remove(offset: Int, size: Int = 1)","description":"io.github.alexandrepiveteau.echo.core.buffer.MutableByteGapBuffer.remove","location":"library/echo-core/io.github.alexandrepiveteau.echo.core.buffer/-mutable-byte-gap-buffer/remove.html","searchKeys":["remove","abstract fun remove(offset: Int, size: Int = 1)","io.github.alexandrepiveteau.echo.core.buffer.MutableByteGapBuffer.remove"]},{"name":"abstract fun remove(offset: Int, size: Int = 1)","description":"io.github.alexandrepiveteau.echo.core.buffer.MutableCharGapBuffer.remove","location":"library/echo-core/io.github.alexandrepiveteau.echo.core.buffer/-mutable-char-gap-buffer/remove.html","searchKeys":["remove","abstract fun remove(offset: Int, size: Int = 1)","io.github.alexandrepiveteau.echo.core.buffer.MutableCharGapBuffer.remove"]},{"name":"abstract fun remove(offset: Int, size: Int = 1)","description":"io.github.alexandrepiveteau.echo.core.buffer.MutableEventIdentifierGapBuffer.remove","location":"library/echo-core/io.github.alexandrepiveteau.echo.core.buffer/-mutable-event-identifier-gap-buffer/remove.html","searchKeys":["remove","abstract fun remove(offset: Int, size: Int = 1)","io.github.alexandrepiveteau.echo.core.buffer.MutableEventIdentifierGapBuffer.remove"]},{"name":"abstract fun remove(offset: Int, size: Int = 1)","description":"io.github.alexandrepiveteau.echo.core.buffer.MutableGapBuffer.remove","location":"library/echo-core/io.github.alexandrepiveteau.echo.core.buffer/-mutable-gap-buffer/remove.html","searchKeys":["remove","abstract fun remove(offset: Int, size: Int = 1)","io.github.alexandrepiveteau.echo.core.buffer.MutableGapBuffer.remove"]},{"name":"abstract fun remove(offset: Int, size: Int = 1)","description":"io.github.alexandrepiveteau.echo.core.buffer.MutableIntGapBuffer.remove","location":"library/echo-core/io.github.alexandrepiveteau.echo.core.buffer/-mutable-int-gap-buffer/remove.html","searchKeys":["remove","abstract fun remove(offset: Int, size: Int = 1)","io.github.alexandrepiveteau.echo.core.buffer.MutableIntGapBuffer.remove"]},{"name":"abstract fun remove(seqno: SequenceNumber, site: SiteIdentifier): Boolean","description":"io.github.alexandrepiveteau.echo.core.log.MutableEventLog.remove","location":"library/echo-core/io.github.alexandrepiveteau.echo.core.log/-mutable-event-log/remove.html","searchKeys":["remove","abstract fun remove(seqno: SequenceNumber, site: SiteIdentifier): Boolean","io.github.alexandrepiveteau.echo.core.log.MutableEventLog.remove"]},{"name":"abstract fun shift(amount: Int)","description":"io.github.alexandrepiveteau.echo.core.buffer.Gap.shift","location":"library/echo-core/io.github.alexandrepiveteau.echo.core.buffer/-gap/shift.html","searchKeys":["shift","abstract fun shift(amount: Int)","io.github.alexandrepiveteau.echo.core.buffer.Gap.shift"]},{"name":"abstract fun unregisterLogUpdateListener(listener: EventLog.OnLogUpdateListener)","description":"io.github.alexandrepiveteau.echo.core.log.EventLog.unregisterLogUpdateListener","location":"library/echo-core/io.github.alexandrepiveteau.echo.core.log/-event-log/unregister-log-update-listener.html","searchKeys":["unregisterLogUpdateListener","abstract fun unregisterLogUpdateListener(listener: EventLog.OnLogUpdateListener)","io.github.alexandrepiveteau.echo.core.log.EventLog.unregisterLogUpdateListener"]},{"name":"abstract fun unregisterValueUpdateListener(listener: History.OnValueUpdateListener<T>)","description":"io.github.alexandrepiveteau.echo.core.log.History.unregisterValueUpdateListener","location":"library/echo-core/io.github.alexandrepiveteau.echo.core.log/-history/unregister-value-update-listener.html","searchKeys":["unregisterValueUpdateListener","abstract fun unregisterValueUpdateListener(listener: History.OnValueUpdateListener<T>)","io.github.alexandrepiveteau.echo.core.log.History.unregisterValueUpdateListener"]},{"name":"abstract operator fun get(offset: Int): Byte","description":"io.github.alexandrepiveteau.echo.core.buffer.MutableByteGapBuffer.get","location":"library/echo-core/io.github.alexandrepiveteau.echo.core.buffer/-mutable-byte-gap-buffer/get.html","searchKeys":["get","abstract operator fun get(offset: Int): Byte","io.github.alexandrepiveteau.echo.core.buffer.MutableByteGapBuffer.get"]},{"name":"abstract operator fun get(offset: Int): Char","description":"io.github.alexandrepiveteau.echo.core.buffer.MutableCharGapBuffer.get","location":"library/echo-core/io.github.alexandrepiveteau.echo.core.buffer/-mutable-char-gap-buffer/get.html","searchKeys":["get","abstract operator fun get(offset: Int): Char","io.github.alexandrepiveteau.echo.core.buffer.MutableCharGapBuffer.get"]},{"name":"abstract operator fun get(offset: Int): EventIdentifier","description":"io.github.alexandrepiveteau.echo.core.buffer.MutableEventIdentifierGapBuffer.get","location":"library/echo-core/io.github.alexandrepiveteau.echo.core.buffer/-mutable-event-identifier-gap-buffer/get.html","searchKeys":["get","abstract operator fun get(offset: Int): EventIdentifier","io.github.alexandrepiveteau.echo.core.buffer.MutableEventIdentifierGapBuffer.get"]},{"name":"abstract operator fun get(offset: Int): Int","description":"io.github.alexandrepiveteau.echo.core.buffer.MutableIntGapBuffer.get","location":"library/echo-core/io.github.alexandrepiveteau.echo.core.buffer/-mutable-int-gap-buffer/get.html","searchKeys":["get","abstract operator fun get(offset: Int): Int","io.github.alexandrepiveteau.echo.core.buffer.MutableIntGapBuffer.get"]},{"name":"abstract operator fun get(offset: Int): T","description":"io.github.alexandrepiveteau.echo.core.buffer.MutableGapBuffer.get","location":"library/echo-core/io.github.alexandrepiveteau.echo.core.buffer/-mutable-gap-buffer/get.html","searchKeys":["get","abstract operator fun get(offset: Int): T","io.github.alexandrepiveteau.echo.core.buffer.MutableGapBuffer.get"]},{"name":"abstract operator fun iterator(): EventIterator","description":"io.github.alexandrepiveteau.echo.core.log.EventLog.iterator","location":"library/echo-core/io.github.alexandrepiveteau.echo.core.log/-event-log/iterator.html","searchKeys":["iterator","abstract operator fun iterator(): EventIterator","io.github.alexandrepiveteau.echo.core.log.EventLog.iterator"]},{"name":"abstract operator fun set(offset: Int, value: Byte)","description":"io.github.alexandrepiveteau.echo.core.buffer.MutableByteGapBuffer.set","location":"library/echo-core/io.github.alexandrepiveteau.echo.core.buffer/-mutable-byte-gap-buffer/set.html","searchKeys":["set","abstract operator fun set(offset: Int, value: Byte)","io.github.alexandrepiveteau.echo.core.buffer.MutableByteGapBuffer.set"]},{"name":"abstract operator fun set(offset: Int, value: Char)","description":"io.github.alexandrepiveteau.echo.core.buffer.MutableCharGapBuffer.set","location":"library/echo-core/io.github.alexandrepiveteau.echo.core.buffer/-mutable-char-gap-buffer/set.html","searchKeys":["set","abstract operator fun set(offset: Int, value: Char)","io.github.alexandrepiveteau.echo.core.buffer.MutableCharGapBuffer.set"]},{"name":"abstract operator fun set(offset: Int, value: EventIdentifier)","description":"io.github.alexandrepiveteau.echo.core.buffer.MutableEventIdentifierGapBuffer.set","location":"library/echo-core/io.github.alexandrepiveteau.echo.core.buffer/-mutable-event-identifier-gap-buffer/set.html","searchKeys":["set","abstract operator fun set(offset: Int, value: EventIdentifier)","io.github.alexandrepiveteau.echo.core.buffer.MutableEventIdentifierGapBuffer.set"]},{"name":"abstract operator fun set(offset: Int, value: Int)","description":"io.github.alexandrepiveteau.echo.core.buffer.MutableIntGapBuffer.set","location":"library/echo-core/io.github.alexandrepiveteau.echo.core.buffer/-mutable-int-gap-buffer/set.html","searchKeys":["set","abstract operator fun set(offset: Int, value: Int)","io.github.alexandrepiveteau.echo.core.buffer.MutableIntGapBuffer.set"]},{"name":"abstract operator fun set(offset: Int, value: T)","description":"io.github.alexandrepiveteau.echo.core.buffer.MutableGapBuffer.set","location":"library/echo-core/io.github.alexandrepiveteau.echo.core.buffer/-mutable-gap-buffer/set.html","searchKeys":["set","abstract operator fun set(offset: Int, value: T)","io.github.alexandrepiveteau.echo.core.buffer.MutableGapBuffer.set"]},{"name":"abstract val current: T","description":"io.github.alexandrepiveteau.echo.core.log.History.current","location":"library/echo-core/io.github.alexandrepiveteau.echo.core.log/-history/current.html","searchKeys":["current","abstract val current: T","io.github.alexandrepiveteau.echo.core.log.History.current"]},{"name":"abstract val endIndex: Int","description":"io.github.alexandrepiveteau.echo.core.buffer.Gap.endIndex","location":"library/echo-core/io.github.alexandrepiveteau.echo.core.buffer/-gap/end-index.html","searchKeys":["endIndex","abstract val endIndex: Int","io.github.alexandrepiveteau.echo.core.buffer.Gap.endIndex"]},{"name":"abstract val gap: Gap","description":"io.github.alexandrepiveteau.echo.core.buffer.MutableByteGapBuffer.gap","location":"library/echo-core/io.github.alexandrepiveteau.echo.core.buffer/-mutable-byte-gap-buffer/gap.html","searchKeys":["gap","abstract val gap: Gap","io.github.alexandrepiveteau.echo.core.buffer.MutableByteGapBuffer.gap"]},{"name":"abstract val gap: Gap","description":"io.github.alexandrepiveteau.echo.core.buffer.MutableCharGapBuffer.gap","location":"library/echo-core/io.github.alexandrepiveteau.echo.core.buffer/-mutable-char-gap-buffer/gap.html","searchKeys":["gap","abstract val gap: Gap","io.github.alexandrepiveteau.echo.core.buffer.MutableCharGapBuffer.gap"]},{"name":"abstract val gap: Gap","description":"io.github.alexandrepiveteau.echo.core.buffer.MutableEventIdentifierGapBuffer.gap","location":"library/echo-core/io.github.alexandrepiveteau.echo.core.buffer/-mutable-event-identifier-gap-buffer/gap.html","searchKeys":["gap","abstract val gap: Gap","io.github.alexandrepiveteau.echo.core.buffer.MutableEventIdentifierGapBuffer.gap"]},{"name":"abstract val gap: Gap","description":"io.github.alexandrepiveteau.echo.core.buffer.MutableGapBuffer.gap","location":"library/echo-core/io.github.alexandrepiveteau.echo.core.buffer/-mutable-gap-buffer/gap.html","searchKeys":["gap","abstract val gap: Gap","io.github.alexandrepiveteau.echo.core.buffer.MutableGapBuffer.gap"]},{"name":"abstract val gap: Gap","description":"io.github.alexandrepiveteau.echo.core.buffer.MutableIntGapBuffer.gap","location":"library/echo-core/io.github.alexandrepiveteau.echo.core.buffer/-mutable-int-gap-buffer/gap.html","searchKeys":["gap","abstract val gap: Gap","io.github.alexandrepiveteau.echo.core.buffer.MutableIntGapBuffer.gap"]},{"name":"abstract val nextEvent: MutableByteGapBuffer","description":"io.github.alexandrepiveteau.echo.core.log.EventIterator.nextEvent","location":"library/echo-core/io.github.alexandrepiveteau.echo.core.log/-event-iterator/next-event.html","searchKeys":["nextEvent","abstract val nextEvent: MutableByteGapBuffer","io.github.alexandrepiveteau.echo.core.log.EventIterator.nextEvent"]},{"name":"abstract val nextFrom: Int","description":"io.github.alexandrepiveteau.echo.core.log.EventIterator.nextFrom","location":"library/echo-core/io.github.alexandrepiveteau.echo.core.log/-event-iterator/next-from.html","searchKeys":["nextFrom","abstract val nextFrom: Int","io.github.alexandrepiveteau.echo.core.log.EventIterator.nextFrom"]},{"name":"abstract val nextSeqno: SequenceNumber","description":"io.github.alexandrepiveteau.echo.core.log.EventIterator.nextSeqno","location":"library/echo-core/io.github.alexandrepiveteau.echo.core.log/-event-iterator/next-seqno.html","searchKeys":["nextSeqno","abstract val nextSeqno: SequenceNumber","io.github.alexandrepiveteau.echo.core.log.EventIterator.nextSeqno"]},{"name":"abstract val nextSite: SiteIdentifier","description":"io.github.alexandrepiveteau.echo.core.log.EventIterator.nextSite","location":"library/echo-core/io.github.alexandrepiveteau.echo.core.log/-event-iterator/next-site.html","searchKeys":["nextSite","abstract val nextSite: SiteIdentifier","io.github.alexandrepiveteau.echo.core.log.EventIterator.nextSite"]},{"name":"abstract val nextUntil: Int","description":"io.github.alexandrepiveteau.echo.core.log.EventIterator.nextUntil","location":"library/echo-core/io.github.alexandrepiveteau.echo.core.log/-event-iterator/next-until.html","searchKeys":["nextUntil","abstract val nextUntil: Int","io.github.alexandrepiveteau.echo.core.log.EventIterator.nextUntil"]},{"name":"abstract val previousEvent: MutableByteGapBuffer","description":"io.github.alexandrepiveteau.echo.core.log.EventIterator.previousEvent","location":"library/echo-core/io.github.alexandrepiveteau.echo.core.log/-event-iterator/previous-event.html","searchKeys":["previousEvent","abstract val previousEvent: MutableByteGapBuffer","io.github.alexandrepiveteau.echo.core.log.EventIterator.previousEvent"]},{"name":"abstract val previousFrom: Int","description":"io.github.alexandrepiveteau.echo.core.log.EventIterator.previousFrom","location":"library/echo-core/io.github.alexandrepiveteau.echo.core.log/-event-iterator/previous-from.html","searchKeys":["previousFrom","abstract val previousFrom: Int","io.github.alexandrepiveteau.echo.core.log.EventIterator.previousFrom"]},{"name":"abstract val previousSeqno: SequenceNumber","description":"io.github.alexandrepiveteau.echo.core.log.EventIterator.previousSeqno","location":"library/echo-core/io.github.alexandrepiveteau.echo.core.log/-event-iterator/previous-seqno.html","searchKeys":["previousSeqno","abstract val previousSeqno: SequenceNumber","io.github.alexandrepiveteau.echo.core.log.EventIterator.previousSeqno"]},{"name":"abstract val previousSite: SiteIdentifier","description":"io.github.alexandrepiveteau.echo.core.log.EventIterator.previousSite","location":"library/echo-core/io.github.alexandrepiveteau.echo.core.log/-event-iterator/previous-site.html","searchKeys":["previousSite","abstract val previousSite: SiteIdentifier","io.github.alexandrepiveteau.echo.core.log.EventIterator.previousSite"]},{"name":"abstract val previousUntil: Int","description":"io.github.alexandrepiveteau.echo.core.log.EventIterator.previousUntil","location":"library/echo-core/io.github.alexandrepiveteau.echo.core.log/-event-iterator/previous-until.html","searchKeys":["previousUntil","abstract val previousUntil: Int","io.github.alexandrepiveteau.echo.core.log.EventIterator.previousUntil"]},{"name":"abstract val size: Int","description":"io.github.alexandrepiveteau.echo.core.buffer.MutableByteGapBuffer.size","location":"library/echo-core/io.github.alexandrepiveteau.echo.core.buffer/-mutable-byte-gap-buffer/size.html","searchKeys":["size","abstract val size: Int","io.github.alexandrepiveteau.echo.core.buffer.MutableByteGapBuffer.size"]},{"name":"abstract val size: Int","description":"io.github.alexandrepiveteau.echo.core.buffer.MutableCharGapBuffer.size","location":"library/echo-core/io.github.alexandrepiveteau.echo.core.buffer/-mutable-char-gap-buffer/size.html","searchKeys":["size","abstract val size: Int","io.github.alexandrepiveteau.echo.core.buffer.MutableCharGapBuffer.size"]},{"name":"abstract val size: Int","description":"io.github.alexandrepiveteau.echo.core.buffer.MutableEventIdentifierGapBuffer.size","location":"library/echo-core/io.github.alexandrepiveteau.echo.core.buffer/-mutable-event-identifier-gap-buffer/size.html","searchKeys":["size","abstract val size: Int","io.github.alexandrepiveteau.echo.core.buffer.MutableEventIdentifierGapBuffer.size"]},{"name":"abstract val size: Int","description":"io.github.alexandrepiveteau.echo.core.buffer.MutableGapBuffer.size","location":"library/echo-core/io.github.alexandrepiveteau.echo.core.buffer/-mutable-gap-buffer/size.html","searchKeys":["size","abstract val size: Int","io.github.alexandrepiveteau.echo.core.buffer.MutableGapBuffer.size"]},{"name":"abstract val size: Int","description":"io.github.alexandrepiveteau.echo.core.buffer.MutableIntGapBuffer.size","location":"library/echo-core/io.github.alexandrepiveteau.echo.core.buffer/-mutable-int-gap-buffer/size.html","searchKeys":["size","abstract val size: Int","io.github.alexandrepiveteau.echo.core.buffer.MutableIntGapBuffer.size"]},{"name":"abstract val size: Int","description":"io.github.alexandrepiveteau.echo.core.log.EventLog.size","location":"library/echo-core/io.github.alexandrepiveteau.echo.core.log/-event-log/size.html","searchKeys":["size","abstract val size: Int","io.github.alexandrepiveteau.echo.core.log.EventLog.size"]},{"name":"abstract val startIndex: Int","description":"io.github.alexandrepiveteau.echo.core.buffer.Gap.startIndex","location":"library/echo-core/io.github.alexandrepiveteau.echo.core.buffer/-gap/start-index.html","searchKeys":["startIndex","abstract val startIndex: Int","io.github.alexandrepiveteau.echo.core.buffer.Gap.startIndex"]},{"name":"class EventIdentifierArray","description":"io.github.alexandrepiveteau.echo.core.causality.EventIdentifierArray","location":"library/echo-core/io.github.alexandrepiveteau.echo.core.causality/-event-identifier-array/index.html","searchKeys":["EventIdentifierArray","class EventIdentifierArray","io.github.alexandrepiveteau.echo.core.causality.EventIdentifierArray"]},{"name":"const val DefaultSize: Int = 32","description":"io.github.alexandrepiveteau.echo.core.buffer.Gap.Companion.DefaultSize","location":"library/echo-core/io.github.alexandrepiveteau.echo.core.buffer/-gap/-companion/-default-size.html","searchKeys":["DefaultSize","const val DefaultSize: Int = 32","io.github.alexandrepiveteau.echo.core.buffer.Gap.Companion.DefaultSize"]},{"name":"data class Event(val seqno: SequenceNumber, val site: SiteIdentifier, val data: ByteArray) : Comparable<Event> ","description":"io.github.alexandrepiveteau.echo.core.log.Event","location":"library/echo-core/io.github.alexandrepiveteau.echo.core.log/-event/index.html","searchKeys":["Event","data class Event(val seqno: SequenceNumber, val site: SiteIdentifier, val data: ByteArray) : Comparable<Event> ","io.github.alexandrepiveteau.echo.core.log.Event"]},{"name":"fun <T> MutableGapBuffer<T>.pushAtGap(array: Array<T>, from: Int = 0, until: Int = array.size)","description":"io.github.alexandrepiveteau.echo.core.buffer.pushAtGap","location":"library/echo-core/io.github.alexandrepiveteau.echo.core.buffer/push-at-gap.html","searchKeys":["pushAtGap","fun <T> MutableGapBuffer<T>.pushAtGap(array: Array<T>, from: Int = 0, until: Int = array.size)","io.github.alexandrepiveteau.echo.core.buffer.pushAtGap"]},{"name":"fun <T> MutableGapBuffer<T>.pushAtGap(value: T)","description":"io.github.alexandrepiveteau.echo.core.buffer.pushAtGap","location":"library/echo-core/io.github.alexandrepiveteau.echo.core.buffer/push-at-gap.html","searchKeys":["pushAtGap","fun <T> MutableGapBuffer<T>.pushAtGap(value: T)","io.github.alexandrepiveteau.echo.core.buffer.pushAtGap"]},{"name":"fun <T> mutableHistoryOf(initial: T, projection: MutableProjection<T>, clock: Clock = Clock.System): MutableHistory<T>","description":"io.github.alexandrepiveteau.echo.core.log.mutableHistoryOf","location":"library/echo-core/io.github.alexandrepiveteau.echo.core.log/mutable-history-of.html","searchKeys":["mutableHistoryOf","fun <T> mutableHistoryOf(initial: T, projection: MutableProjection<T>, clock: Clock = Clock.System): MutableHistory<T>","io.github.alexandrepiveteau.echo.core.log.mutableHistoryOf"]},{"name":"fun <T> mutableHistoryOf(initial: T, projection: MutableProjection<T>, vararg events: Pair<EventIdentifier, ByteArray>, clock: Clock = Clock.System): MutableHistory<T>","description":"io.github.alexandrepiveteau.echo.core.log.mutableHistoryOf","location":"library/echo-core/io.github.alexandrepiveteau.echo.core.log/mutable-history-of.html","searchKeys":["mutableHistoryOf","fun <T> mutableHistoryOf(initial: T, projection: MutableProjection<T>, vararg events: Pair<EventIdentifier, ByteArray>, clock: Clock = Clock.System): MutableHistory<T>","io.github.alexandrepiveteau.echo.core.log.mutableHistoryOf"]},{"name":"fun Array<EventIdentifier>.toEventIdentifierArray(): EventIdentifierArray","description":"io.github.alexandrepiveteau.echo.core.causality.toEventIdentifierArray","location":"library/echo-core/io.github.alexandrepiveteau.echo.core.causality/to-event-identifier-array.html","searchKeys":["toEventIdentifierArray","fun Array<EventIdentifier>.toEventIdentifierArray(): EventIdentifierArray","io.github.alexandrepiveteau.echo.core.causality.toEventIdentifierArray"]},{"name":"fun ByteArray.toMutableGapBuffer(): MutableByteGapBuffer","description":"io.github.alexandrepiveteau.echo.core.buffer.toMutableGapBuffer","location":"library/echo-core/io.github.alexandrepiveteau.echo.core.buffer/to-mutable-gap-buffer.html","searchKeys":["toMutableGapBuffer","fun ByteArray.toMutableGapBuffer(): MutableByteGapBuffer","io.github.alexandrepiveteau.echo.core.buffer.toMutableGapBuffer"]},{"name":"fun CharArray.toMutableGapBuffer(): MutableCharGapBuffer","description":"io.github.alexandrepiveteau.echo.core.buffer.toMutableGapBuffer","location":"library/echo-core/io.github.alexandrepiveteau.echo.core.buffer/to-mutable-gap-buffer.html","searchKeys":["toMutableGapBuffer","fun CharArray.toMutableGapBuffer(): MutableCharGapBuffer","io.github.alexandrepiveteau.echo.core.buffer.toMutableGapBuffer"]},{"name":"fun Event(seqno: SequenceNumber, site: SiteIdentifier, data: ByteArray)","description":"io.github.alexandrepiveteau.echo.core.log.Event.Event","location":"library/echo-core/io.github.alexandrepiveteau.echo.core.log/-event/-event.html","searchKeys":["Event","fun Event(seqno: SequenceNumber, site: SiteIdentifier, data: ByteArray)","io.github.alexandrepiveteau.echo.core.log.Event.Event"]},{"name":"fun EventIdentifier(seqno: SequenceNumber, site: SiteIdentifier): EventIdentifier","description":"io.github.alexandrepiveteau.echo.core.causality.EventIdentifier","location":"library/echo-core/io.github.alexandrepiveteau.echo.core.causality/-event-identifier.html","searchKeys":["EventIdentifier","fun EventIdentifier(seqno: SequenceNumber, site: SiteIdentifier): EventIdentifier","io.github.alexandrepiveteau.echo.core.causality.EventIdentifier"]},{"name":"fun EventIdentifier.toULong(): ULong","description":"io.github.alexandrepiveteau.echo.core.causality.toULong","location":"library/echo-core/io.github.alexandrepiveteau.echo.core.causality/to-u-long.html","searchKeys":["toULong","fun EventIdentifier.toULong(): ULong","io.github.alexandrepiveteau.echo.core.causality.toULong"]},{"name":"fun EventIdentifierArray(size: Int)","description":"io.github.alexandrepiveteau.echo.core.causality.EventIdentifierArray.EventIdentifierArray","location":"library/echo-core/io.github.alexandrepiveteau.echo.core.causality/-event-identifier-array/-event-identifier-array.html","searchKeys":["EventIdentifierArray","fun EventIdentifierArray(size: Int)","io.github.alexandrepiveteau.echo.core.causality.EventIdentifierArray.EventIdentifierArray"]},{"name":"fun EventIdentifierArray.binarySearch(element: EventIdentifier, fromIndex: Int = 0, toIndex: Int = size): Int","description":"io.github.alexandrepiveteau.echo.core.causality.binarySearch","location":"library/echo-core/io.github.alexandrepiveteau.echo.core.causality/binary-search.html","searchKeys":["binarySearch","fun EventIdentifierArray.binarySearch(element: EventIdentifier, fromIndex: Int = 0, toIndex: Int = size): Int","io.github.alexandrepiveteau.echo.core.causality.binarySearch"]},{"name":"fun EventIdentifierArray.binarySearchBySite(element: SiteIdentifier, fromIndex: Int = 0, toIndex: Int = size): Int","description":"io.github.alexandrepiveteau.echo.core.causality.binarySearchBySite","location":"library/echo-core/io.github.alexandrepiveteau.echo.core.causality/binary-search-by-site.html","searchKeys":["binarySearchBySite","fun EventIdentifierArray.binarySearchBySite(element: SiteIdentifier, fromIndex: Int = 0, toIndex: Int = size): Int","io.github.alexandrepiveteau.echo.core.causality.binarySearchBySite"]},{"name":"fun EventIdentifierArray.copyInto(destination: EventIdentifierArray, destinationOffset: Int = 0, startIndex: Int = 0, endIndex: Int = size): EventIdentifierArray","description":"io.github.alexandrepiveteau.echo.core.causality.copyInto","location":"library/echo-core/io.github.alexandrepiveteau.echo.core.causality/copy-into.html","searchKeys":["copyInto","fun EventIdentifierArray.copyInto(destination: EventIdentifierArray, destinationOffset: Int = 0, startIndex: Int = 0, endIndex: Int = size): EventIdentifierArray","io.github.alexandrepiveteau.echo.core.causality.copyInto"]},{"name":"fun EventIdentifierArray.sort()","description":"io.github.alexandrepiveteau.echo.core.causality.sort","location":"library/echo-core/io.github.alexandrepiveteau.echo.core.causality/sort.html","searchKeys":["sort","fun EventIdentifierArray.sort()","io.github.alexandrepiveteau.echo.core.causality.sort"]},{"name":"fun EventIdentifierArray.toMutableGapBuffer(): MutableEventIdentifierGapBuffer","description":"io.github.alexandrepiveteau.echo.core.buffer.toMutableGapBuffer","location":"library/echo-core/io.github.alexandrepiveteau.echo.core.buffer/to-mutable-gap-buffer.html","searchKeys":["toMutableGapBuffer","fun EventIdentifierArray.toMutableGapBuffer(): MutableEventIdentifierGapBuffer","io.github.alexandrepiveteau.echo.core.buffer.toMutableGapBuffer"]},{"name":"fun EventIdentifierArray.toTypedArray(): Array<EventIdentifier>","description":"io.github.alexandrepiveteau.echo.core.causality.toTypedArray","location":"library/echo-core/io.github.alexandrepiveteau.echo.core.causality/to-typed-array.html","searchKeys":["toTypedArray","fun EventIdentifierArray.toTypedArray(): Array<EventIdentifier>","io.github.alexandrepiveteau.echo.core.causality.toTypedArray"]},{"name":"fun EventIdentifierIterator()","description":"io.github.alexandrepiveteau.echo.core.causality.EventIdentifierIterator.EventIdentifierIterator","location":"library/echo-core/io.github.alexandrepiveteau.echo.core.causality/-event-identifier-iterator/-event-identifier-iterator.html","searchKeys":["EventIdentifierIterator","fun EventIdentifierIterator()","io.github.alexandrepiveteau.echo.core.causality.EventIdentifierIterator.EventIdentifierIterator"]},{"name":"fun EventIterator.isEmpty(): Boolean","description":"io.github.alexandrepiveteau.echo.core.log.isEmpty","location":"library/echo-core/io.github.alexandrepiveteau.echo.core.log/is-empty.html","searchKeys":["isEmpty","fun EventIterator.isEmpty(): Boolean","io.github.alexandrepiveteau.echo.core.log.isEmpty"]},{"name":"fun EventIterator.isNotEmpty(): Boolean","description":"io.github.alexandrepiveteau.echo.core.log.isNotEmpty","location":"library/echo-core/io.github.alexandrepiveteau.echo.core.log/is-not-empty.html","searchKeys":["isNotEmpty","fun EventIterator.isNotEmpty(): Boolean","io.github.alexandrepiveteau.echo.core.log.isNotEmpty"]},{"name":"fun EventIterator.moveToEnd()","description":"io.github.alexandrepiveteau.echo.core.log.moveToEnd","location":"library/echo-core/io.github.alexandrepiveteau.echo.core.log/move-to-end.html","searchKeys":["moveToEnd","fun EventIterator.moveToEnd()","io.github.alexandrepiveteau.echo.core.log.moveToEnd"]},{"name":"fun EventIterator.moveToStart()","description":"io.github.alexandrepiveteau.echo.core.log.moveToStart","location":"library/echo-core/io.github.alexandrepiveteau.echo.core.log/move-to-start.html","searchKeys":["moveToStart","fun EventIterator.moveToStart()","io.github.alexandrepiveteau.echo.core.log.moveToStart"]},{"name":"fun EventLog.copyOf(): EventLog","description":"io.github.alexandrepiveteau.echo.core.log.copyOf","location":"library/echo-core/io.github.alexandrepiveteau.echo.core.log/copy-of.html","searchKeys":["copyOf","fun EventLog.copyOf(): EventLog","io.github.alexandrepiveteau.echo.core.log.copyOf"]},{"name":"fun EventLog.isEmpty(): Boolean","description":"io.github.alexandrepiveteau.echo.core.log.isEmpty","location":"library/echo-core/io.github.alexandrepiveteau.echo.core.log/is-empty.html","searchKeys":["isEmpty","fun EventLog.isEmpty(): Boolean","io.github.alexandrepiveteau.echo.core.log.isEmpty"]},{"name":"fun EventLog.isNotEmpty(): Boolean","description":"io.github.alexandrepiveteau.echo.core.log.isNotEmpty","location":"library/echo-core/io.github.alexandrepiveteau.echo.core.log/is-not-empty.html","searchKeys":["isNotEmpty","fun EventLog.isNotEmpty(): Boolean","io.github.alexandrepiveteau.echo.core.log.isNotEmpty"]},{"name":"fun EventLog.toList(): List<Event>","description":"io.github.alexandrepiveteau.echo.core.log.toList","location":"library/echo-core/io.github.alexandrepiveteau.echo.core.log/to-list.html","searchKeys":["toList","fun EventLog.toList(): List<Event>","io.github.alexandrepiveteau.echo.core.log.toList"]},{"name":"fun EventLog.toMutableEventLog(): MutableEventLog","description":"io.github.alexandrepiveteau.echo.core.log.toMutableEventLog","location":"library/echo-core/io.github.alexandrepiveteau.echo.core.log/to-mutable-event-log.html","searchKeys":["toMutableEventLog","fun EventLog.toMutableEventLog(): MutableEventLog","io.github.alexandrepiveteau.echo.core.log.toMutableEventLog"]},{"name":"fun Instant.toSequenceNumber(): SequenceNumber","description":"io.github.alexandrepiveteau.echo.core.causality.toSequenceNumber","location":"library/echo-core/io.github.alexandrepiveteau.echo.core.causality/to-sequence-number.html","searchKeys":["toSequenceNumber","fun Instant.toSequenceNumber(): SequenceNumber","io.github.alexandrepiveteau.echo.core.causality.toSequenceNumber"]},{"name":"fun IntArray.toMutableGapBuffer(): MutableIntGapBuffer","description":"io.github.alexandrepiveteau.echo.core.buffer.toMutableGapBuffer","location":"library/echo-core/io.github.alexandrepiveteau.echo.core.buffer/to-mutable-gap-buffer.html","searchKeys":["toMutableGapBuffer","fun IntArray.toMutableGapBuffer(): MutableIntGapBuffer","io.github.alexandrepiveteau.echo.core.buffer.toMutableGapBuffer"]},{"name":"fun MutableByteGapBuffer(size: Int): MutableByteGapBuffer","description":"io.github.alexandrepiveteau.echo.core.buffer.MutableByteGapBuffer","location":"library/echo-core/io.github.alexandrepiveteau.echo.core.buffer/-mutable-byte-gap-buffer.html","searchKeys":["MutableByteGapBuffer","fun MutableByteGapBuffer(size: Int): MutableByteGapBuffer","io.github.alexandrepiveteau.echo.core.buffer.MutableByteGapBuffer"]},{"name":"fun MutableByteGapBuffer(size: Int, init: (Int) -> Byte): MutableByteGapBuffer","description":"io.github.alexandrepiveteau.echo.core.buffer.MutableByteGapBuffer","location":"library/echo-core/io.github.alexandrepiveteau.echo.core.buffer/-mutable-byte-gap-buffer.html","searchKeys":["MutableByteGapBuffer","fun MutableByteGapBuffer(size: Int, init: (Int) -> Byte): MutableByteGapBuffer","io.github.alexandrepiveteau.echo.core.buffer.MutableByteGapBuffer"]},{"name":"fun MutableByteGapBuffer.copyOfRange(from: Int, until: Int): ByteArray","description":"io.github.alexandrepiveteau.echo.core.buffer.copyOfRange","location":"library/echo-core/io.github.alexandrepiveteau.echo.core.buffer/copy-of-range.html","searchKeys":["copyOfRange","fun MutableByteGapBuffer.copyOfRange(from: Int, until: Int): ByteArray","io.github.alexandrepiveteau.echo.core.buffer.copyOfRange"]},{"name":"fun MutableByteGapBuffer.pushAtGap(array: ByteArray, from: Int = 0, until: Int = array.size)","description":"io.github.alexandrepiveteau.echo.core.buffer.pushAtGap","location":"library/echo-core/io.github.alexandrepiveteau.echo.core.buffer/push-at-gap.html","searchKeys":["pushAtGap","fun MutableByteGapBuffer.pushAtGap(array: ByteArray, from: Int = 0, until: Int = array.size)","io.github.alexandrepiveteau.echo.core.buffer.pushAtGap"]},{"name":"fun MutableByteGapBuffer.pushAtGap(value: Byte)","description":"io.github.alexandrepiveteau.echo.core.buffer.pushAtGap","location":"library/echo-core/io.github.alexandrepiveteau.echo.core.buffer/push-at-gap.html","searchKeys":["pushAtGap","fun MutableByteGapBuffer.pushAtGap(value: Byte)","io.github.alexandrepiveteau.echo.core.buffer.pushAtGap"]},{"name":"fun MutableByteGapBuffer.toByteArray(): ByteArray","description":"io.github.alexandrepiveteau.echo.core.buffer.toByteArray","location":"library/echo-core/io.github.alexandrepiveteau.echo.core.buffer/to-byte-array.html","searchKeys":["toByteArray","fun MutableByteGapBuffer.toByteArray(): ByteArray","io.github.alexandrepiveteau.echo.core.buffer.toByteArray"]},{"name":"fun MutableByteGapBuffer.toTypedArray(): Array<Byte>","description":"io.github.alexandrepiveteau.echo.core.buffer.toTypedArray","location":"library/echo-core/io.github.alexandrepiveteau.echo.core.buffer/to-typed-array.html","searchKeys":["toTypedArray","fun MutableByteGapBuffer.toTypedArray(): Array<Byte>","io.github.alexandrepiveteau.echo.core.buffer.toTypedArray"]},{"name":"fun MutableCharGapBuffer(size: Int): MutableCharGapBuffer","description":"io.github.alexandrepiveteau.echo.core.buffer.MutableCharGapBuffer","location":"library/echo-core/io.github.alexandrepiveteau.echo.core.buffer/-mutable-char-gap-buffer.html","searchKeys":["MutableCharGapBuffer","fun MutableCharGapBuffer(size: Int): MutableCharGapBuffer","io.github.alexandrepiveteau.echo.core.buffer.MutableCharGapBuffer"]},{"name":"fun MutableCharGapBuffer(size: Int, init: (Int) -> Char): MutableCharGapBuffer","description":"io.github.alexandrepiveteau.echo.core.buffer.MutableCharGapBuffer","location":"library/echo-core/io.github.alexandrepiveteau.echo.core.buffer/-mutable-char-gap-buffer.html","searchKeys":["MutableCharGapBuffer","fun MutableCharGapBuffer(size: Int, init: (Int) -> Char): MutableCharGapBuffer","io.github.alexandrepiveteau.echo.core.buffer.MutableCharGapBuffer"]},{"name":"fun MutableCharGapBuffer.copyOfRange(from: Int, until: Int): CharArray","description":"io.github.alexandrepiveteau.echo.core.buffer.copyOfRange","location":"library/echo-core/io.github.alexandrepiveteau.echo.core.buffer/copy-of-range.html","searchKeys":["copyOfRange","fun MutableCharGapBuffer.copyOfRange(from: Int, until: Int): CharArray","io.github.alexandrepiveteau.echo.core.buffer.copyOfRange"]},{"name":"fun MutableCharGapBuffer.pushAtGap(array: CharArray, from: Int = 0, until: Int = array.size)","description":"io.github.alexandrepiveteau.echo.core.buffer.pushAtGap","location":"library/echo-core/io.github.alexandrepiveteau.echo.core.buffer/push-at-gap.html","searchKeys":["pushAtGap","fun MutableCharGapBuffer.pushAtGap(array: CharArray, from: Int = 0, until: Int = array.size)","io.github.alexandrepiveteau.echo.core.buffer.pushAtGap"]},{"name":"fun MutableCharGapBuffer.pushAtGap(value: Char)","description":"io.github.alexandrepiveteau.echo.core.buffer.pushAtGap","location":"library/echo-core/io.github.alexandrepiveteau.echo.core.buffer/push-at-gap.html","searchKeys":["pushAtGap","fun MutableCharGapBuffer.pushAtGap(value: Char)","io.github.alexandrepiveteau.echo.core.buffer.pushAtGap"]},{"name":"fun MutableCharGapBuffer.toCharArray(): CharArray","description":"io.github.alexandrepiveteau.echo.core.buffer.toCharArray","location":"library/echo-core/io.github.alexandrepiveteau.echo.core.buffer/to-char-array.html","searchKeys":["toCharArray","fun MutableCharGapBuffer.toCharArray(): CharArray","io.github.alexandrepiveteau.echo.core.buffer.toCharArray"]},{"name":"fun MutableCharGapBuffer.toTypedArray(): Array<Char>","description":"io.github.alexandrepiveteau.echo.core.buffer.toTypedArray","location":"library/echo-core/io.github.alexandrepiveteau.echo.core.buffer/to-typed-array.html","searchKeys":["toTypedArray","fun MutableCharGapBuffer.toTypedArray(): Array<Char>","io.github.alexandrepiveteau.echo.core.buffer.toTypedArray"]},{"name":"fun MutableEventIdentifierGapBuffer(size: Int): MutableEventIdentifierGapBuffer","description":"io.github.alexandrepiveteau.echo.core.buffer.MutableEventIdentifierGapBuffer","location":"library/echo-core/io.github.alexandrepiveteau.echo.core.buffer/-mutable-event-identifier-gap-buffer.html","searchKeys":["MutableEventIdentifierGapBuffer","fun MutableEventIdentifierGapBuffer(size: Int): MutableEventIdentifierGapBuffer","io.github.alexandrepiveteau.echo.core.buffer.MutableEventIdentifierGapBuffer"]},{"name":"fun MutableEventIdentifierGapBuffer(size: Int, init: (Int) -> EventIdentifier): MutableEventIdentifierGapBuffer","description":"io.github.alexandrepiveteau.echo.core.buffer.MutableEventIdentifierGapBuffer","location":"library/echo-core/io.github.alexandrepiveteau.echo.core.buffer/-mutable-event-identifier-gap-buffer.html","searchKeys":["MutableEventIdentifierGapBuffer","fun MutableEventIdentifierGapBuffer(size: Int, init: (Int) -> EventIdentifier): MutableEventIdentifierGapBuffer","io.github.alexandrepiveteau.echo.core.buffer.MutableEventIdentifierGapBuffer"]},{"name":"fun MutableEventIdentifierGapBuffer.binarySearch(element: EventIdentifier, fromIndex: Int = 0, toIndex: Int = size): Int","description":"io.github.alexandrepiveteau.echo.core.buffer.binarySearch","location":"library/echo-core/io.github.alexandrepiveteau.echo.core.buffer/binary-search.html","searchKeys":["binarySearch","fun MutableEventIdentifierGapBuffer.binarySearch(element: EventIdentifier, fromIndex: Int = 0, toIndex: Int = size): Int","io.github.alexandrepiveteau.echo.core.buffer.binarySearch"]},{"name":"fun MutableEventIdentifierGapBuffer.binarySearchBySite(element: SiteIdentifier, fromIndex: Int = 0, toIndex: Int = size): Int","description":"io.github.alexandrepiveteau.echo.core.buffer.binarySearchBySite","location":"library/echo-core/io.github.alexandrepiveteau.echo.core.buffer/binary-search-by-site.html","searchKeys":["binarySearchBySite","fun MutableEventIdentifierGapBuffer.binarySearchBySite(element: SiteIdentifier, fromIndex: Int = 0, toIndex: Int = size): Int","io.github.alexandrepiveteau.echo.core.buffer.binarySearchBySite"]},{"name":"fun MutableEventIdentifierGapBuffer.copyOfRange(from: Int, until: Int): EventIdentifierArray","description":"io.github.alexandrepiveteau.echo.core.buffer.copyOfRange","location":"library/echo-core/io.github.alexandrepiveteau.echo.core.buffer/copy-of-range.html","searchKeys":["copyOfRange","fun MutableEventIdentifierGapBuffer.copyOfRange(from: Int, until: Int): EventIdentifierArray","io.github.alexandrepiveteau.echo.core.buffer.copyOfRange"]},{"name":"fun MutableEventIdentifierGapBuffer.linearSearch(value: EventIdentifier): Int","description":"io.github.alexandrepiveteau.echo.core.buffer.linearSearch","location":"library/echo-core/io.github.alexandrepiveteau.echo.core.buffer/linear-search.html","searchKeys":["linearSearch","fun MutableEventIdentifierGapBuffer.linearSearch(value: EventIdentifier): Int","io.github.alexandrepiveteau.echo.core.buffer.linearSearch"]},{"name":"fun MutableEventIdentifierGapBuffer.pushAtGap(array: EventIdentifierArray, from: Int = 0, until: Int = array.size)","description":"io.github.alexandrepiveteau.echo.core.buffer.pushAtGap","location":"library/echo-core/io.github.alexandrepiveteau.echo.core.buffer/push-at-gap.html","searchKeys":["pushAtGap","fun MutableEventIdentifierGapBuffer.pushAtGap(array: EventIdentifierArray, from: Int = 0, until: Int = array.size)","io.github.alexandrepiveteau.echo.core.buffer.pushAtGap"]},{"name":"fun MutableEventIdentifierGapBuffer.pushAtGap(value: EventIdentifier)","description":"io.github.alexandrepiveteau.echo.core.buffer.pushAtGap","location":"library/echo-core/io.github.alexandrepiveteau.echo.core.buffer/push-at-gap.html","searchKeys":["pushAtGap","fun MutableEventIdentifierGapBuffer.pushAtGap(value: EventIdentifier)","io.github.alexandrepiveteau.echo.core.buffer.pushAtGap"]},{"name":"fun MutableEventIdentifierGapBuffer.toEventIdentifierArray(): EventIdentifierArray","description":"io.github.alexandrepiveteau.echo.core.buffer.toEventIdentifierArray","location":"library/echo-core/io.github.alexandrepiveteau.echo.core.buffer/to-event-identifier-array.html","searchKeys":["toEventIdentifierArray","fun MutableEventIdentifierGapBuffer.toEventIdentifierArray(): EventIdentifierArray","io.github.alexandrepiveteau.echo.core.buffer.toEventIdentifierArray"]},{"name":"fun MutableEventIdentifierGapBuffer.toTypedArray(): Array<EventIdentifier>","description":"io.github.alexandrepiveteau.echo.core.buffer.toTypedArray","location":"library/echo-core/io.github.alexandrepiveteau.echo.core.buffer/to-typed-array.html","searchKeys":["toTypedArray","fun MutableEventIdentifierGapBuffer.toTypedArray(): Array<EventIdentifier>","io.github.alexandrepiveteau.echo.core.buffer.toTypedArray"]},{"name":"fun MutableIntGapBuffer(size: Int): MutableIntGapBuffer","description":"io.github.alexandrepiveteau.echo.core.buffer.MutableIntGapBuffer","location":"library/echo-core/io.github.alexandrepiveteau.echo.core.buffer/-mutable-int-gap-buffer.html","searchKeys":["MutableIntGapBuffer","fun MutableIntGapBuffer(size: Int): MutableIntGapBuffer","io.github.alexandrepiveteau.echo.core.buffer.MutableIntGapBuffer"]},{"name":"fun MutableIntGapBuffer(size: Int, init: (Int) -> Int): MutableIntGapBuffer","description":"io.github.alexandrepiveteau.echo.core.buffer.MutableIntGapBuffer","location":"library/echo-core/io.github.alexandrepiveteau.echo.core.buffer/-mutable-int-gap-buffer.html","searchKeys":["MutableIntGapBuffer","fun MutableIntGapBuffer(size: Int, init: (Int) -> Int): MutableIntGapBuffer","io.github.alexandrepiveteau.echo.core.buffer.MutableIntGapBuffer"]},{"name":"fun MutableIntGapBuffer.binarySearch(element: Int, fromIndex: Int = 0, toIndex: Int = size): Int","description":"io.github.alexandrepiveteau.echo.core.buffer.binarySearch","location":"library/echo-core/io.github.alexandrepiveteau.echo.core.buffer/binary-search.html","searchKeys":["binarySearch","fun MutableIntGapBuffer.binarySearch(element: Int, fromIndex: Int = 0, toIndex: Int = size): Int","io.github.alexandrepiveteau.echo.core.buffer.binarySearch"]},{"name":"fun MutableIntGapBuffer.copyOfRange(from: Int, until: Int): IntArray","description":"io.github.alexandrepiveteau.echo.core.buffer.copyOfRange","location":"library/echo-core/io.github.alexandrepiveteau.echo.core.buffer/copy-of-range.html","searchKeys":["copyOfRange","fun MutableIntGapBuffer.copyOfRange(from: Int, until: Int): IntArray","io.github.alexandrepiveteau.echo.core.buffer.copyOfRange"]},{"name":"fun MutableIntGapBuffer.linearSearch(value: Int): Int","description":"io.github.alexandrepiveteau.echo.core.buffer.linearSearch","location":"library/echo-core/io.github.alexandrepiveteau.echo.core.buffer/linear-search.html","searchKeys":["linearSearch","fun MutableIntGapBuffer.linearSearch(value: Int): Int","io.github.alexandrepiveteau.echo.core.buffer.linearSearch"]},{"name":"fun MutableIntGapBuffer.pushAtGap(array: IntArray, from: Int = 0, until: Int = array.size)","description":"io.github.alexandrepiveteau.echo.core.buffer.pushAtGap","location":"library/echo-core/io.github.alexandrepiveteau.echo.core.buffer/push-at-gap.html","searchKeys":["pushAtGap","fun MutableIntGapBuffer.pushAtGap(array: IntArray, from: Int = 0, until: Int = array.size)","io.github.alexandrepiveteau.echo.core.buffer.pushAtGap"]},{"name":"fun MutableIntGapBuffer.pushAtGap(value: Int)","description":"io.github.alexandrepiveteau.echo.core.buffer.pushAtGap","location":"library/echo-core/io.github.alexandrepiveteau.echo.core.buffer/push-at-gap.html","searchKeys":["pushAtGap","fun MutableIntGapBuffer.pushAtGap(value: Int)","io.github.alexandrepiveteau.echo.core.buffer.pushAtGap"]},{"name":"fun MutableIntGapBuffer.toIntArray(): IntArray","description":"io.github.alexandrepiveteau.echo.core.buffer.toIntArray","location":"library/echo-core/io.github.alexandrepiveteau.echo.core.buffer/to-int-array.html","searchKeys":["toIntArray","fun MutableIntGapBuffer.toIntArray(): IntArray","io.github.alexandrepiveteau.echo.core.buffer.toIntArray"]},{"name":"fun MutableIntGapBuffer.toTypedArray(): Array<Int>","description":"io.github.alexandrepiveteau.echo.core.buffer.toTypedArray","location":"library/echo-core/io.github.alexandrepiveteau.echo.core.buffer/to-typed-array.html","searchKeys":["toTypedArray","fun MutableIntGapBuffer.toTypedArray(): Array<Int>","io.github.alexandrepiveteau.echo.core.buffer.toTypedArray"]},{"name":"fun Random.nextSiteIdentifier(): SiteIdentifier","description":"io.github.alexandrepiveteau.echo.core.causality.nextSiteIdentifier","location":"library/echo-core/io.github.alexandrepiveteau.echo.core.causality/next-site-identifier.html","searchKeys":["nextSiteIdentifier","fun Random.nextSiteIdentifier(): SiteIdentifier","io.github.alexandrepiveteau.echo.core.causality.nextSiteIdentifier"]},{"name":"fun SequenceNumber.toUInt(): UInt","description":"io.github.alexandrepiveteau.echo.core.causality.toUInt","location":"library/echo-core/io.github.alexandrepiveteau.echo.core.causality/to-u-int.html","searchKeys":["toUInt","fun SequenceNumber.toUInt(): UInt","io.github.alexandrepiveteau.echo.core.causality.toUInt"]},{"name":"fun SiteIdentifier.toUInt(): UInt","description":"io.github.alexandrepiveteau.echo.core.causality.toUInt","location":"library/echo-core/io.github.alexandrepiveteau.echo.core.causality/to-u-int.html","searchKeys":["toUInt","fun SiteIdentifier.toUInt(): UInt","io.github.alexandrepiveteau.echo.core.causality.toUInt"]},{"name":"fun UInt.toSequenceNumber(): SequenceNumber","description":"io.github.alexandrepiveteau.echo.core.causality.toSequenceNumber","location":"library/echo-core/io.github.alexandrepiveteau.echo.core.causality/to-sequence-number.html","searchKeys":["toSequenceNumber","fun UInt.toSequenceNumber(): SequenceNumber","io.github.alexandrepiveteau.echo.core.causality.toSequenceNumber"]},{"name":"fun UInt.toSiteIdentifier(): SiteIdentifier","description":"io.github.alexandrepiveteau.echo.core.causality.toSiteIdentifier","location":"library/echo-core/io.github.alexandrepiveteau.echo.core.causality/to-site-identifier.html","searchKeys":["toSiteIdentifier","fun UInt.toSiteIdentifier(): SiteIdentifier","io.github.alexandrepiveteau.echo.core.causality.toSiteIdentifier"]},{"name":"fun ULong.toEventIdentifier(): EventIdentifier","description":"io.github.alexandrepiveteau.echo.core.causality.toEventIdentifier","location":"library/echo-core/io.github.alexandrepiveteau.echo.core.causality/to-event-identifier.html","searchKeys":["toEventIdentifier","fun ULong.toEventIdentifier(): EventIdentifier","io.github.alexandrepiveteau.echo.core.causality.toEventIdentifier"]},{"name":"fun eventIdentifierArrayOf(): EventIdentifierArray","description":"io.github.alexandrepiveteau.echo.core.causality.eventIdentifierArrayOf","location":"library/echo-core/io.github.alexandrepiveteau.echo.core.causality/event-identifier-array-of.html","searchKeys":["eventIdentifierArrayOf","fun eventIdentifierArrayOf(): EventIdentifierArray","io.github.alexandrepiveteau.echo.core.causality.eventIdentifierArrayOf"]},{"name":"fun interface ChangeScope","description":"io.github.alexandrepiveteau.echo.core.log.ChangeScope","location":"library/echo-core/io.github.alexandrepiveteau.echo.core.log/-change-scope/index.html","searchKeys":["ChangeScope","fun interface ChangeScope","io.github.alexandrepiveteau.echo.core.log.ChangeScope"]},{"name":"fun interface OnValueUpdateListener<in T>","description":"io.github.alexandrepiveteau.echo.core.log.History.OnValueUpdateListener","location":"library/echo-core/io.github.alexandrepiveteau.echo.core.log/-history/-on-value-update-listener/index.html","searchKeys":["OnValueUpdateListener","fun interface OnValueUpdateListener<in T>","io.github.alexandrepiveteau.echo.core.log.History.OnValueUpdateListener"]},{"name":"fun maxOf(a: SequenceNumber, b: SequenceNumber): SequenceNumber","description":"io.github.alexandrepiveteau.echo.core.causality.maxOf","location":"library/echo-core/io.github.alexandrepiveteau.echo.core.causality/max-of.html","searchKeys":["maxOf","fun maxOf(a: SequenceNumber, b: SequenceNumber): SequenceNumber","io.github.alexandrepiveteau.echo.core.causality.maxOf"]},{"name":"fun maxOf(a: SequenceNumber, b: SequenceNumber, c: SequenceNumber): SequenceNumber","description":"io.github.alexandrepiveteau.echo.core.causality.maxOf","location":"library/echo-core/io.github.alexandrepiveteau.echo.core.causality/max-of.html","searchKeys":["maxOf","fun maxOf(a: SequenceNumber, b: SequenceNumber, c: SequenceNumber): SequenceNumber","io.github.alexandrepiveteau.echo.core.causality.maxOf"]},{"name":"fun mutableByteGapBufferOf(): MutableByteGapBuffer","description":"io.github.alexandrepiveteau.echo.core.buffer.mutableByteGapBufferOf","location":"library/echo-core/io.github.alexandrepiveteau.echo.core.buffer/mutable-byte-gap-buffer-of.html","searchKeys":["mutableByteGapBufferOf","fun mutableByteGapBufferOf(): MutableByteGapBuffer","io.github.alexandrepiveteau.echo.core.buffer.mutableByteGapBufferOf"]},{"name":"fun mutableCharGapBufferOf(): MutableCharGapBuffer","description":"io.github.alexandrepiveteau.echo.core.buffer.mutableCharGapBufferOf","location":"library/echo-core/io.github.alexandrepiveteau.echo.core.buffer/mutable-char-gap-buffer-of.html","searchKeys":["mutableCharGapBufferOf","fun mutableCharGapBufferOf(): MutableCharGapBuffer","io.github.alexandrepiveteau.echo.core.buffer.mutableCharGapBufferOf"]},{"name":"fun mutableEventIdentifierGapBufferOf(): MutableEventIdentifierGapBuffer","description":"io.github.alexandrepiveteau.echo.core.buffer.mutableEventIdentifierGapBufferOf","location":"library/echo-core/io.github.alexandrepiveteau.echo.core.buffer/mutable-event-identifier-gap-buffer-of.html","searchKeys":["mutableEventIdentifierGapBufferOf","fun mutableEventIdentifierGapBufferOf(): MutableEventIdentifierGapBuffer","io.github.alexandrepiveteau.echo.core.buffer.mutableEventIdentifierGapBufferOf"]},{"name":"fun mutableEventLogOf(clock: Clock = Clock.System): MutableEventLog","description":"io.github.alexandrepiveteau.echo.core.log.mutableEventLogOf","location":"library/echo-core/io.github.alexandrepiveteau.echo.core.log/mutable-event-log-of.html","searchKeys":["mutableEventLogOf","fun mutableEventLogOf(clock: Clock = Clock.System): MutableEventLog","io.github.alexandrepiveteau.echo.core.log.mutableEventLogOf"]},{"name":"fun mutableEventLogOf(vararg events: Event, clock: Clock = Clock.System): MutableEventLog","description":"io.github.alexandrepiveteau.echo.core.log.mutableEventLogOf","location":"library/echo-core/io.github.alexandrepiveteau.echo.core.log/mutable-event-log-of.html","searchKeys":["mutableEventLogOf","fun mutableEventLogOf(vararg events: Event, clock: Clock = Clock.System): MutableEventLog","io.github.alexandrepiveteau.echo.core.log.mutableEventLogOf"]},{"name":"fun mutableEventLogOf(vararg events: Pair<EventIdentifier, ByteArray>, clock: Clock = Clock.System): MutableEventLog","description":"io.github.alexandrepiveteau.echo.core.log.mutableEventLogOf","location":"library/echo-core/io.github.alexandrepiveteau.echo.core.log/mutable-event-log-of.html","searchKeys":["mutableEventLogOf","fun mutableEventLogOf(vararg events: Pair<EventIdentifier, ByteArray>, clock: Clock = Clock.System): MutableEventLog","io.github.alexandrepiveteau.echo.core.log.mutableEventLogOf"]},{"name":"fun mutableIntGapBufferOf(): MutableIntGapBuffer","description":"io.github.alexandrepiveteau.echo.core.buffer.mutableIntGapBufferOf","location":"library/echo-core/io.github.alexandrepiveteau.echo.core.buffer/mutable-int-gap-buffer-of.html","searchKeys":["mutableIntGapBufferOf","fun mutableIntGapBufferOf(): MutableIntGapBuffer","io.github.alexandrepiveteau.echo.core.buffer.mutableIntGapBufferOf"]},{"name":"fun mutableTreeEventLogOf(clock: Clock = Clock.System): MutableEventLog","description":"io.github.alexandrepiveteau.echo.core.log.mutableTreeEventLogOf","location":"library/echo-core/io.github.alexandrepiveteau.echo.core.log/mutable-tree-event-log-of.html","searchKeys":["mutableTreeEventLogOf","fun mutableTreeEventLogOf(clock: Clock = Clock.System): MutableEventLog","io.github.alexandrepiveteau.echo.core.log.mutableTreeEventLogOf"]},{"name":"fun mutableTreeEventLogOf(vararg events: Event, clock: Clock = Clock.System): MutableEventLog","description":"io.github.alexandrepiveteau.echo.core.log.mutableTreeEventLogOf","location":"library/echo-core/io.github.alexandrepiveteau.echo.core.log/mutable-tree-event-log-of.html","searchKeys":["mutableTreeEventLogOf","fun mutableTreeEventLogOf(vararg events: Event, clock: Clock = Clock.System): MutableEventLog","io.github.alexandrepiveteau.echo.core.log.mutableTreeEventLogOf"]},{"name":"fun mutableTreeEventLogOf(vararg events: Pair<EventIdentifier, ByteArray>, clock: Clock = Clock.System): MutableEventLog","description":"io.github.alexandrepiveteau.echo.core.log.mutableTreeEventLogOf","location":"library/echo-core/io.github.alexandrepiveteau.echo.core.log/mutable-tree-event-log-of.html","searchKeys":["mutableTreeEventLogOf","fun mutableTreeEventLogOf(vararg events: Pair<EventIdentifier, ByteArray>, clock: Clock = Clock.System): MutableEventLog","io.github.alexandrepiveteau.echo.core.log.mutableTreeEventLogOf"]},{"name":"inline fun <T> Array<T>.toMutableGapBuffer(): MutableGapBuffer<T>","description":"io.github.alexandrepiveteau.echo.core.buffer.toMutableGapBuffer","location":"library/echo-core/io.github.alexandrepiveteau.echo.core.buffer/to-mutable-gap-buffer.html","searchKeys":["toMutableGapBuffer","inline fun <T> Array<T>.toMutableGapBuffer(): MutableGapBuffer<T>","io.github.alexandrepiveteau.echo.core.buffer.toMutableGapBuffer"]},{"name":"inline fun <T> MutableGapBuffer(size: Int, crossinline init: (Int) -> T): MutableGapBuffer<T>","description":"io.github.alexandrepiveteau.echo.core.buffer.MutableGapBuffer","location":"library/echo-core/io.github.alexandrepiveteau.echo.core.buffer/-mutable-gap-buffer.html","searchKeys":["MutableGapBuffer","inline fun <T> MutableGapBuffer(size: Int, crossinline init: (Int) -> T): MutableGapBuffer<T>","io.github.alexandrepiveteau.echo.core.buffer.MutableGapBuffer"]},{"name":"inline fun <T> MutableGapBuffer<T>.copyOfRange(from: Int, until: Int): Array<T>","description":"io.github.alexandrepiveteau.echo.core.buffer.copyOfRange","location":"library/echo-core/io.github.alexandrepiveteau.echo.core.buffer/copy-of-range.html","searchKeys":["copyOfRange","inline fun <T> MutableGapBuffer<T>.copyOfRange(from: Int, until: Int): Array<T>","io.github.alexandrepiveteau.echo.core.buffer.copyOfRange"]},{"name":"inline fun <T> MutableGapBuffer<T>.toTypedArray(): Array<T>","description":"io.github.alexandrepiveteau.echo.core.buffer.toTypedArray","location":"library/echo-core/io.github.alexandrepiveteau.echo.core.buffer/to-typed-array.html","searchKeys":["toTypedArray","inline fun <T> MutableGapBuffer<T>.toTypedArray(): Array<T>","io.github.alexandrepiveteau.echo.core.buffer.toTypedArray"]},{"name":"inline fun <T> mutableGapBufferOf(): MutableGapBuffer<T>","description":"io.github.alexandrepiveteau.echo.core.buffer.mutableGapBufferOf","location":"library/echo-core/io.github.alexandrepiveteau.echo.core.buffer/mutable-gap-buffer-of.html","searchKeys":["mutableGapBufferOf","inline fun <T> mutableGapBufferOf(): MutableGapBuffer<T>","io.github.alexandrepiveteau.echo.core.buffer.mutableGapBufferOf"]},{"name":"inline fun EventIterator.movePreviousWhile(predicate: EventIterator.() -> Boolean)","description":"io.github.alexandrepiveteau.echo.core.log.movePreviousWhile","location":"library/echo-core/io.github.alexandrepiveteau.echo.core.log/move-previous-while.html","searchKeys":["movePreviousWhile","inline fun EventIterator.movePreviousWhile(predicate: EventIterator.() -> Boolean)","io.github.alexandrepiveteau.echo.core.log.movePreviousWhile"]},{"name":"inline fun SequenceNumber.takeOrElse(block: () -> SequenceNumber): SequenceNumber","description":"io.github.alexandrepiveteau.echo.core.causality.takeOrElse","location":"library/echo-core/io.github.alexandrepiveteau.echo.core.causality/take-or-else.html","searchKeys":["takeOrElse","inline fun SequenceNumber.takeOrElse(block: () -> SequenceNumber): SequenceNumber","io.github.alexandrepiveteau.echo.core.causality.takeOrElse"]},{"name":"interface EventIterator : ListIterator<Event> ","description":"io.github.alexandrepiveteau.echo.core.log.EventIterator","location":"library/echo-core/io.github.alexandrepiveteau.echo.core.log/-event-iterator/index.html","searchKeys":["EventIterator","interface EventIterator : ListIterator<Event> ","io.github.alexandrepiveteau.echo.core.log.EventIterator"]},{"name":"interface EventLog","description":"io.github.alexandrepiveteau.echo.core.log.EventLog","location":"library/echo-core/io.github.alexandrepiveteau.echo.core.log/-event-log/index.html","searchKeys":["EventLog","interface EventLog","io.github.alexandrepiveteau.echo.core.log.EventLog"]},{"name":"interface Gap","description":"io.github.alexandrepiveteau.echo.core.buffer.Gap","location":"library/echo-core/io.github.alexandrepiveteau.echo.core.buffer/-gap/index.html","searchKeys":["Gap","interface Gap","io.github.alexandrepiveteau.echo.core.buffer.Gap"]},{"name":"interface History<out T> : EventLog","description":"io.github.alexandrepiveteau.echo.core.log.History","location":"library/echo-core/io.github.alexandrepiveteau.echo.core.log/-history/index.html","searchKeys":["History","interface History<out T> : EventLog","io.github.alexandrepiveteau.echo.core.log.History"]},{"name":"interface MutableByteGapBuffer","description":"io.github.alexandrepiveteau.echo.core.buffer.MutableByteGapBuffer","location":"library/echo-core/io.github.alexandrepiveteau.echo.core.buffer/-mutable-byte-gap-buffer/index.html","searchKeys":["MutableByteGapBuffer","interface MutableByteGapBuffer","io.github.alexandrepiveteau.echo.core.buffer.MutableByteGapBuffer"]},{"name":"interface MutableCharGapBuffer","description":"io.github.alexandrepiveteau.echo.core.buffer.MutableCharGapBuffer","location":"library/echo-core/io.github.alexandrepiveteau.echo.core.buffer/-mutable-char-gap-buffer/index.html","searchKeys":["MutableCharGapBuffer","interface MutableCharGapBuffer","io.github.alexandrepiveteau.echo.core.buffer.MutableCharGapBuffer"]},{"name":"interface MutableEventIdentifierGapBuffer","description":"io.github.alexandrepiveteau.echo.core.buffer.MutableEventIdentifierGapBuffer","location":"library/echo-core/io.github.alexandrepiveteau.echo.core.buffer/-mutable-event-identifier-gap-buffer/index.html","searchKeys":["MutableEventIdentifierGapBuffer","interface MutableEventIdentifierGapBuffer","io.github.alexandrepiveteau.echo.core.buffer.MutableEventIdentifierGapBuffer"]},{"name":"interface MutableEventIterator : EventIterator, MutableListIterator<Event> ","description":"io.github.alexandrepiveteau.echo.core.log.MutableEventIterator","location":"library/echo-core/io.github.alexandrepiveteau.echo.core.log/-mutable-event-iterator/index.html","searchKeys":["MutableEventIterator","interface MutableEventIterator : EventIterator, MutableListIterator<Event> ","io.github.alexandrepiveteau.echo.core.log.MutableEventIterator"]},{"name":"interface MutableEventLog : EventLog","description":"io.github.alexandrepiveteau.echo.core.log.MutableEventLog","location":"library/echo-core/io.github.alexandrepiveteau.echo.core.log/-mutable-event-log/index.html","searchKeys":["MutableEventLog","interface MutableEventLog : EventLog","io.github.alexandrepiveteau.echo.core.log.MutableEventLog"]},{"name":"interface MutableGapBuffer<T>","description":"io.github.alexandrepiveteau.echo.core.buffer.MutableGapBuffer","location":"library/echo-core/io.github.alexandrepiveteau.echo.core.buffer/-mutable-gap-buffer/index.html","searchKeys":["MutableGapBuffer","interface MutableGapBuffer<T>","io.github.alexandrepiveteau.echo.core.buffer.MutableGapBuffer"]},{"name":"interface MutableHistory<out T> : History<T> , MutableEventLog","description":"io.github.alexandrepiveteau.echo.core.log.MutableHistory","location":"library/echo-core/io.github.alexandrepiveteau.echo.core.log/-mutable-history/index.html","searchKeys":["MutableHistory","interface MutableHistory<out T> : History<T> , MutableEventLog","io.github.alexandrepiveteau.echo.core.log.MutableHistory"]},{"name":"interface MutableIntGapBuffer","description":"io.github.alexandrepiveteau.echo.core.buffer.MutableIntGapBuffer","location":"library/echo-core/io.github.alexandrepiveteau.echo.core.buffer/-mutable-int-gap-buffer/index.html","searchKeys":["MutableIntGapBuffer","interface MutableIntGapBuffer","io.github.alexandrepiveteau.echo.core.buffer.MutableIntGapBuffer"]},{"name":"interface MutableProjection<T>","description":"io.github.alexandrepiveteau.echo.core.log.MutableProjection","location":"library/echo-core/io.github.alexandrepiveteau.echo.core.log/-mutable-projection/index.html","searchKeys":["MutableProjection","interface MutableProjection<T>","io.github.alexandrepiveteau.echo.core.log.MutableProjection"]},{"name":"interface OnLogUpdateListener","description":"io.github.alexandrepiveteau.echo.core.log.EventLog.OnLogUpdateListener","location":"library/echo-core/io.github.alexandrepiveteau.echo.core.log/-event-log/-on-log-update-listener/index.html","searchKeys":["OnLogUpdateListener","interface OnLogUpdateListener","io.github.alexandrepiveteau.echo.core.log.EventLog.OnLogUpdateListener"]},{"name":"object Companion","description":"io.github.alexandrepiveteau.echo.core.buffer.Gap.Companion","location":"library/echo-core/io.github.alexandrepiveteau.echo.core.buffer/-gap/-companion/index.html","searchKeys":["Companion","object Companion","io.github.alexandrepiveteau.echo.core.buffer.Gap.Companion"]},{"name":"object Companion","description":"io.github.alexandrepiveteau.echo.core.causality.EventIdentifier.Companion","location":"library/echo-core/io.github.alexandrepiveteau.echo.core.causality/-event-identifier/-companion/index.html","searchKeys":["Companion","object Companion","io.github.alexandrepiveteau.echo.core.causality.EventIdentifier.Companion"]},{"name":"object Companion","description":"io.github.alexandrepiveteau.echo.core.causality.SequenceNumber.Companion","location":"library/echo-core/io.github.alexandrepiveteau.echo.core.causality/-sequence-number/-companion/index.html","searchKeys":["Companion","object Companion","io.github.alexandrepiveteau.echo.core.causality.SequenceNumber.Companion"]},{"name":"object Companion","description":"io.github.alexandrepiveteau.echo.core.causality.SiteIdentifier.Companion","location":"library/echo-core/io.github.alexandrepiveteau.echo.core.causality/-site-identifier/-companion/index.html","searchKeys":["Companion","object Companion","io.github.alexandrepiveteau.echo.core.causality.SiteIdentifier.Companion"]},{"name":"open fun insert(event: Event)","description":"io.github.alexandrepiveteau.echo.core.log.MutableEventLog.insert","location":"library/echo-core/io.github.alexandrepiveteau.echo.core.log/-mutable-event-log/insert.html","searchKeys":["insert","open fun insert(event: Event)","io.github.alexandrepiveteau.echo.core.log.MutableEventLog.insert"]},{"name":"open fun onAcknowledgement()","description":"io.github.alexandrepiveteau.echo.core.log.EventLog.OnLogUpdateListener.onAcknowledgement","location":"library/echo-core/io.github.alexandrepiveteau.echo.core.log/-event-log/-on-log-update-listener/on-acknowledgement.html","searchKeys":["onAcknowledgement","open fun onAcknowledgement()","io.github.alexandrepiveteau.echo.core.log.EventLog.OnLogUpdateListener.onAcknowledgement"]},{"name":"open fun onCleared()","description":"io.github.alexandrepiveteau.echo.core.log.EventLog.OnLogUpdateListener.onCleared","location":"library/echo-core/io.github.alexandrepiveteau.echo.core.log/-event-log/-on-log-update-listener/on-cleared.html","searchKeys":["onCleared","open fun onCleared()","io.github.alexandrepiveteau.echo.core.log.EventLog.OnLogUpdateListener.onCleared"]},{"name":"open fun onInsert(seqno: SequenceNumber, site: SiteIdentifier, data: ByteArray, from: Int, until: Int)","description":"io.github.alexandrepiveteau.echo.core.log.EventLog.OnLogUpdateListener.onInsert","location":"library/echo-core/io.github.alexandrepiveteau.echo.core.log/-event-log/-on-log-update-listener/on-insert.html","searchKeys":["onInsert","open fun onInsert(seqno: SequenceNumber, site: SiteIdentifier, data: ByteArray, from: Int, until: Int)","io.github.alexandrepiveteau.echo.core.log.EventLog.OnLogUpdateListener.onInsert"]},{"name":"open fun onRegistered()","description":"io.github.alexandrepiveteau.echo.core.log.EventLog.OnLogUpdateListener.onRegistered","location":"library/echo-core/io.github.alexandrepiveteau.echo.core.log/-event-log/-on-log-update-listener/on-registered.html","searchKeys":["onRegistered","open fun onRegistered()","io.github.alexandrepiveteau.echo.core.log.EventLog.OnLogUpdateListener.onRegistered"]},{"name":"open fun onRemoved(seqno: SequenceNumber, site: SiteIdentifier)","description":"io.github.alexandrepiveteau.echo.core.log.EventLog.OnLogUpdateListener.onRemoved","location":"library/echo-core/io.github.alexandrepiveteau.echo.core.log/-event-log/-on-log-update-listener/on-removed.html","searchKeys":["onRemoved","open fun onRemoved(seqno: SequenceNumber, site: SiteIdentifier)","io.github.alexandrepiveteau.echo.core.log.EventLog.OnLogUpdateListener.onRemoved"]},{"name":"open fun onUnregistered()","description":"io.github.alexandrepiveteau.echo.core.log.EventLog.OnLogUpdateListener.onUnregistered","location":"library/echo-core/io.github.alexandrepiveteau.echo.core.log/-event-log/-on-log-update-listener/on-unregistered.html","searchKeys":["onUnregistered","open fun onUnregistered()","io.github.alexandrepiveteau.echo.core.log.EventLog.OnLogUpdateListener.onUnregistered"]},{"name":"open fun push(array: ByteArray)","description":"io.github.alexandrepiveteau.echo.core.log.ChangeScope.push","location":"library/echo-core/io.github.alexandrepiveteau.echo.core.log/-change-scope/push.html","searchKeys":["push","open fun push(array: ByteArray)","io.github.alexandrepiveteau.echo.core.log.ChangeScope.push"]},{"name":"open fun push(byte: Byte)","description":"io.github.alexandrepiveteau.echo.core.log.ChangeScope.push","location":"library/echo-core/io.github.alexandrepiveteau.echo.core.log/-change-scope/push.html","searchKeys":["push","open fun push(byte: Byte)","io.github.alexandrepiveteau.echo.core.log.ChangeScope.push"]},{"name":"open operator fun contains(id: EventIdentifier): Boolean","description":"io.github.alexandrepiveteau.echo.core.log.EventLog.contains","location":"library/echo-core/io.github.alexandrepiveteau.echo.core.log/-event-log/contains.html","searchKeys":["contains","open operator fun contains(id: EventIdentifier): Boolean","io.github.alexandrepiveteau.echo.core.log.EventLog.contains"]},{"name":"open operator override fun compareTo(other: Event): Int","description":"io.github.alexandrepiveteau.echo.core.log.Event.compareTo","location":"library/echo-core/io.github.alexandrepiveteau.echo.core.log/-event/compare-to.html","searchKeys":["compareTo","open operator override fun compareTo(other: Event): Int","io.github.alexandrepiveteau.echo.core.log.Event.compareTo"]},{"name":"open operator override fun compareTo(other: EventIdentifier): Int","description":"io.github.alexandrepiveteau.echo.core.causality.EventIdentifier.compareTo","location":"library/echo-core/io.github.alexandrepiveteau.echo.core.causality/-event-identifier/compare-to.html","searchKeys":["compareTo","open operator override fun compareTo(other: EventIdentifier): Int","io.github.alexandrepiveteau.echo.core.causality.EventIdentifier.compareTo"]},{"name":"open operator override fun compareTo(other: SequenceNumber): Int","description":"io.github.alexandrepiveteau.echo.core.causality.SequenceNumber.compareTo","location":"library/echo-core/io.github.alexandrepiveteau.echo.core.causality/-sequence-number/compare-to.html","searchKeys":["compareTo","open operator override fun compareTo(other: SequenceNumber): Int","io.github.alexandrepiveteau.echo.core.causality.SequenceNumber.compareTo"]},{"name":"open operator override fun compareTo(other: SiteIdentifier): Int","description":"io.github.alexandrepiveteau.echo.core.causality.SiteIdentifier.compareTo","location":"library/echo-core/io.github.alexandrepiveteau.echo.core.causality/-site-identifier/compare-to.html","searchKeys":["compareTo","open operator override fun compareTo(other: SiteIdentifier): Int","io.github.alexandrepiveteau.echo.core.causality.SiteIdentifier.compareTo"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"io.github.alexandrepiveteau.echo.core.causality.EventIdentifierArray.equals","location":"library/echo-core/io.github.alexandrepiveteau.echo.core.causality/-event-identifier-array/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","io.github.alexandrepiveteau.echo.core.causality.EventIdentifierArray.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"io.github.alexandrepiveteau.echo.core.log.Event.equals","location":"library/echo-core/io.github.alexandrepiveteau.echo.core.log/-event/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","io.github.alexandrepiveteau.echo.core.log.Event.equals"]},{"name":"open operator override fun next(): EventIdentifier","description":"io.github.alexandrepiveteau.echo.core.causality.EventIdentifierIterator.next","location":"library/echo-core/io.github.alexandrepiveteau.echo.core.causality/-event-identifier-iterator/next.html","searchKeys":["next","open operator override fun next(): EventIdentifier","io.github.alexandrepiveteau.echo.core.causality.EventIdentifierIterator.next"]},{"name":"open override fun hashCode(): Int","description":"io.github.alexandrepiveteau.echo.core.causality.EventIdentifierArray.hashCode","location":"library/echo-core/io.github.alexandrepiveteau.echo.core.causality/-event-identifier-array/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","io.github.alexandrepiveteau.echo.core.causality.EventIdentifierArray.hashCode"]},{"name":"open override fun hashCode(): Int","description":"io.github.alexandrepiveteau.echo.core.log.Event.hashCode","location":"library/echo-core/io.github.alexandrepiveteau.echo.core.log/-event/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","io.github.alexandrepiveteau.echo.core.log.Event.hashCode"]},{"name":"open override fun toString(): String","description":"io.github.alexandrepiveteau.echo.core.causality.EventIdentifier.toString","location":"library/echo-core/io.github.alexandrepiveteau.echo.core.causality/-event-identifier/to-string.html","searchKeys":["toString","open override fun toString(): String","io.github.alexandrepiveteau.echo.core.causality.EventIdentifier.toString"]},{"name":"open override fun toString(): String","description":"io.github.alexandrepiveteau.echo.core.causality.EventIdentifierArray.toString","location":"library/echo-core/io.github.alexandrepiveteau.echo.core.causality/-event-identifier-array/to-string.html","searchKeys":["toString","open override fun toString(): String","io.github.alexandrepiveteau.echo.core.causality.EventIdentifierArray.toString"]},{"name":"open override fun toString(): String","description":"io.github.alexandrepiveteau.echo.core.causality.SequenceNumber.toString","location":"library/echo-core/io.github.alexandrepiveteau.echo.core.causality/-sequence-number/to-string.html","searchKeys":["toString","open override fun toString(): String","io.github.alexandrepiveteau.echo.core.causality.SequenceNumber.toString"]},{"name":"open val nextEventIdentifier: EventIdentifier","description":"io.github.alexandrepiveteau.echo.core.log.EventIterator.nextEventIdentifier","location":"library/echo-core/io.github.alexandrepiveteau.echo.core.log/-event-iterator/next-event-identifier.html","searchKeys":["nextEventIdentifier","open val nextEventIdentifier: EventIdentifier","io.github.alexandrepiveteau.echo.core.log.EventIterator.nextEventIdentifier"]},{"name":"open val previousEventIdentifier: EventIdentifier","description":"io.github.alexandrepiveteau.echo.core.log.EventIterator.previousEventIdentifier","location":"library/echo-core/io.github.alexandrepiveteau.echo.core.log/-event-iterator/previous-event-identifier.html","searchKeys":["previousEventIdentifier","open val previousEventIdentifier: EventIdentifier","io.github.alexandrepiveteau.echo.core.log.EventIterator.previousEventIdentifier"]},{"name":"operator fun component1(): SequenceNumber","description":"io.github.alexandrepiveteau.echo.core.causality.EventIdentifier.component1","location":"library/echo-core/io.github.alexandrepiveteau.echo.core.causality/-event-identifier/component1.html","searchKeys":["component1","operator fun component1(): SequenceNumber","io.github.alexandrepiveteau.echo.core.causality.EventIdentifier.component1"]},{"name":"operator fun component2(): SiteIdentifier","description":"io.github.alexandrepiveteau.echo.core.causality.EventIdentifier.component2","location":"library/echo-core/io.github.alexandrepiveteau.echo.core.causality/-event-identifier/component2.html","searchKeys":["component2","operator fun component2(): SiteIdentifier","io.github.alexandrepiveteau.echo.core.causality.EventIdentifier.component2"]},{"name":"operator fun contains(identifier: EventIdentifier): Boolean","description":"io.github.alexandrepiveteau.echo.core.causality.EventIdentifierArray.contains","location":"library/echo-core/io.github.alexandrepiveteau.echo.core.causality/-event-identifier-array/contains.html","searchKeys":["contains","operator fun contains(identifier: EventIdentifier): Boolean","io.github.alexandrepiveteau.echo.core.causality.EventIdentifierArray.contains"]},{"name":"operator fun get(index: Int): EventIdentifier","description":"io.github.alexandrepiveteau.echo.core.causality.EventIdentifierArray.get","location":"library/echo-core/io.github.alexandrepiveteau.echo.core.causality/-event-identifier-array/get.html","searchKeys":["get","operator fun get(index: Int): EventIdentifier","io.github.alexandrepiveteau.echo.core.causality.EventIdentifierArray.get"]},{"name":"operator fun inc(): SequenceNumber","description":"io.github.alexandrepiveteau.echo.core.causality.SequenceNumber.inc","location":"library/echo-core/io.github.alexandrepiveteau.echo.core.causality/-sequence-number/inc.html","searchKeys":["inc","operator fun inc(): SequenceNumber","io.github.alexandrepiveteau.echo.core.causality.SequenceNumber.inc"]},{"name":"operator fun iterator(): EventIdentifierIterator","description":"io.github.alexandrepiveteau.echo.core.causality.EventIdentifierArray.iterator","location":"library/echo-core/io.github.alexandrepiveteau.echo.core.causality/-event-identifier-array/iterator.html","searchKeys":["iterator","operator fun iterator(): EventIdentifierIterator","io.github.alexandrepiveteau.echo.core.causality.EventIdentifierArray.iterator"]},{"name":"operator fun plus(count: UInt): SequenceNumber","description":"io.github.alexandrepiveteau.echo.core.causality.SequenceNumber.plus","location":"library/echo-core/io.github.alexandrepiveteau.echo.core.causality/-sequence-number/plus.html","searchKeys":["plus","operator fun plus(count: UInt): SequenceNumber","io.github.alexandrepiveteau.echo.core.causality.SequenceNumber.plus"]},{"name":"operator fun set(index: Int, value: EventIdentifier)","description":"io.github.alexandrepiveteau.echo.core.causality.EventIdentifierArray.set","location":"library/echo-core/io.github.alexandrepiveteau.echo.core.causality/-event-identifier-array/set.html","searchKeys":["set","operator fun set(index: Int, value: EventIdentifier)","io.github.alexandrepiveteau.echo.core.causality.EventIdentifierArray.set"]},{"name":"val EventIdentifier.isSpecified: Boolean","description":"io.github.alexandrepiveteau.echo.core.causality.isSpecified","location":"library/echo-core/io.github.alexandrepiveteau.echo.core.causality/is-specified.html","searchKeys":["isSpecified","val EventIdentifier.isSpecified: Boolean","io.github.alexandrepiveteau.echo.core.causality.isSpecified"]},{"name":"val EventIdentifier.isUnspecified: Boolean","description":"io.github.alexandrepiveteau.echo.core.causality.isUnspecified","location":"library/echo-core/io.github.alexandrepiveteau.echo.core.causality/is-unspecified.html","searchKeys":["isUnspecified","val EventIdentifier.isUnspecified: Boolean","io.github.alexandrepiveteau.echo.core.causality.isUnspecified"]},{"name":"val Max: SequenceNumber","description":"io.github.alexandrepiveteau.echo.core.causality.SequenceNumber.Companion.Max","location":"library/echo-core/io.github.alexandrepiveteau.echo.core.causality/-sequence-number/-companion/-max.html","searchKeys":["Max","val Max: SequenceNumber","io.github.alexandrepiveteau.echo.core.causality.SequenceNumber.Companion.Max"]},{"name":"val Max: SiteIdentifier","description":"io.github.alexandrepiveteau.echo.core.causality.SiteIdentifier.Companion.Max","location":"library/echo-core/io.github.alexandrepiveteau.echo.core.causality/-site-identifier/-companion/-max.html","searchKeys":["Max","val Max: SiteIdentifier","io.github.alexandrepiveteau.echo.core.causality.SiteIdentifier.Companion.Max"]},{"name":"val Min: SequenceNumber","description":"io.github.alexandrepiveteau.echo.core.causality.SequenceNumber.Companion.Min","location":"library/echo-core/io.github.alexandrepiveteau.echo.core.causality/-sequence-number/-companion/-min.html","searchKeys":["Min","val Min: SequenceNumber","io.github.alexandrepiveteau.echo.core.causality.SequenceNumber.Companion.Min"]},{"name":"val Min: SiteIdentifier","description":"io.github.alexandrepiveteau.echo.core.causality.SiteIdentifier.Companion.Min","location":"library/echo-core/io.github.alexandrepiveteau.echo.core.causality/-site-identifier/-companion/-min.html","searchKeys":["Min","val Min: SiteIdentifier","io.github.alexandrepiveteau.echo.core.causality.SiteIdentifier.Companion.Min"]},{"name":"val SequenceNumber.isSpecified: Boolean","description":"io.github.alexandrepiveteau.echo.core.causality.isSpecified","location":"library/echo-core/io.github.alexandrepiveteau.echo.core.causality/is-specified.html","searchKeys":["isSpecified","val SequenceNumber.isSpecified: Boolean","io.github.alexandrepiveteau.echo.core.causality.isSpecified"]},{"name":"val SequenceNumber.isUnspecified: Boolean","description":"io.github.alexandrepiveteau.echo.core.causality.isUnspecified","location":"library/echo-core/io.github.alexandrepiveteau.echo.core.causality/is-unspecified.html","searchKeys":["isUnspecified","val SequenceNumber.isUnspecified: Boolean","io.github.alexandrepiveteau.echo.core.causality.isUnspecified"]},{"name":"val Unspecified: EventIdentifier","description":"io.github.alexandrepiveteau.echo.core.causality.EventIdentifier.Companion.Unspecified","location":"library/echo-core/io.github.alexandrepiveteau.echo.core.causality/-event-identifier/-companion/-unspecified.html","searchKeys":["Unspecified","val Unspecified: EventIdentifier","io.github.alexandrepiveteau.echo.core.causality.EventIdentifier.Companion.Unspecified"]},{"name":"val Unspecified: SequenceNumber","description":"io.github.alexandrepiveteau.echo.core.causality.SequenceNumber.Companion.Unspecified","location":"library/echo-core/io.github.alexandrepiveteau.echo.core.causality/-sequence-number/-companion/-unspecified.html","searchKeys":["Unspecified","val Unspecified: SequenceNumber","io.github.alexandrepiveteau.echo.core.causality.SequenceNumber.Companion.Unspecified"]},{"name":"val data: ByteArray","description":"io.github.alexandrepiveteau.echo.core.log.Event.data","location":"library/echo-core/io.github.alexandrepiveteau.echo.core.log/-event/data.html","searchKeys":["data","val data: ByteArray","io.github.alexandrepiveteau.echo.core.log.Event.data"]},{"name":"val identifier: EventIdentifier","description":"io.github.alexandrepiveteau.echo.core.log.Event.identifier","location":"library/echo-core/io.github.alexandrepiveteau.echo.core.log/-event/identifier.html","searchKeys":["identifier","val identifier: EventIdentifier","io.github.alexandrepiveteau.echo.core.log.Event.identifier"]},{"name":"val seqno: SequenceNumber","description":"io.github.alexandrepiveteau.echo.core.causality.EventIdentifier.seqno","location":"library/echo-core/io.github.alexandrepiveteau.echo.core.causality/-event-identifier/seqno.html","searchKeys":["seqno","val seqno: SequenceNumber","io.github.alexandrepiveteau.echo.core.causality.EventIdentifier.seqno"]},{"name":"val seqno: SequenceNumber","description":"io.github.alexandrepiveteau.echo.core.log.Event.seqno","location":"library/echo-core/io.github.alexandrepiveteau.echo.core.log/-event/seqno.html","searchKeys":["seqno","val seqno: SequenceNumber","io.github.alexandrepiveteau.echo.core.log.Event.seqno"]},{"name":"val site: SiteIdentifier","description":"io.github.alexandrepiveteau.echo.core.causality.EventIdentifier.site","location":"library/echo-core/io.github.alexandrepiveteau.echo.core.causality/-event-identifier/site.html","searchKeys":["site","val site: SiteIdentifier","io.github.alexandrepiveteau.echo.core.causality.EventIdentifier.site"]},{"name":"val site: SiteIdentifier","description":"io.github.alexandrepiveteau.echo.core.log.Event.site","location":"library/echo-core/io.github.alexandrepiveteau.echo.core.log/-event/site.html","searchKeys":["site","val site: SiteIdentifier","io.github.alexandrepiveteau.echo.core.log.Event.site"]},{"name":"val size: Int","description":"io.github.alexandrepiveteau.echo.core.causality.EventIdentifierArray.size","location":"library/echo-core/io.github.alexandrepiveteau.echo.core.causality/-event-identifier-array/size.html","searchKeys":["size","val size: Int","io.github.alexandrepiveteau.echo.core.causality.EventIdentifierArray.size"]},{"name":"value class EventIdentifier : Comparable<EventIdentifier> ","description":"io.github.alexandrepiveteau.echo.core.causality.EventIdentifier","location":"library/echo-core/io.github.alexandrepiveteau.echo.core.causality/-event-identifier/index.html","searchKeys":["EventIdentifier","value class EventIdentifier : Comparable<EventIdentifier> ","io.github.alexandrepiveteau.echo.core.causality.EventIdentifier"]},{"name":"value class SequenceNumber : Comparable<SequenceNumber> ","description":"io.github.alexandrepiveteau.echo.core.causality.SequenceNumber","location":"library/echo-core/io.github.alexandrepiveteau.echo.core.causality/-sequence-number/index.html","searchKeys":["SequenceNumber","value class SequenceNumber : Comparable<SequenceNumber> ","io.github.alexandrepiveteau.echo.core.causality.SequenceNumber"]},{"name":"value class SiteIdentifier : Comparable<SiteIdentifier> ","description":"io.github.alexandrepiveteau.echo.core.causality.SiteIdentifier","location":"library/echo-core/io.github.alexandrepiveteau.echo.core.causality/-site-identifier/index.html","searchKeys":["SiteIdentifier","value class SiteIdentifier : Comparable<SiteIdentifier> ","io.github.alexandrepiveteau.echo.core.causality.SiteIdentifier"]},{"name":"fun Route.receiver(block: suspend DefaultWebSocketServerSession.() -> ReceiveExchange<Frame, Frame>)","description":"io.github.alexandrepiveteau.echo.ktor.server.receiver","location":"library/echo-ktor-server/io.github.alexandrepiveteau.echo.ktor.server/receiver.html","searchKeys":["receiver","fun Route.receiver(block: suspend DefaultWebSocketServerSession.() -> ReceiveExchange<Frame, Frame>)","io.github.alexandrepiveteau.echo.ktor.server.receiver"]},{"name":"fun Route.sender(block: suspend DefaultWebSocketServerSession.() -> SendExchange<Frame, Frame>)","description":"io.github.alexandrepiveteau.echo.ktor.server.sender","location":"library/echo-ktor-server/io.github.alexandrepiveteau.echo.ktor.server/sender.html","searchKeys":["sender","fun Route.sender(block: suspend DefaultWebSocketServerSession.() -> SendExchange<Frame, Frame>)","io.github.alexandrepiveteau.echo.ktor.server.sender"]},{"name":"abstract fun cancel()","description":"io.github.alexandrepiveteau.echo.webrtc.client.Peer.cancel","location":"library/echo-webrtc-client/io.github.alexandrepiveteau.echo.webrtc.client/-peer/cancel.html","searchKeys":["cancel","abstract fun cancel()","io.github.alexandrepiveteau.echo.webrtc.client.Peer.cancel"]},{"name":"abstract suspend fun receiveCatching(): ChannelResult<String>","description":"io.github.alexandrepiveteau.echo.webrtc.client.PeerToPeerConnection.receiveCatching","location":"library/echo-webrtc-client/io.github.alexandrepiveteau.echo.webrtc.client/-peer-to-peer-connection/receive-catching.html","searchKeys":["receiveCatching","abstract suspend fun receiveCatching(): ChannelResult<String>","io.github.alexandrepiveteau.echo.webrtc.client.PeerToPeerConnection.receiveCatching"]},{"name":"abstract suspend fun sendCatching(message: String): ChannelResult<Unit>","description":"io.github.alexandrepiveteau.echo.webrtc.client.PeerToPeerConnection.sendCatching","location":"library/echo-webrtc-client/io.github.alexandrepiveteau.echo.webrtc.client/-peer-to-peer-connection/send-catching.html","searchKeys":["sendCatching","abstract suspend fun sendCatching(message: String): ChannelResult<Unit>","io.github.alexandrepiveteau.echo.webrtc.client.PeerToPeerConnection.sendCatching"]},{"name":"abstract val identifier: PeerIdentifier","description":"io.github.alexandrepiveteau.echo.webrtc.client.Peer.identifier","location":"library/echo-webrtc-client/io.github.alexandrepiveteau.echo.webrtc.client/-peer/identifier.html","searchKeys":["identifier","abstract val identifier: PeerIdentifier","io.github.alexandrepiveteau.echo.webrtc.client.Peer.identifier"]},{"name":"abstract val peers: SharedFlow<Set<Peer>>","description":"io.github.alexandrepiveteau.echo.webrtc.client.SignalingServer.peers","location":"library/echo-webrtc-client/io.github.alexandrepiveteau.echo.webrtc.client/-signaling-server/peers.html","searchKeys":["peers","abstract val peers: SharedFlow<Set<Peer>>","io.github.alexandrepiveteau.echo.webrtc.client.SignalingServer.peers"]},{"name":"interface Peer : PeerToPeerConnection","description":"io.github.alexandrepiveteau.echo.webrtc.client.Peer","location":"library/echo-webrtc-client/io.github.alexandrepiveteau.echo.webrtc.client/-peer/index.html","searchKeys":["Peer","interface Peer : PeerToPeerConnection","io.github.alexandrepiveteau.echo.webrtc.client.Peer"]},{"name":"interface PeerToPeerConnection","description":"io.github.alexandrepiveteau.echo.webrtc.client.PeerToPeerConnection","location":"library/echo-webrtc-client/io.github.alexandrepiveteau.echo.webrtc.client/-peer-to-peer-connection/index.html","searchKeys":["PeerToPeerConnection","interface PeerToPeerConnection","io.github.alexandrepiveteau.echo.webrtc.client.PeerToPeerConnection"]},{"name":"interface SignalingServer","description":"io.github.alexandrepiveteau.echo.webrtc.client.SignalingServer","location":"library/echo-webrtc-client/io.github.alexandrepiveteau.echo.webrtc.client/-signaling-server/index.html","searchKeys":["SignalingServer","interface SignalingServer","io.github.alexandrepiveteau.echo.webrtc.client.SignalingServer"]},{"name":"suspend fun HttpClient.wsSignalingServer(exchange: SendExchange<Message.Incoming, Message.Outgoing>, request: HttpRequestBuilder.() -> Unit, block: suspend SignalingServer.() -> Unit)","description":"io.github.alexandrepiveteau.echo.webrtc.client.wsSignalingServer","location":"library/echo-webrtc-client/io.github.alexandrepiveteau.echo.webrtc.client/ws-signaling-server.html","searchKeys":["wsSignalingServer","suspend fun HttpClient.wsSignalingServer(exchange: SendExchange<Message.Incoming, Message.Outgoing>, request: HttpRequestBuilder.() -> Unit, block: suspend SignalingServer.() -> Unit)","io.github.alexandrepiveteau.echo.webrtc.client.wsSignalingServer"]},{"name":"suspend fun HttpClient.wssSignalingServer(exchange: SendExchange<Message.Incoming, Message.Outgoing>, request: HttpRequestBuilder.() -> Unit, block: suspend SignalingServer.() -> Unit)","description":"io.github.alexandrepiveteau.echo.webrtc.client.wssSignalingServer","location":"library/echo-webrtc-client/io.github.alexandrepiveteau.echo.webrtc.client/wss-signaling-server.html","searchKeys":["wssSignalingServer","suspend fun HttpClient.wssSignalingServer(exchange: SendExchange<Message.Incoming, Message.Outgoing>, request: HttpRequestBuilder.() -> Unit, block: suspend SignalingServer.() -> Unit)","io.github.alexandrepiveteau.echo.webrtc.client.wssSignalingServer"]},{"name":"suspend fun SignalingServer.sync(exchange: Exchange<Message.Incoming, Message.Outgoing>, onParticipantsChanged: (Set<PeerIdentifier>) -> Unit = {}): Nothing","description":"io.github.alexandrepiveteau.echo.webrtc.client.sync","location":"library/echo-webrtc-client/io.github.alexandrepiveteau.echo.webrtc.client/sync.html","searchKeys":["sync","suspend fun SignalingServer.sync(exchange: Exchange<Message.Incoming, Message.Outgoing>, onParticipantsChanged: (Set<PeerIdentifier>) -> Unit = {}): Nothing","io.github.alexandrepiveteau.echo.webrtc.client.sync"]},{"name":"suspend fun load(session: String, exchange: Exchange<Message.Incoming, Message.Outgoing>)","description":"io.github.alexandrepiveteau.echo.indexeddb.load","location":"library/echo-indexeddb/io.github.alexandrepiveteau.echo.indexeddb/load.html","searchKeys":["load","suspend fun load(session: String, exchange: Exchange<Message.Incoming, Message.Outgoing>)","io.github.alexandrepiveteau.echo.indexeddb.load"]},{"name":"suspend fun save(session: String, exchange: Exchange<Message.Incoming, Message.Outgoing>)","description":"io.github.alexandrepiveteau.echo.indexeddb.save","location":"library/echo-indexeddb/io.github.alexandrepiveteau.echo.indexeddb/save.html","searchKeys":["save","suspend fun save(session: String, exchange: Exchange<Message.Incoming, Message.Outgoing>)","io.github.alexandrepiveteau.echo.indexeddb.save"]},{"name":"abstract fun toServerToClient(from: PeerIdentifier): SignalingMessage.ServerToClient","description":"io.github.alexandrepiveteau.echo.webrtc.signaling.SignalingMessage.ClientToServer.toServerToClient","location":"library/echo-webrtc-signaling/io.github.alexandrepiveteau.echo.webrtc.signaling/-signaling-message/-client-to-server/to-server-to-client.html","searchKeys":["toServerToClient","abstract fun toServerToClient(from: PeerIdentifier): SignalingMessage.ServerToClient","io.github.alexandrepiveteau.echo.webrtc.signaling.SignalingMessage.ClientToServer.toServerToClient"]},{"name":"abstract val to: PeerIdentifier","description":"io.github.alexandrepiveteau.echo.webrtc.signaling.SignalingMessage.ClientToServer.to","location":"library/echo-webrtc-signaling/io.github.alexandrepiveteau.echo.webrtc.signaling/-signaling-message/-client-to-server/to.html","searchKeys":["to","abstract val to: PeerIdentifier","io.github.alexandrepiveteau.echo.webrtc.signaling.SignalingMessage.ClientToServer.to"]},{"name":"data class Answer(val answer: SessionDescription) : ClientToClientMessage","description":"io.github.alexandrepiveteau.echo.webrtc.signaling.ClientToClientMessage.Answer","location":"library/echo-webrtc-signaling/io.github.alexandrepiveteau.echo.webrtc.signaling/-client-to-client-message/-answer/index.html","searchKeys":["Answer","data class Answer(val answer: SessionDescription) : ClientToClientMessage","io.github.alexandrepiveteau.echo.webrtc.signaling.ClientToClientMessage.Answer"]},{"name":"data class Forward(val to: PeerIdentifier, val message: ClientToClientMessage) : SignalingMessage.ClientToServer","description":"io.github.alexandrepiveteau.echo.webrtc.signaling.SignalingMessage.ClientToServer.Forward","location":"library/echo-webrtc-signaling/io.github.alexandrepiveteau.echo.webrtc.signaling/-signaling-message/-client-to-server/-forward/index.html","searchKeys":["Forward","data class Forward(val to: PeerIdentifier, val message: ClientToClientMessage) : SignalingMessage.ClientToServer","io.github.alexandrepiveteau.echo.webrtc.signaling.SignalingMessage.ClientToServer.Forward"]},{"name":"data class GotMessage(val from: PeerIdentifier, val message: ClientToClientMessage) : SignalingMessage.ServerToClient","description":"io.github.alexandrepiveteau.echo.webrtc.signaling.SignalingMessage.ServerToClient.GotMessage","location":"library/echo-webrtc-signaling/io.github.alexandrepiveteau.echo.webrtc.signaling/-signaling-message/-server-to-client/-got-message/index.html","searchKeys":["GotMessage","data class GotMessage(val from: PeerIdentifier, val message: ClientToClientMessage) : SignalingMessage.ServerToClient","io.github.alexandrepiveteau.echo.webrtc.signaling.SignalingMessage.ServerToClient.GotMessage"]},{"name":"data class IceCallee(val ice: IceCandidate) : ClientToClientMessage","description":"io.github.alexandrepiveteau.echo.webrtc.signaling.ClientToClientMessage.IceCallee","location":"library/echo-webrtc-signaling/io.github.alexandrepiveteau.echo.webrtc.signaling/-client-to-client-message/-ice-callee/index.html","searchKeys":["IceCallee","data class IceCallee(val ice: IceCandidate) : ClientToClientMessage","io.github.alexandrepiveteau.echo.webrtc.signaling.ClientToClientMessage.IceCallee"]},{"name":"data class IceCaller(val ice: IceCandidate) : ClientToClientMessage","description":"io.github.alexandrepiveteau.echo.webrtc.signaling.ClientToClientMessage.IceCaller","location":"library/echo-webrtc-signaling/io.github.alexandrepiveteau.echo.webrtc.signaling/-client-to-client-message/-ice-caller/index.html","searchKeys":["IceCaller","data class IceCaller(val ice: IceCandidate) : ClientToClientMessage","io.github.alexandrepiveteau.echo.webrtc.signaling.ClientToClientMessage.IceCaller"]},{"name":"data class Offer(val offer: SessionDescription) : ClientToClientMessage","description":"io.github.alexandrepiveteau.echo.webrtc.signaling.ClientToClientMessage.Offer","location":"library/echo-webrtc-signaling/io.github.alexandrepiveteau.echo.webrtc.signaling/-client-to-client-message/-offer/index.html","searchKeys":["Offer","data class Offer(val offer: SessionDescription) : ClientToClientMessage","io.github.alexandrepiveteau.echo.webrtc.signaling.ClientToClientMessage.Offer"]},{"name":"data class PeerJoined(val peer: PeerIdentifier) : SignalingMessage.ServerToClient","description":"io.github.alexandrepiveteau.echo.webrtc.signaling.SignalingMessage.ServerToClient.PeerJoined","location":"library/echo-webrtc-signaling/io.github.alexandrepiveteau.echo.webrtc.signaling/-signaling-message/-server-to-client/-peer-joined/index.html","searchKeys":["PeerJoined","data class PeerJoined(val peer: PeerIdentifier) : SignalingMessage.ServerToClient","io.github.alexandrepiveteau.echo.webrtc.signaling.SignalingMessage.ServerToClient.PeerJoined"]},{"name":"data class PeerLeft(val peer: PeerIdentifier) : SignalingMessage.ServerToClient","description":"io.github.alexandrepiveteau.echo.webrtc.signaling.SignalingMessage.ServerToClient.PeerLeft","location":"library/echo-webrtc-signaling/io.github.alexandrepiveteau.echo.webrtc.signaling/-signaling-message/-server-to-client/-peer-left/index.html","searchKeys":["PeerLeft","data class PeerLeft(val peer: PeerIdentifier) : SignalingMessage.ServerToClient","io.github.alexandrepiveteau.echo.webrtc.signaling.SignalingMessage.ServerToClient.PeerLeft"]},{"name":"fun Answer(answer: SessionDescription)","description":"io.github.alexandrepiveteau.echo.webrtc.signaling.ClientToClientMessage.Answer.Answer","location":"library/echo-webrtc-signaling/io.github.alexandrepiveteau.echo.webrtc.signaling/-client-to-client-message/-answer/-answer.html","searchKeys":["Answer","fun Answer(answer: SessionDescription)","io.github.alexandrepiveteau.echo.webrtc.signaling.ClientToClientMessage.Answer.Answer"]},{"name":"fun Forward(to: PeerIdentifier, message: ClientToClientMessage)","description":"io.github.alexandrepiveteau.echo.webrtc.signaling.SignalingMessage.ClientToServer.Forward.Forward","location":"library/echo-webrtc-signaling/io.github.alexandrepiveteau.echo.webrtc.signaling/-signaling-message/-client-to-server/-forward/-forward.html","searchKeys":["Forward","fun Forward(to: PeerIdentifier, message: ClientToClientMessage)","io.github.alexandrepiveteau.echo.webrtc.signaling.SignalingMessage.ClientToServer.Forward.Forward"]},{"name":"fun GotMessage(from: PeerIdentifier, message: ClientToClientMessage)","description":"io.github.alexandrepiveteau.echo.webrtc.signaling.SignalingMessage.ServerToClient.GotMessage.GotMessage","location":"library/echo-webrtc-signaling/io.github.alexandrepiveteau.echo.webrtc.signaling/-signaling-message/-server-to-client/-got-message/-got-message.html","searchKeys":["GotMessage","fun GotMessage(from: PeerIdentifier, message: ClientToClientMessage)","io.github.alexandrepiveteau.echo.webrtc.signaling.SignalingMessage.ServerToClient.GotMessage.GotMessage"]},{"name":"fun IceCallee(ice: IceCandidate)","description":"io.github.alexandrepiveteau.echo.webrtc.signaling.ClientToClientMessage.IceCallee.IceCallee","location":"library/echo-webrtc-signaling/io.github.alexandrepiveteau.echo.webrtc.signaling/-client-to-client-message/-ice-callee/-ice-callee.html","searchKeys":["IceCallee","fun IceCallee(ice: IceCandidate)","io.github.alexandrepiveteau.echo.webrtc.signaling.ClientToClientMessage.IceCallee.IceCallee"]},{"name":"fun IceCaller(ice: IceCandidate)","description":"io.github.alexandrepiveteau.echo.webrtc.signaling.ClientToClientMessage.IceCaller.IceCaller","location":"library/echo-webrtc-signaling/io.github.alexandrepiveteau.echo.webrtc.signaling/-client-to-client-message/-ice-caller/-ice-caller.html","searchKeys":["IceCaller","fun IceCaller(ice: IceCandidate)","io.github.alexandrepiveteau.echo.webrtc.signaling.ClientToClientMessage.IceCaller.IceCaller"]},{"name":"fun IceCandidate(json: String)","description":"io.github.alexandrepiveteau.echo.webrtc.signaling.IceCandidate.IceCandidate","location":"library/echo-webrtc-signaling/io.github.alexandrepiveteau.echo.webrtc.signaling/-ice-candidate/-ice-candidate.html","searchKeys":["IceCandidate","fun IceCandidate(json: String)","io.github.alexandrepiveteau.echo.webrtc.signaling.IceCandidate.IceCandidate"]},{"name":"fun Offer(offer: SessionDescription)","description":"io.github.alexandrepiveteau.echo.webrtc.signaling.ClientToClientMessage.Offer.Offer","location":"library/echo-webrtc-signaling/io.github.alexandrepiveteau.echo.webrtc.signaling/-client-to-client-message/-offer/-offer.html","searchKeys":["Offer","fun Offer(offer: SessionDescription)","io.github.alexandrepiveteau.echo.webrtc.signaling.ClientToClientMessage.Offer.Offer"]},{"name":"fun PeerIdentifier(id: Int)","description":"io.github.alexandrepiveteau.echo.webrtc.signaling.PeerIdentifier.PeerIdentifier","location":"library/echo-webrtc-signaling/io.github.alexandrepiveteau.echo.webrtc.signaling/-peer-identifier/-peer-identifier.html","searchKeys":["PeerIdentifier","fun PeerIdentifier(id: Int)","io.github.alexandrepiveteau.echo.webrtc.signaling.PeerIdentifier.PeerIdentifier"]},{"name":"fun PeerJoined(peer: PeerIdentifier)","description":"io.github.alexandrepiveteau.echo.webrtc.signaling.SignalingMessage.ServerToClient.PeerJoined.PeerJoined","location":"library/echo-webrtc-signaling/io.github.alexandrepiveteau.echo.webrtc.signaling/-signaling-message/-server-to-client/-peer-joined/-peer-joined.html","searchKeys":["PeerJoined","fun PeerJoined(peer: PeerIdentifier)","io.github.alexandrepiveteau.echo.webrtc.signaling.SignalingMessage.ServerToClient.PeerJoined.PeerJoined"]},{"name":"fun PeerLeft(peer: PeerIdentifier)","description":"io.github.alexandrepiveteau.echo.webrtc.signaling.SignalingMessage.ServerToClient.PeerLeft.PeerLeft","location":"library/echo-webrtc-signaling/io.github.alexandrepiveteau.echo.webrtc.signaling/-signaling-message/-server-to-client/-peer-left/-peer-left.html","searchKeys":["PeerLeft","fun PeerLeft(peer: PeerIdentifier)","io.github.alexandrepiveteau.echo.webrtc.signaling.SignalingMessage.ServerToClient.PeerLeft.PeerLeft"]},{"name":"fun SessionDescription(json: String)","description":"io.github.alexandrepiveteau.echo.webrtc.signaling.SessionDescription.SessionDescription","location":"library/echo-webrtc-signaling/io.github.alexandrepiveteau.echo.webrtc.signaling/-session-description/-session-description.html","searchKeys":["SessionDescription","fun SessionDescription(json: String)","io.github.alexandrepiveteau.echo.webrtc.signaling.SessionDescription.SessionDescription"]},{"name":"open override fun toServerToClient(from: PeerIdentifier): SignalingMessage.ServerToClient.GotMessage","description":"io.github.alexandrepiveteau.echo.webrtc.signaling.SignalingMessage.ClientToServer.Forward.toServerToClient","location":"library/echo-webrtc-signaling/io.github.alexandrepiveteau.echo.webrtc.signaling/-signaling-message/-client-to-server/-forward/to-server-to-client.html","searchKeys":["toServerToClient","open override fun toServerToClient(from: PeerIdentifier): SignalingMessage.ServerToClient.GotMessage","io.github.alexandrepiveteau.echo.webrtc.signaling.SignalingMessage.ClientToServer.Forward.toServerToClient"]},{"name":"open override fun toString(): String","description":"io.github.alexandrepiveteau.echo.webrtc.signaling.IceCandidate.toString","location":"library/echo-webrtc-signaling/io.github.alexandrepiveteau.echo.webrtc.signaling/-ice-candidate/to-string.html","searchKeys":["toString","open override fun toString(): String","io.github.alexandrepiveteau.echo.webrtc.signaling.IceCandidate.toString"]},{"name":"open override fun toString(): String","description":"io.github.alexandrepiveteau.echo.webrtc.signaling.PeerIdentifier.toString","location":"library/echo-webrtc-signaling/io.github.alexandrepiveteau.echo.webrtc.signaling/-peer-identifier/to-string.html","searchKeys":["toString","open override fun toString(): String","io.github.alexandrepiveteau.echo.webrtc.signaling.PeerIdentifier.toString"]},{"name":"open override fun toString(): String","description":"io.github.alexandrepiveteau.echo.webrtc.signaling.SessionDescription.toString","location":"library/echo-webrtc-signaling/io.github.alexandrepiveteau.echo.webrtc.signaling/-session-description/to-string.html","searchKeys":["toString","open override fun toString(): String","io.github.alexandrepiveteau.echo.webrtc.signaling.SessionDescription.toString"]},{"name":"open override val to: PeerIdentifier","description":"io.github.alexandrepiveteau.echo.webrtc.signaling.SignalingMessage.ClientToServer.Forward.to","location":"library/echo-webrtc-signaling/io.github.alexandrepiveteau.echo.webrtc.signaling/-signaling-message/-client-to-server/-forward/to.html","searchKeys":["to","open override val to: PeerIdentifier","io.github.alexandrepiveteau.echo.webrtc.signaling.SignalingMessage.ClientToServer.Forward.to"]},{"name":"sealed class ClientToClientMessage","description":"io.github.alexandrepiveteau.echo.webrtc.signaling.ClientToClientMessage","location":"library/echo-webrtc-signaling/io.github.alexandrepiveteau.echo.webrtc.signaling/-client-to-client-message/index.html","searchKeys":["ClientToClientMessage","sealed class ClientToClientMessage","io.github.alexandrepiveteau.echo.webrtc.signaling.ClientToClientMessage"]},{"name":"sealed class ClientToServer : SignalingMessage","description":"io.github.alexandrepiveteau.echo.webrtc.signaling.SignalingMessage.ClientToServer","location":"library/echo-webrtc-signaling/io.github.alexandrepiveteau.echo.webrtc.signaling/-signaling-message/-client-to-server/index.html","searchKeys":["ClientToServer","sealed class ClientToServer : SignalingMessage","io.github.alexandrepiveteau.echo.webrtc.signaling.SignalingMessage.ClientToServer"]},{"name":"sealed class ServerToClient : SignalingMessage","description":"io.github.alexandrepiveteau.echo.webrtc.signaling.SignalingMessage.ServerToClient","location":"library/echo-webrtc-signaling/io.github.alexandrepiveteau.echo.webrtc.signaling/-signaling-message/-server-to-client/index.html","searchKeys":["ServerToClient","sealed class ServerToClient : SignalingMessage","io.github.alexandrepiveteau.echo.webrtc.signaling.SignalingMessage.ServerToClient"]},{"name":"sealed class SignalingMessage","description":"io.github.alexandrepiveteau.echo.webrtc.signaling.SignalingMessage","location":"library/echo-webrtc-signaling/io.github.alexandrepiveteau.echo.webrtc.signaling/-signaling-message/index.html","searchKeys":["SignalingMessage","sealed class SignalingMessage","io.github.alexandrepiveteau.echo.webrtc.signaling.SignalingMessage"]},{"name":"val answer: SessionDescription","description":"io.github.alexandrepiveteau.echo.webrtc.signaling.ClientToClientMessage.Answer.answer","location":"library/echo-webrtc-signaling/io.github.alexandrepiveteau.echo.webrtc.signaling/-client-to-client-message/-answer/answer.html","searchKeys":["answer","val answer: SessionDescription","io.github.alexandrepiveteau.echo.webrtc.signaling.ClientToClientMessage.Answer.answer"]},{"name":"val from: PeerIdentifier","description":"io.github.alexandrepiveteau.echo.webrtc.signaling.SignalingMessage.ServerToClient.GotMessage.from","location":"library/echo-webrtc-signaling/io.github.alexandrepiveteau.echo.webrtc.signaling/-signaling-message/-server-to-client/-got-message/from.html","searchKeys":["from","val from: PeerIdentifier","io.github.alexandrepiveteau.echo.webrtc.signaling.SignalingMessage.ServerToClient.GotMessage.from"]},{"name":"val ice: IceCandidate","description":"io.github.alexandrepiveteau.echo.webrtc.signaling.ClientToClientMessage.IceCallee.ice","location":"library/echo-webrtc-signaling/io.github.alexandrepiveteau.echo.webrtc.signaling/-client-to-client-message/-ice-callee/ice.html","searchKeys":["ice","val ice: IceCandidate","io.github.alexandrepiveteau.echo.webrtc.signaling.ClientToClientMessage.IceCallee.ice"]},{"name":"val ice: IceCandidate","description":"io.github.alexandrepiveteau.echo.webrtc.signaling.ClientToClientMessage.IceCaller.ice","location":"library/echo-webrtc-signaling/io.github.alexandrepiveteau.echo.webrtc.signaling/-client-to-client-message/-ice-caller/ice.html","searchKeys":["ice","val ice: IceCandidate","io.github.alexandrepiveteau.echo.webrtc.signaling.ClientToClientMessage.IceCaller.ice"]},{"name":"val id: Int","description":"io.github.alexandrepiveteau.echo.webrtc.signaling.PeerIdentifier.id","location":"library/echo-webrtc-signaling/io.github.alexandrepiveteau.echo.webrtc.signaling/-peer-identifier/id.html","searchKeys":["id","val id: Int","io.github.alexandrepiveteau.echo.webrtc.signaling.PeerIdentifier.id"]},{"name":"val json: String","description":"io.github.alexandrepiveteau.echo.webrtc.signaling.IceCandidate.json","location":"library/echo-webrtc-signaling/io.github.alexandrepiveteau.echo.webrtc.signaling/-ice-candidate/json.html","searchKeys":["json","val json: String","io.github.alexandrepiveteau.echo.webrtc.signaling.IceCandidate.json"]},{"name":"val json: String","description":"io.github.alexandrepiveteau.echo.webrtc.signaling.SessionDescription.json","location":"library/echo-webrtc-signaling/io.github.alexandrepiveteau.echo.webrtc.signaling/-session-description/json.html","searchKeys":["json","val json: String","io.github.alexandrepiveteau.echo.webrtc.signaling.SessionDescription.json"]},{"name":"val message: ClientToClientMessage","description":"io.github.alexandrepiveteau.echo.webrtc.signaling.SignalingMessage.ClientToServer.Forward.message","location":"library/echo-webrtc-signaling/io.github.alexandrepiveteau.echo.webrtc.signaling/-signaling-message/-client-to-server/-forward/message.html","searchKeys":["message","val message: ClientToClientMessage","io.github.alexandrepiveteau.echo.webrtc.signaling.SignalingMessage.ClientToServer.Forward.message"]},{"name":"val message: ClientToClientMessage","description":"io.github.alexandrepiveteau.echo.webrtc.signaling.SignalingMessage.ServerToClient.GotMessage.message","location":"library/echo-webrtc-signaling/io.github.alexandrepiveteau.echo.webrtc.signaling/-signaling-message/-server-to-client/-got-message/message.html","searchKeys":["message","val message: ClientToClientMessage","io.github.alexandrepiveteau.echo.webrtc.signaling.SignalingMessage.ServerToClient.GotMessage.message"]},{"name":"val offer: SessionDescription","description":"io.github.alexandrepiveteau.echo.webrtc.signaling.ClientToClientMessage.Offer.offer","location":"library/echo-webrtc-signaling/io.github.alexandrepiveteau.echo.webrtc.signaling/-client-to-client-message/-offer/offer.html","searchKeys":["offer","val offer: SessionDescription","io.github.alexandrepiveteau.echo.webrtc.signaling.ClientToClientMessage.Offer.offer"]},{"name":"val peer: PeerIdentifier","description":"io.github.alexandrepiveteau.echo.webrtc.signaling.SignalingMessage.ServerToClient.PeerJoined.peer","location":"library/echo-webrtc-signaling/io.github.alexandrepiveteau.echo.webrtc.signaling/-signaling-message/-server-to-client/-peer-joined/peer.html","searchKeys":["peer","val peer: PeerIdentifier","io.github.alexandrepiveteau.echo.webrtc.signaling.SignalingMessage.ServerToClient.PeerJoined.peer"]},{"name":"val peer: PeerIdentifier","description":"io.github.alexandrepiveteau.echo.webrtc.signaling.SignalingMessage.ServerToClient.PeerLeft.peer","location":"library/echo-webrtc-signaling/io.github.alexandrepiveteau.echo.webrtc.signaling/-signaling-message/-server-to-client/-peer-left/peer.html","searchKeys":["peer","val peer: PeerIdentifier","io.github.alexandrepiveteau.echo.webrtc.signaling.SignalingMessage.ServerToClient.PeerLeft.peer"]},{"name":"value class IceCandidate(val json: String)","description":"io.github.alexandrepiveteau.echo.webrtc.signaling.IceCandidate","location":"library/echo-webrtc-signaling/io.github.alexandrepiveteau.echo.webrtc.signaling/-ice-candidate/index.html","searchKeys":["IceCandidate","value class IceCandidate(val json: String)","io.github.alexandrepiveteau.echo.webrtc.signaling.IceCandidate"]},{"name":"value class PeerIdentifier(val id: Int)","description":"io.github.alexandrepiveteau.echo.webrtc.signaling.PeerIdentifier","location":"library/echo-webrtc-signaling/io.github.alexandrepiveteau.echo.webrtc.signaling/-peer-identifier/index.html","searchKeys":["PeerIdentifier","value class PeerIdentifier(val id: Int)","io.github.alexandrepiveteau.echo.webrtc.signaling.PeerIdentifier"]},{"name":"value class SessionDescription(val json: String)","description":"io.github.alexandrepiveteau.echo.webrtc.signaling.SessionDescription","location":"library/echo-webrtc-signaling/io.github.alexandrepiveteau.echo.webrtc.signaling/-session-description/index.html","searchKeys":["SessionDescription","value class SessionDescription(val json: String)","io.github.alexandrepiveteau.echo.webrtc.signaling.SessionDescription"]}]